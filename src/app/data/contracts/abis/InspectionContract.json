{
  "contractName": "InspectionContract",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "activistExists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "activistsCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "document",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "documentType",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "country",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "state",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "city",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "cep",
          "type": "string"
        }
      ],
      "name": "addActivist",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "activistWallet",
              "type": "address"
            },
            {
              "internalType": "enum UserContract.UserType",
              "name": "userType",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "document",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "documentType",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "recentInspection",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "totalInspections",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "country",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "state",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "city",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "cep",
                  "type": "string"
                }
              ],
              "internalType": "struct ActivistContract.ActivistAddress",
              "name": "activistAddress",
              "type": "tuple"
            }
          ],
          "internalType": "struct ActivistContract.Activist",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "totallySustainable",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "partiallySustainable",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "neutro",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "partiallyNotSustainable",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "totallyNotSustainable",
          "type": "string"
        }
      ],
      "name": "addCategory",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "document",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "documentType",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "country",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "state",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "city",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "cep",
          "type": "string"
        }
      ],
      "name": "addProducer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "category",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "createdBy",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "totallySustainable",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "partiallySustainable",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "neutro",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "partiallyNotSustainable",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "totallyNotSustainable",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "votesCount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "categoryCounts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "getActivist",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "activistWallet",
              "type": "address"
            },
            {
              "internalType": "enum UserContract.UserType",
              "name": "userType",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "document",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "documentType",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "recentInspection",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "totalInspections",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "country",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "state",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "city",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "cep",
                  "type": "string"
                }
              ],
              "internalType": "struct ActivistContract.ActivistAddress",
              "name": "activistAddress",
              "type": "tuple"
            }
          ],
          "internalType": "struct ActivistContract.Activist",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getActivists",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "activistWallet",
              "type": "address"
            },
            {
              "internalType": "enum UserContract.UserType",
              "name": "userType",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "document",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "documentType",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "recentInspection",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "totalInspections",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "country",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "state",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "city",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "cep",
                  "type": "string"
                }
              ],
              "internalType": "struct ActivistContract.ActivistAddress",
              "name": "activistAddress",
              "type": "tuple"
            }
          ],
          "internalType": "struct ActivistContract.Activist[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCategories",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "createdBy",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "totallySustainable",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "partiallySustainable",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "neutro",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "partiallyNotSustainable",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "totallyNotSustainable",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "votesCount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "internalType": "struct CategoryContract.Category[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getCategory",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "createdBy",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "totallySustainable",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "partiallySustainable",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "neutro",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "partiallyNotSustainable",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "totallyNotSustainable",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "votesCount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "internalType": "struct CategoryContract.Category",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getIsas",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "getProducer",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "producer_wallet",
              "type": "address"
            },
            {
              "internalType": "enum UserContract.UserType",
              "name": "userType",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "document",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "documentType",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "recentInspection",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "totalRequests",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "isaPoints",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "allowed",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "withdrewToken",
                  "type": "bool"
                }
              ],
              "internalType": "struct ProducerContract.TokenApprove",
              "name": "tokenApprove",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "country",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "state",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "city",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "cep",
                  "type": "string"
                }
              ],
              "internalType": "struct ProducerContract.PropertyAddress",
              "name": "property_address",
              "type": "tuple"
            }
          ],
          "internalType": "struct ProducerContract.Producer",
          "name": "producer",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "address_",
          "type": "address"
        }
      ],
      "name": "getProducerApprove",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProducers",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "producer_wallet",
              "type": "address"
            },
            {
              "internalType": "enum UserContract.UserType",
              "name": "userType",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "document",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "documentType",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "recentInspection",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "totalRequests",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "isaPoints",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "allowed",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "withdrewToken",
                  "type": "bool"
                }
              ],
              "internalType": "struct ProducerContract.TokenApprove",
              "name": "tokenApprove",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "country",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "state",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "city",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "cep",
                  "type": "string"
                }
              ],
              "internalType": "struct ProducerContract.PropertyAddress",
              "name": "property_address",
              "type": "tuple"
            }
          ],
          "internalType": "struct ProducerContract.Producer[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "getUser",
      "outputs": [
        {
          "internalType": "enum UserContract.UserType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUserTypes",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "producerExists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "producersCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "producersList",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "producer_wallet",
          "type": "address"
        },
        {
          "internalType": "enum UserContract.UserType",
          "name": "userType",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "document",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "documentType",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "recentInspection",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "totalRequests",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "isaPoints",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "allowed",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "withdrewToken",
              "type": "bool"
            }
          ],
          "internalType": "struct ProducerContract.TokenApprove",
          "name": "tokenApprove",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "country",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "state",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "city",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "cep",
              "type": "string"
            }
          ],
          "internalType": "struct ProducerContract.PropertyAddress",
          "name": "property_address",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usersCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "vote",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getInspectionsHistory",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "enum InspectionContract.InspectionStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "producerWallet",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "activistWallet",
              "type": "address"
            },
            {
              "internalType": "uint256[][]",
              "name": "isas",
              "type": "uint256[][]"
            },
            {
              "internalType": "uint256",
              "name": "isaPoints",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiresIn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "createdAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "internalType": "struct InspectionContract.Inspection[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "requestInspection",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "inspectionId",
          "type": "uint256"
        }
      ],
      "name": "acceptInspection",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "inspectionId",
          "type": "uint256"
        },
        {
          "internalType": "uint256[][]",
          "name": "isas",
          "type": "uint256[][]"
        }
      ],
      "name": "realizeInspection",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getInspection",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "enum InspectionContract.InspectionStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "producerWallet",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "activistWallet",
              "type": "address"
            },
            {
              "internalType": "uint256[][]",
              "name": "isas",
              "type": "uint256[][]"
            },
            {
              "internalType": "uint256",
              "name": "isaPoints",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiresIn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "createdAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "internalType": "struct InspectionContract.Inspection",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getInspections",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "enum InspectionContract.InspectionStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "producerWallet",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "activistWallet",
              "type": "address"
            },
            {
              "internalType": "uint256[][]",
              "name": "isas",
              "type": "uint256[][]"
            },
            {
              "internalType": "uint256",
              "name": "isaPoints",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiresIn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "createdAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "internalType": "struct InspectionContract.Inspection[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getInspectionsStatus",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "inspectionExists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"inspectionId\",\"type\":\"uint256\"}],\"name\":\"acceptInspection\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"activistExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activistsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"document\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"documentType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"state\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"cep\",\"type\":\"string\"}],\"name\":\"addActivist\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"activistWallet\",\"type\":\"address\"},{\"internalType\":\"enum UserContract.UserType\",\"name\":\"userType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"document\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"documentType\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recentInspection\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalInspections\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"state\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"cep\",\"type\":\"string\"}],\"internalType\":\"struct ActivistContract.ActivistAddress\",\"name\":\"activistAddress\",\"type\":\"tuple\"}],\"internalType\":\"struct ActivistContract.Activist\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"totallySustainable\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"partiallySustainable\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"neutro\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"partiallyNotSustainable\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"totallyNotSustainable\",\"type\":\"string\"}],\"name\":\"addCategory\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"document\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"documentType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"state\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"cep\",\"type\":\"string\"}],\"name\":\"addProducer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"category\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"createdBy\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"totallySustainable\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"partiallySustainable\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"neutro\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"partiallyNotSustainable\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"totallyNotSustainable\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"votesCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"categoryCounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getActivist\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"activistWallet\",\"type\":\"address\"},{\"internalType\":\"enum UserContract.UserType\",\"name\":\"userType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"document\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"documentType\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recentInspection\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalInspections\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"state\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"cep\",\"type\":\"string\"}],\"internalType\":\"struct ActivistContract.ActivistAddress\",\"name\":\"activistAddress\",\"type\":\"tuple\"}],\"internalType\":\"struct ActivistContract.Activist\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActivists\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"activistWallet\",\"type\":\"address\"},{\"internalType\":\"enum UserContract.UserType\",\"name\":\"userType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"document\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"documentType\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recentInspection\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalInspections\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"state\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"cep\",\"type\":\"string\"}],\"internalType\":\"struct ActivistContract.ActivistAddress\",\"name\":\"activistAddress\",\"type\":\"tuple\"}],\"internalType\":\"struct ActivistContract.Activist[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCategories\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"createdBy\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"totallySustainable\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"partiallySustainable\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"neutro\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"partiallyNotSustainable\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"totallyNotSustainable\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"votesCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"internalType\":\"struct CategoryContract.Category[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getCategory\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"createdBy\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"totallySustainable\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"partiallySustainable\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"neutro\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"partiallyNotSustainable\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"totallyNotSustainable\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"votesCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"internalType\":\"struct CategoryContract.Category\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getInspection\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum InspectionContract.InspectionStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"producerWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"activistWallet\",\"type\":\"address\"},{\"internalType\":\"uint256[][]\",\"name\":\"isas\",\"type\":\"uint256[][]\"},{\"internalType\":\"uint256\",\"name\":\"isaPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiresIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"internalType\":\"struct InspectionContract.Inspection\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInspections\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum InspectionContract.InspectionStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"producerWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"activistWallet\",\"type\":\"address\"},{\"internalType\":\"uint256[][]\",\"name\":\"isas\",\"type\":\"uint256[][]\"},{\"internalType\":\"uint256\",\"name\":\"isaPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiresIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"internalType\":\"struct InspectionContract.Inspection[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInspectionsHistory\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum InspectionContract.InspectionStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"producerWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"activistWallet\",\"type\":\"address\"},{\"internalType\":\"uint256[][]\",\"name\":\"isas\",\"type\":\"uint256[][]\"},{\"internalType\":\"uint256\",\"name\":\"isaPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiresIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"internalType\":\"struct InspectionContract.Inspection[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInspectionsStatus\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getIsas\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getProducer\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"producer_wallet\",\"type\":\"address\"},{\"internalType\":\"enum UserContract.UserType\",\"name\":\"userType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"document\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"documentType\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recentInspection\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalRequests\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"isaPoints\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"allowed\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"withdrewToken\",\"type\":\"bool\"}],\"internalType\":\"struct ProducerContract.TokenApprove\",\"name\":\"tokenApprove\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"state\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"cep\",\"type\":\"string\"}],\"internalType\":\"struct ProducerContract.PropertyAddress\",\"name\":\"property_address\",\"type\":\"tuple\"}],\"internalType\":\"struct ProducerContract.Producer\",\"name\":\"producer\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"address_\",\"type\":\"address\"}],\"name\":\"getProducerApprove\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProducers\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"producer_wallet\",\"type\":\"address\"},{\"internalType\":\"enum UserContract.UserType\",\"name\":\"userType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"document\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"documentType\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recentInspection\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalRequests\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"isaPoints\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"allowed\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"withdrewToken\",\"type\":\"bool\"}],\"internalType\":\"struct ProducerContract.TokenApprove\",\"name\":\"tokenApprove\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"state\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"cep\",\"type\":\"string\"}],\"internalType\":\"struct ProducerContract.PropertyAddress\",\"name\":\"property_address\",\"type\":\"tuple\"}],\"internalType\":\"struct ProducerContract.Producer[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getUser\",\"outputs\":[{\"internalType\":\"enum UserContract.UserType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUserTypes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"inspectionExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"producerExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"producersCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"producersList\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"producer_wallet\",\"type\":\"address\"},{\"internalType\":\"enum UserContract.UserType\",\"name\":\"userType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"document\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"documentType\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recentInspection\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalRequests\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"isaPoints\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"allowed\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"withdrewToken\",\"type\":\"bool\"}],\"internalType\":\"struct ProducerContract.TokenApprove\",\"name\":\"tokenApprove\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"state\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"cep\",\"type\":\"string\"}],\"internalType\":\"struct ProducerContract.PropertyAddress\",\"name\":\"property_address\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"inspectionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[][]\",\"name\":\"isas\",\"type\":\"uint256[][]\"}],\"name\":\"realizeInspection\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestInspection\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usersCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Inpection action core\",\"kind\":\"dev\",\"methods\":{\"acceptInspection(uint256)\":{\"details\":\"Allows the current user (activist) accept a inspection.\",\"params\":{\"inspectionId\":\"The id of the inspection that the activist want accept.\"}},\"activistExists(address)\":{\"details\":\"Check if a specific activist exists\",\"returns\":{\"_0\":\"a bool that represent if a activist exists or not\"}},\"addActivist(string,string,string,string,string,string,string)\":{\"details\":\"Allow a new register of activist\",\"params\":{\"cep\":\"the cep of the activist\",\"city\":\"the of the activist\",\"country\":\"the country where the activist is\",\"document\":\"the document of activist\",\"documentType\":\"the document type type of activist. CPF/CNPJ\",\"name\":\"the name of the activist\",\"state\":\"the state of the activist\"},\"returns\":{\"_0\":\"a Activist\"}},\"addCategory(string,string,string,string,string,string,string)\":{\"details\":\"add a new category\",\"params\":{\"description\":\"the description of category\",\"name\":\"the name of category\",\"neutro\":\"the description text to this metric\",\"partiallyNotSustainable\":\"the description text to this metric\",\"partiallySustainable\":\"the description text to this metric\",\"totallyNotSustainable\":\"the description text to this metric\",\"totallySustainable\":\"the description text to this metric\"},\"returns\":{\"_0\":\"bool\"}},\"addProducer(string,string,string,string,string,string,string)\":{\"details\":\"Allow a new register of producer\",\"params\":{\"cep\":\"the cep of the producer\",\"city\":\"the of the producer\",\"country\":\"the country where the producer is\",\"document\":\"the document of producer\",\"documentType\":\"the document type type of producer. CPF/CNPJ\",\"name\":\"the name of the producer\",\"state\":\"the state of the producer\"}},\"getActivist(address)\":{\"details\":\"Return a specific activist\",\"params\":{\"addr\":\"the address of the activist.\"}},\"getActivists()\":{\"details\":\"Returns all registered activists\",\"returns\":{\"_0\":\"Activist struct array\"}},\"getCategories()\":{\"details\":\"Returns all added categories\",\"returns\":{\"_0\":\"category struc array\"}},\"getCategory(uint256)\":{\"details\":\"get a specific category\",\"params\":{\"id\":\"the id of a category\"}},\"getInspection(uint256)\":{\"details\":\"Returns a inspection by id if that exists.\",\"params\":{\"id\":\"The id of the inspection to return.\"}},\"getInspections()\":{\"details\":\"Returns all requested inspections.\"},\"getInspectionsHistory()\":{\"details\":\"Allows the current user producer/activist get all yours inspections with status INSPECTED\"},\"getInspectionsStatus()\":{\"details\":\"Returns all inpections status string.\"},\"getIsas()\":{\"details\":\"Returns all isas string.\"},\"getProducer(address)\":{\"details\":\"Return a specific producer\",\"params\":{\"addr\":\"the address of the producer.\"}},\"getProducers()\":{\"details\":\"Returns all registered producers\",\"returns\":{\"_0\":\"Producer struct array\"}},\"getUser(address)\":{\"details\":\"Returns the user type if the user is registered\",\"params\":{\"addr\":\"the user address that want check if exists\"}},\"getUserTypes()\":{\"details\":\"Returns the enum UserType of the system\"},\"inspectionExists(uint256)\":{\"details\":\"Check if an inspections exists in mapping.\",\"params\":{\"id\":\"The id of the inspection that the activist want accept.\"}},\"producerExists(address)\":{\"details\":\"Check if a specific producer exists\",\"returns\":{\"_0\":\"a bool that represent if a producer exists or not\"}},\"realizeInspection(uint256,uint256[][])\":{\"details\":\"Allow a activist realize a inspection and mark as INSPECTED\",\"params\":{\"inspectionId\":\"The id of the inspection to be realized\",\"isas\":\"The uint[][] of categoryId and isaIndex. Ex: isas = [ [categoryId, isaIndex], [categoryId, isaIndex] ]\"}},\"requestInspection()\":{\"details\":\"Allows the current user (producer) request a inspection.\"},\"vote(uint256)\":{\"details\":\"Allow a user vote in a category\",\"params\":{\"id\":\"the id of a category that receives a vote.\"},\"returns\":{\"_0\":\"category struc array\"}}},\"title\":\"InspectionContract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/Breno/Downloads/SintropContract (1)/contracts/InspectionContract.sol\":\"InspectionContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/Breno/Downloads/SintropContract (1)/contracts/ActivistContract.sol\":{\"keccak256\":\"0x794888753f84d90f64fcae1558a0e6fb78361bf94725518e3492aa825a210e6a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e3e5c3c962a729d0a174b7c0b6a755c5c06ea9ca3784cf533c9bc5223bc995d6\",\"dweb:/ipfs/QmTityQVBqp2RcgzcKqoJKCFHXaswpzEmebhfqfuT2K6rY\"]},\"/C/Users/Breno/Downloads/SintropContract (1)/contracts/CategoryContract.sol\":{\"keccak256\":\"0xd7344794b5aba6d55742cfff238a42961cda68a99bf78d7f9763da3530f48c85\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://13a4e25d0e1fe304f19d13958c9138a6e42e20dce2ada58b47623e4892f78a9a\",\"dweb:/ipfs/QmX7GPGfXoHsYhgHGUX926edDiF7V7rcFRuaUDRU4AFQad\"]},\"/C/Users/Breno/Downloads/SintropContract (1)/contracts/InspectionContract.sol\":{\"keccak256\":\"0x91cfc9048e0839aec468610632bc96727ea93b6e115992b8d3a6a3c3d50e39c9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://293b7993e3e35651c067f8ee84b4f87c24d28f290ca1da3e6a1e5c036921d44e\",\"dweb:/ipfs/Qme8Wh19cDaS2Ghq9gwBThpNDY7TVa31PumbVngweLQrTz\"]},\"/C/Users/Breno/Downloads/SintropContract (1)/contracts/ProducerContract.sol\":{\"keccak256\":\"0xb36f616f7386b9fdd1d2429b6899c7647f09bb0463883da3ef8f74bc853ec3ab\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bee5100c0d43eedc46f20db2d8301251f5d00292a5f91c79259b72178cdd11e8\",\"dweb:/ipfs/QmSy9V33mKEDHH3vmJqKKtS5M12KcoeL8stYT7mRQath7z\"]},\"/C/Users/Breno/Downloads/SintropContract (1)/contracts/UserContract.sol\":{\"keccak256\":\"0xbd938b28a90dbc3bc48fdd6f06bcdaab1b6a41cd6474bf902421dd7bff08a0a5\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a6840fd294114e6ee87c13f52cfd217df3db14346f4b348640e4e3ebb6671b02\",\"dweb:/ipfs/QmXUoCzJPkaNuiKQhkv3UERAVAEAHim5oDUNSAGxYm48mf\"]}},\"version\":1}",
  "bytecode": "0x608060405262093a8060165534801561001757600080fd5b50615c8580620000286000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c80638ed5540d11610104578063e7857502116100a2578063ef430aa611610071578063ef430aa6146105b7578063f2836670146105d6578063f3052d26146105f6578063fe5a4fa41461061657600080fd5b8063e785750214610574578063e80a7eb914610587578063e9e797ac1461059c578063ee699fc1146105af57600080fd5b8063b7399d88116100de578063b7399d88146103fb578063b92bd2d9146104d8578063dd6850c6146104eb578063e53142e21461056b57600080fd5b80638ed5540d146103b5578063a1c24d64146103c8578063aab147b2146103db57600080fd5b806362efeff71161017c5780637333afcf1161014b5780637333afcf1461036557806386ae2fb11461036e5780638c4772fc146103765780638cf054421461038957600080fd5b806362efeff7146102a75780636337dc1a146102ba5780636ba13a82146103235780636f77926b1461032c57600080fd5b80630cc94acc116101b85780630cc94acc1461023357806340f528411461025d57806342e187dd1461027d5780634db0412c1461029257600080fd5b80630121b93f146101df57806309e1b1d1146102075780630bbec3c21461021e575b600080fd5b6101f26101ed366004614eee565b61063a565b60405190151581526020015b60405180910390f35b61021060075481565b6040519081526020016101fe565b610226610713565b6040516101fe9190615069565b610246610241366004614eee565b6108b0565b6040516101fe9b9a99989796959493929190615183565b61027061026b3660046152f0565b610d30565b6040516101fe91906154d0565b6102856110e4565b6040516101fe91906154ea565b61029a6115bc565b6040516101fe919061563a565b6102706102b536600461568f565b611a45565b604080518082018252600880825267282927a22aa1a2a960c11b60208084019190915283518085018552918252671050d512559254d560c21b8282015283518085018552600a8152692922a9a2a0a921a422a960b11b9181019190915292516101fe93906156b8565b61021060015481565b61035861033a36600461568f565b6001600160a01b031660009081526020819052604090205460ff1690565b6040516101fe91906156f1565b61021060135481565b6101f2611ef3565b6101f261038436600461568f565b61204b565b61021061039736600461568f565b6001600160a01b031660009081526003602052604090206008015490565b6101f26103c33660046152f0565b61207e565b6101f26103d63660046152f0565b612487565b6103ee6103e936600461568f565b6128e0565b6040516101fe91906157e7565b604080518082018252601380825272544f54414c4c595f5355535441494e41424c4560681b60208084019190915283518085018552918252725041525449414c5f5355535441494e41424c4560681b828201528351808501855260068152654e455554524f60d01b818301528451808601865260178082527f5041525449414c5f4e4f545f5355535441494e41424c4500000000000000000082850152865180880188529081527f544f54414c4c595f4e4f545f5355535441494e41424c450000000000000000009381019390935294516101fe959192906157fa565b6101f26104e636600461588b565b612b82565b604080518082018252600481526327a822a760e11b6020808301919091528251808401845260078152661156141254915160ca1b81830152835180850185526009815268125394d41150d5115160ba1b818401528451808601865260088152671050d0d15415115160c21b9381019390935293516101fe949192906159a3565b61021060045481565b6101f2610582366004614eee565b612dfc565b61058f6131c0565b6040516101fe91906159fb565b6101f26105aa36600461568f565b6136ce565b6102266136f7565b6105bf613880565b6040516101fe9b9a99989796959493929190615a50565b6105e96105e4366004614eee565b613c85565b6040516101fe9190615b0f565b610609610604366004614eee565b613e30565b6040516101fe9190615b22565b6101f2610624366004614eee565b6000908152601960205260409020546001111590565b600081815260156020526040812054829061069c5760405162461bcd60e51b815260206004820152601a60248201527f546869732063617465676f727920646f6e27742065786973747300000000000060448201526064015b60405180910390fd5b60008381526015602052604081206009018054916106b983615b4b565b90915550506000838152601560205260409020600a01546014805490919081106106e5576106e5615b66565b6000918252602082206009600b909202010180549161070383615b4b565b9190505550600191505b50919050565b336000908152601860209081526040808320805482518185028101850190935280835260609492939192909184015b828210156108a7578382906000526020600020906008020160405180610120016040529081600082015481526020016001820160009054906101000a900460ff16600381111561079457610794614f07565b60038111156107a5576107a5614f07565b815260018201546001600160a01b0361010090910481166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919060009084015b828210156108685760008481526020908190208301805460408051828502810185019091528181529283018282801561085457602002820191906000526020600020905b815481526020019060010190808311610840575b5050505050815260200190600101906107fc565b50505050815260200160048201548152602001600582015481526020016006820154815260200160078201548152505081526020019060010190610742565b50505050905090565b600281815481106108c057600080fd5b60009182526020909120600e90910201805460018201546002830180549294506001600160a01b03821693600160a01b90920460ff169261090090615b7c565b80601f016020809104026020016040519081016040528092919081815260200182805461092c90615b7c565b80156109795780601f1061094e57610100808354040283529160200191610979565b820191906000526020600020905b81548152906001019060200180831161095c57829003601f168201915b50505050509080600301805461098e90615b7c565b80601f01602080910402602001604051908101604052809291908181526020018280546109ba90615b7c565b8015610a075780601f106109dc57610100808354040283529160200191610a07565b820191906000526020600020905b8154815290600101906020018083116109ea57829003601f168201915b505050505090806004018054610a1c90615b7c565b80601f0160208091040260200160405190810160405280929190818152602001828054610a4890615b7c565b8015610a955780601f10610a6a57610100808354040283529160200191610a95565b820191906000526020600020905b815481529060010190602001808311610a7857829003601f168201915b5050505060058301546006840154600785015460408051808201825260088801548152600988015460ff90811615156020830152825160808101909352600a89018054989991909616979496509294909382908290610af390615b7c565b80601f0160208091040260200160405190810160405280929190818152602001828054610b1f90615b7c565b8015610b6c5780601f10610b4157610100808354040283529160200191610b6c565b820191906000526020600020905b815481529060010190602001808311610b4f57829003601f168201915b50505050508152602001600182018054610b8590615b7c565b80601f0160208091040260200160405190810160405280929190818152602001828054610bb190615b7c565b8015610bfe5780601f10610bd357610100808354040283529160200191610bfe565b820191906000526020600020905b815481529060010190602001808311610be157829003601f168201915b50505050508152602001600282018054610c1790615b7c565b80601f0160208091040260200160405190810160405280929190818152602001828054610c4390615b7c565b8015610c905780601f10610c6557610100808354040283529160200191610c90565b820191906000526020600020905b815481529060010190602001808311610c7357829003601f168201915b50505050508152602001600382018054610ca990615b7c565b80601f0160208091040260200160405190810160405280929190818152602001828054610cd590615b7c565b8015610d225780601f10610cf757610100808354040283529160200191610d22565b820191906000526020600020905b815481529060010190602001808311610d0557829003601f168201915b50505050508152505090508b565b610d38614b6c565b60006007546001610d499190615bb1565b604080516080810182528881526020808201899052818301889052606082018790528251610120810184528481523391810191909152929350600292909160009190810184815260208082018f905260408083018f9052606083018e905260006080840181905260a0840181905260c09093018690526005805460018101825593528351600b9093027f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db08101938455918401517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db190920180546001600160a01b039093166001600160a01b03198416811782559185015194955085949290916001600160a81b031990911617600160a01b836003811115610e6c57610e6c614f07565b021790555060608201518051610e8c916002840191602090910190614be2565b5060808201518051610ea8916003840191602090910190614be2565b5060a08201518051610ec4916004840191602090910190614be2565b5060c082015160058201805460ff191691151591909117905560e08201516006820155610100820151805180516007840191610f0591839160200190614be2565b506020828101518051610f1e9260018501920190614be2565b5060408201518051610f3a916002840191602090910190614be2565b5060608201518051610f56916003840191602090910190614be2565b50503360009081526006602090815260409182902086518155908601516001820180546001600160a01b031981166001600160a01b0390931692831782559388015188975092955091935090916001600160a81b03191617600160a01b836003811115610fc557610fc5614f07565b021790555060608201518051610fe5916002840191602090910190614be2565b5060808201518051611001916003840191602090910190614be2565b5060a0820151805161101d916004840191602090910190614be2565b5060c082015160058201805460ff191691151591909117905560e0820151600682015561010082015180518051600784019161105e91839160200190614be2565b5060208281015180516110779260018501920190614be2565b5060408201518051611093916002840191602090910190614be2565b50606082015180516110af916003840191602090910190614be2565b50506007805493509150600090506110c683615b4b565b91905055506110d533846142ea565b9b9a5050505050505050505050565b60606005805480602002602001604051908101604052809291908181526020016000905b828210156108a75760008481526020908190206040805161012081018252600b86029092018054835260018101546001600160a01b03811694840194909452919290830190600160a01b900460ff16600381111561116857611168614f07565b600381111561117957611179614f07565b815260200160028201805461118d90615b7c565b80601f01602080910402602001604051908101604052809291908181526020018280546111b990615b7c565b80156112065780601f106111db57610100808354040283529160200191611206565b820191906000526020600020905b8154815290600101906020018083116111e957829003601f168201915b5050505050815260200160038201805461121f90615b7c565b80601f016020809104026020016040519081016040528092919081815260200182805461124b90615b7c565b80156112985780601f1061126d57610100808354040283529160200191611298565b820191906000526020600020905b81548152906001019060200180831161127b57829003601f168201915b505050505081526020016004820180546112b190615b7c565b80601f01602080910402602001604051908101604052809291908181526020018280546112dd90615b7c565b801561132a5780601f106112ff5761010080835404028352916020019161132a565b820191906000526020600020905b81548152906001019060200180831161130d57829003601f168201915b5050509183525050600582015460ff161515602082015260068201546040808301919091528051608081019091526007830180546060909301928290829061137190615b7c565b80601f016020809104026020016040519081016040528092919081815260200182805461139d90615b7c565b80156113ea5780601f106113bf576101008083540402835291602001916113ea565b820191906000526020600020905b8154815290600101906020018083116113cd57829003601f168201915b5050505050815260200160018201805461140390615b7c565b80601f016020809104026020016040519081016040528092919081815260200182805461142f90615b7c565b801561147c5780601f106114515761010080835404028352916020019161147c565b820191906000526020600020905b81548152906001019060200180831161145f57829003601f168201915b5050505050815260200160028201805461149590615b7c565b80601f01602080910402602001604051908101604052809291908181526020018280546114c190615b7c565b801561150e5780601f106114e35761010080835404028352916020019161150e565b820191906000526020600020905b8154815290600101906020018083116114f157829003601f168201915b5050505050815260200160038201805461152790615b7c565b80601f016020809104026020016040519081016040528092919081815260200182805461155390615b7c565b80156115a05780601f10611575576101008083540402835291602001916115a0565b820191906000526020600020905b81548152906001019060200180831161158357829003601f168201915b5050505050815250508152505081526020019060010190611108565b60606014805480602002602001604051908101604052809291908181526020016000905b828210156108a75760008481526020908190206040805161016081018252600b86029092018054835260018101546001600160a01b0316938301939093526002830180549293929184019161163490615b7c565b80601f016020809104026020016040519081016040528092919081815260200182805461166090615b7c565b80156116ad5780601f10611682576101008083540402835291602001916116ad565b820191906000526020600020905b81548152906001019060200180831161169057829003601f168201915b505050505081526020016003820180546116c690615b7c565b80601f01602080910402602001604051908101604052809291908181526020018280546116f290615b7c565b801561173f5780601f106117145761010080835404028352916020019161173f565b820191906000526020600020905b81548152906001019060200180831161172257829003601f168201915b5050505050815260200160048201805461175890615b7c565b80601f016020809104026020016040519081016040528092919081815260200182805461178490615b7c565b80156117d15780601f106117a6576101008083540402835291602001916117d1565b820191906000526020600020905b8154815290600101906020018083116117b457829003601f168201915b505050505081526020016005820180546117ea90615b7c565b80601f016020809104026020016040519081016040528092919081815260200182805461181690615b7c565b80156118635780601f1061183857610100808354040283529160200191611863565b820191906000526020600020905b81548152906001019060200180831161184657829003601f168201915b5050505050815260200160068201805461187c90615b7c565b80601f01602080910402602001604051908101604052809291908181526020018280546118a890615b7c565b80156118f55780601f106118ca576101008083540402835291602001916118f5565b820191906000526020600020905b8154815290600101906020018083116118d857829003601f168201915b5050505050815260200160078201805461190e90615b7c565b80601f016020809104026020016040519081016040528092919081815260200182805461193a90615b7c565b80156119875780601f1061195c57610100808354040283529160200191611987565b820191906000526020600020905b81548152906001019060200180831161196a57829003601f168201915b505050505081526020016008820180546119a090615b7c565b80601f01602080910402602001604051908101604052809291908181526020018280546119cc90615b7c565b8015611a195780601f106119ee57610100808354040283529160200191611a19565b820191906000526020600020905b8154815290600101906020018083116119fc57829003601f168201915b5050505050815260200160098201548152602001600a82015481525050815260200190600101906115e0565b611a4d614b6c565b6001600160a01b038281166000908152600660209081526040918290208251610120810184528154815260018201549485169281019290925290929091830190600160a01b900460ff166003811115611aa857611aa8614f07565b6003811115611ab957611ab9614f07565b8152602001600282018054611acd90615b7c565b80601f0160208091040260200160405190810160405280929190818152602001828054611af990615b7c565b8015611b465780601f10611b1b57610100808354040283529160200191611b46565b820191906000526020600020905b815481529060010190602001808311611b2957829003601f168201915b50505050508152602001600382018054611b5f90615b7c565b80601f0160208091040260200160405190810160405280929190818152602001828054611b8b90615b7c565b8015611bd85780601f10611bad57610100808354040283529160200191611bd8565b820191906000526020600020905b815481529060010190602001808311611bbb57829003601f168201915b50505050508152602001600482018054611bf190615b7c565b80601f0160208091040260200160405190810160405280929190818152602001828054611c1d90615b7c565b8015611c6a5780601f10611c3f57610100808354040283529160200191611c6a565b820191906000526020600020905b815481529060010190602001808311611c4d57829003601f168201915b5050509183525050600582015460ff1615156020820152600682015460408083019190915280516080810190915260078301805460609093019282908290611cb190615b7c565b80601f0160208091040260200160405190810160405280929190818152602001828054611cdd90615b7c565b8015611d2a5780601f10611cff57610100808354040283529160200191611d2a565b820191906000526020600020905b815481529060010190602001808311611d0d57829003601f168201915b50505050508152602001600182018054611d4390615b7c565b80601f0160208091040260200160405190810160405280929190818152602001828054611d6f90615b7c565b8015611dbc5780601f10611d9157610100808354040283529160200191611dbc565b820191906000526020600020905b815481529060010190602001808311611d9f57829003601f168201915b50505050508152602001600282018054611dd590615b7c565b80601f0160208091040260200160405190810160405280929190818152602001828054611e0190615b7c565b8015611e4e5780601f10611e2357610100808354040283529160200191611e4e565b820191906000526020600020905b815481529060010190602001808311611e3157829003601f168201915b50505050508152602001600382018054611e6790615b7c565b80601f0160208091040260200160405190810160405280929190818152602001828054611e9390615b7c565b8015611ee05780601f10611eb557610100808354040283529160200191611ee0565b820191906000526020600020905b815481529060010190602001808311611ec357829003601f168201915b5050509190925250505090525092915050565b6000611efe336136ce565b611f615760405162461bcd60e51b815260206004820152602e60248201527f596f7520617265206e6f7420612070726f64756365722120506c65617365207260448201526d65676973746572206173206f6e6560901b6064820152608401610693565b3360009081526003602052604090206005015460ff161561201f5760405162461bcd60e51b815260206004820152606660248201527f596f752068617665206120696e7370656374696f6e2072657175657374204f5060448201527f454e206f7220414343455054454421205761697420612061637469766973742060648201527f7265616c697a6520696e7370656374696f6e206f7220796f752063616e20636c6084820152651bdcd9481a5d60d21b60a482015260c401610693565b61202761433d565b50336000908152600360205260409020600501805460ff1916600190811790915590565b6001600160a01b0381166000908152600660205260408120600201805482919061207490615b7c565b9050119050919050565b60008060045460016120909190615bb1565b60408051608081018252888152602080820189905281830188905260608201879052825180840184526000808252818301819052845161016081018652868152339381019390935294955060019492939092919081018581526020018e81526020018d81526020018c8152602001600015158152602001600081526020016000815260200183815260200184815250905060028190806001815401808255809150506001900390600052602060002090600e02016000909190919091506000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160010160146101000a81548160ff021916908360038111156121ae576121ae614f07565b0217905550606082015180516121ce916002840191602090910190614be2565b50608082015180516121ea916003840191602090910190614be2565b5060a08201518051612206916004840191602090910190614be2565b5060c082015160058201805491151560ff1992831617905560e083015160068301556101008301516007830155610120830151805160088401556020908101516009840180549115159190931617909155610140830151805180519192600a8501926122759284920190614be2565b50602082810151805161228e9260018501920190614be2565b50604082015180516122aa916002840191602090910190614be2565b50606082015180516122c6916003840191602090910190614be2565b50503360009081526003602081815260409283902087518155908701516001820180546001600160a01b031981166001600160a01b0390931692831782559489015189985092965091945090926001600160a81b0319161790600160a01b90849081111561233657612336614f07565b021790555060608201518051612356916002840191602090910190614be2565b5060808201518051612372916003840191602090910190614be2565b5060a0820151805161238e916004840191602090910190614be2565b5060c082015160058201805491151560ff1992831617905560e083015160068301556101008301516007830155610120830151805160088401556020908101516009840180549115159190931617909155610140830151805180519192600a8501926123fd9284920190614be2565b5060208281015180516124169260018501920190614be2565b5060408201518051612432916002840191602090910190614be2565b506060820151805161244e916003840191602090910190614be2565b505060048054935091506000905061246583615b4b565b919050555061247433856142ea565b5060019c9b505050505050505050505050565b60008060135460016124999190615bb1565b905060006124a8600183615bc9565b60408051610160810182528481523360208083018290529282018e9052606082018d9052608082018c905260a082018b905260c082018a905260e082018990526101008201889052600061012083015261014082018490526008868155600980546001600160a01b0319169092179091558d519394509092909161253191600a918f0190614be2565b506060820151805161254d916003840191602090910190614be2565b5060808201518051612569916004840191602090910190614be2565b5060a08201518051612585916005840191602090910190614be2565b5060c082015180516125a1916006840191602090910190614be2565b5060e082015180516125bd916007840191602090910190614be2565b5061010082015180516125da916008840191602090910190614be2565b5061012082015160098083019190915561014090920151600a918201556014805460018101825560009190915260088054600b9092027fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ec810192835593547fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ed850180546001600160a01b0319166001600160a01b039092169190911790558254909391927fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ee90920191906126ad90615b7c565b6126b8929190614c66565b5060038201816003019080546126cd90615b7c565b6126d8929190614c66565b5060048201816004019080546126ed90615b7c565b6126f8929190614c66565b50600582018160050190805461270d90615b7c565b612718929190614c66565b50600682018160060190805461272d90615b7c565b612738929190614c66565b50600782018160070190805461274d90615b7c565b612758929190614c66565b50600882018160080190805461276d90615b7c565b612778929190614c66565b5060098281015482820155600a9283015491830191909155600084815260156020526040902060088054825591546001820180546001600160a01b0319166001600160a01b039092169190911790558254919290916002830191906127dc90615b7c565b6127e7929190614c66565b5060038201816003019080546127fc90615b7c565b612807929190614c66565b50600482018160040190805461281c90615b7c565b612827929190614c66565b50600582018160050190805461283c90615b7c565b612847929190614c66565b50600682018160060190805461285c90615b7c565b612867929190614c66565b50600782018160070190805461287c90615b7c565b612887929190614c66565b50600882018160080190805461289c90615b7c565b6128a7929190614c66565b5060098281015490820155600a91820154910155601380549060006128cb83615b4b565b9091555060019b9a5050505050505050505050565b6128e8614ce1565b6001600160a01b038281166000908152600360208181526040928390208351610160810185528154815260018201549586169281019290925290939092840191600160a01b90910460ff169081111561294357612943614f07565b600381111561295457612954614f07565b815260200160028201805461296890615b7c565b80601f016020809104026020016040519081016040528092919081815260200182805461299490615b7c565b80156129e15780601f106129b6576101008083540402835291602001916129e1565b820191906000526020600020905b8154815290600101906020018083116129c457829003601f168201915b505050505081526020016003820180546129fa90615b7c565b80601f0160208091040260200160405190810160405280929190818152602001828054612a2690615b7c565b8015612a735780601f10612a4857610100808354040283529160200191612a73565b820191906000526020600020905b815481529060010190602001808311612a5657829003601f168201915b50505050508152602001600482018054612a8c90615b7c565b80601f0160208091040260200160405190810160405280929190818152602001828054612ab890615b7c565b8015612b055780601f10612ada57610100808354040283529160200191612b05565b820191906000526020600020905b815481529060010190602001808311612ae857829003601f168201915b5050509183525050600582015460ff90811615156020808401919091526006840154604080850191909152600785015460608501528051808201825260088601548152600986015490931615159183019190915260808084019290925280519182019052600a8301805460a09093019282908290611cb190615b7c565b6000612b8d3361204b565b612ba95760405162461bcd60e51b815260040161069390615be0565b600083815260196020526040902054839060011115612c0a5760405162461bcd60e51b815260206004820152601c60248201527f5468697320696e7370656374696f6e20646f6e277420657869737473000000006044820152606401610693565b612c13846145d1565b612c205760009150612df5565b612c44846000908152601960205260409020600201546001600160a01b0316331490565b612c515760009150612df5565b600084815260196020908152604080832081516101208101909252805482526001810154919290919083019060ff166003811115612c9157612c91614f07565b6003811115612ca257612ca2614f07565b815260018201546001600160a01b0361010090910481166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919060009084015b82821015612d6557600084815260209081902083018054604080518285028101850190915281815292830182828015612d5157602002820191906000526020600020905b815481526020019060010190808311612d3d575b505050505081526020019060010190612cf9565b5050505081526020016004820154815260200160058201548152602001600682015481526020016007820154815250509050612da18185614602565b612daa856147dd565b60a081015160008681526019602090815260408083206001015461010090046001600160a01b031683526003909152902060070155612def81604001516107d0614a65565b60019250505b5092915050565b6000612e073361204b565b612e235760405162461bcd60e51b815260040161069390615be0565b600082815260196020526040902054829060011115612e845760405162461bcd60e51b815260206004820152601c60248201527f5468697320696e7370656374696f6e20646f6e277420657869737473000000006044820152606401610693565b600083815260196020908152604080832081516101208101909252805482526001810154919290919083019060ff166003811115612ec457612ec4614f07565b6003811115612ed557612ed5614f07565b815260018201546001600160a01b0361010090910481166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919060009084015b82821015612f9857600084815260209081902083018054604080518285028101850190915281815292830182828015612f8457602002820191906000526020600020905b815481526020019060010190808311612f70575b505050505081526020019060010190612f2c565b505050908252506004820154602082015260058201546040820152600682015460608201526007909101546080909101529050600081602001516003811115612fe357612fe3614f07565b14612ff257600092505061070d565b60036020828101828152336060850152600087815260199092526040909120835181559051600180830180548695919260ff1990911691849081111561303a5761303a614f07565b02179055506040820151600182018054610100600160a81b0319166101006001600160a01b039384160217905560608301516002830180546001600160a01b031916919092161790556080820151805161309e916003840191602090910190614d7d565b5060a0820151816004015560c0820151816005015560e082015181600601556101008201518160070155905050806017826101000151815481106130e4576130e4615b66565b90600052602060002090600802016000820151816000015560208201518160010160006101000a81548160ff0219169083600381111561312657613126614f07565b02179055506040820151600182018054610100600160a81b0319166101006001600160a01b039384160217905560608301516002830180546001600160a01b031916919092161790556080820151805161318a916003840191602090910190614d7d565b5060a0820151600482015560c0820151600582015560e08201516006820155610100909101516007909101555060019392505050565b60606002805480602002602001604051908101604052809291908181526020016000905b828210156108a75760008481526020908190206040805161016081018252600e86029092018054835260018101546001600160a01b03811694840194909452919290830190600160a01b900460ff16600381111561324457613244614f07565b600381111561325557613255614f07565b815260200160028201805461326990615b7c565b80601f016020809104026020016040519081016040528092919081815260200182805461329590615b7c565b80156132e25780601f106132b7576101008083540402835291602001916132e2565b820191906000526020600020905b8154815290600101906020018083116132c557829003601f168201915b505050505081526020016003820180546132fb90615b7c565b80601f016020809104026020016040519081016040528092919081815260200182805461332790615b7c565b80156133745780601f1061334957610100808354040283529160200191613374565b820191906000526020600020905b81548152906001019060200180831161335757829003601f168201915b5050505050815260200160048201805461338d90615b7c565b80601f01602080910402602001604051908101604052809291908181526020018280546133b990615b7c565b80156134065780601f106133db57610100808354040283529160200191613406565b820191906000526020600020905b8154815290600101906020018083116133e957829003601f168201915b5050509183525050600582015460ff90811615156020808401919091526006840154604080850191909152600785015460608501528051808201825260088601548152600986015490931615159183019190915260808084019290925280519182019052600a8301805460a0909301928290829061348390615b7c565b80601f01602080910402602001604051908101604052809291908181526020018280546134af90615b7c565b80156134fc5780601f106134d1576101008083540402835291602001916134fc565b820191906000526020600020905b8154815290600101906020018083116134df57829003601f168201915b5050505050815260200160018201805461351590615b7c565b80601f016020809104026020016040519081016040528092919081815260200182805461354190615b7c565b801561358e5780601f106135635761010080835404028352916020019161358e565b820191906000526020600020905b81548152906001019060200180831161357157829003601f168201915b505050505081526020016002820180546135a790615b7c565b80601f01602080910402602001604051908101604052809291908181526020018280546135d390615b7c565b80156136205780601f106135f557610100808354040283529160200191613620565b820191906000526020600020905b81548152906001019060200180831161360357829003601f168201915b5050505050815260200160038201805461363990615b7c565b80601f016020809104026020016040519081016040528092919081815260200182805461366590615b7c565b80156136b25780601f10613687576101008083540402835291602001916136b2565b820191906000526020600020905b81548152906001019060200180831161369557829003601f168201915b50505050508152505081525050815260200190600101906131e4565b6001600160a01b0381166000908152600360205260408120600201805482919061207490615b7c565b60606017805480602002602001604051908101604052809291908181526020016000905b828210156108a7578382906000526020600020906008020160405180610120016040529081600082015481526020016001820160009054906101000a900460ff16600381111561376d5761376d614f07565b600381111561377e5761377e614f07565b815260018201546001600160a01b0361010090910481166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919060009084015b828210156138415760008481526020908190208301805460408051828502810185019091528181529283018282801561382d57602002820191906000526020600020905b815481526020019060010190808311613819575b5050505050815260200190600101906137d5565b5050505081526020016004820154815260200160058201548152602001600682015481526020016007820154815250508152602001906001019061371b565b60088054600954600a805492936001600160a01b03909216926138a290615b7c565b80601f01602080910402602001604051908101604052809291908181526020018280546138ce90615b7c565b801561391b5780601f106138f05761010080835404028352916020019161391b565b820191906000526020600020905b8154815290600101906020018083116138fe57829003601f168201915b50505050509080600301805461393090615b7c565b80601f016020809104026020016040519081016040528092919081815260200182805461395c90615b7c565b80156139a95780601f1061397e576101008083540402835291602001916139a9565b820191906000526020600020905b81548152906001019060200180831161398c57829003601f168201915b5050505050908060040180546139be90615b7c565b80601f01602080910402602001604051908101604052809291908181526020018280546139ea90615b7c565b8015613a375780601f10613a0c57610100808354040283529160200191613a37565b820191906000526020600020905b815481529060010190602001808311613a1a57829003601f168201915b505050505090806005018054613a4c90615b7c565b80601f0160208091040260200160405190810160405280929190818152602001828054613a7890615b7c565b8015613ac55780601f10613a9a57610100808354040283529160200191613ac5565b820191906000526020600020905b815481529060010190602001808311613aa857829003601f168201915b505050505090806006018054613ada90615b7c565b80601f0160208091040260200160405190810160405280929190818152602001828054613b0690615b7c565b8015613b535780601f10613b2857610100808354040283529160200191613b53565b820191906000526020600020905b815481529060010190602001808311613b3657829003601f168201915b505050505090806007018054613b6890615b7c565b80601f0160208091040260200160405190810160405280929190818152602001828054613b9490615b7c565b8015613be15780601f10613bb657610100808354040283529160200191613be1565b820191906000526020600020905b815481529060010190602001808311613bc457829003601f168201915b505050505090806008018054613bf690615b7c565b80601f0160208091040260200160405190810160405280929190818152602001828054613c2290615b7c565b8015613c6f5780601f10613c4457610100808354040283529160200191613c6f565b820191906000526020600020905b815481529060010190602001808311613c5257829003601f168201915b50505050509080600901549080600a015490508b565b613ce760408051610120810190915260008082526020820190815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160608152602001600081526020016000815260200160008152602001600081525090565b60008281526019602090815260409182902082516101208101909352805483526001810154909183019060ff166003811115613d2557613d25614f07565b6003811115613d3657613d36614f07565b815260018201546001600160a01b0361010090910481166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919060009084015b82821015613df957600084815260209081902083018054604080518285028101850190915281815292830182828015613de557602002820191906000526020600020905b815481526020019060010190808311613dd1575b505050505081526020019060010190613d8d565b5050505081526020016004820154815260200160058201548152602001600682015481526020016007820154815250509050919050565b613e966040518061016001604052806000815260200160006001600160a01b031681526020016060815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160008152602001600081525090565b6000828152601560209081526040918290208251610160810184528154815260018201546001600160a01b0316928101929092526002810180549293919291840191613ee190615b7c565b80601f0160208091040260200160405190810160405280929190818152602001828054613f0d90615b7c565b8015613f5a5780601f10613f2f57610100808354040283529160200191613f5a565b820191906000526020600020905b815481529060010190602001808311613f3d57829003601f168201915b50505050508152602001600382018054613f7390615b7c565b80601f0160208091040260200160405190810160405280929190818152602001828054613f9f90615b7c565b8015613fec5780601f10613fc157610100808354040283529160200191613fec565b820191906000526020600020905b815481529060010190602001808311613fcf57829003601f168201915b5050505050815260200160048201805461400590615b7c565b80601f016020809104026020016040519081016040528092919081815260200182805461403190615b7c565b801561407e5780601f106140535761010080835404028352916020019161407e565b820191906000526020600020905b81548152906001019060200180831161406157829003601f168201915b5050505050815260200160058201805461409790615b7c565b80601f01602080910402602001604051908101604052809291908181526020018280546140c390615b7c565b80156141105780601f106140e557610100808354040283529160200191614110565b820191906000526020600020905b8154815290600101906020018083116140f357829003601f168201915b5050505050815260200160068201805461412990615b7c565b80601f016020809104026020016040519081016040528092919081815260200182805461415590615b7c565b80156141a25780601f10614177576101008083540402835291602001916141a2565b820191906000526020600020905b81548152906001019060200180831161418557829003601f168201915b505050505081526020016007820180546141bb90615b7c565b80601f01602080910402602001604051908101604052809291908181526020018280546141e790615b7c565b80156142345780601f1061420957610100808354040283529160200191614234565b820191906000526020600020905b81548152906001019060200180831161421757829003601f168201915b5050505050815260200160088201805461424d90615b7c565b80601f016020809104026020016040519081016040528092919081815260200182805461427990615b7c565b80156142c65780601f1061429b576101008083540402835291602001916142c6565b820191906000526020600020905b8154815290600101906020018083116142a957829003601f168201915b5050505050815260200160098201548152602001600a820154815250509050919050565b6001600160a01b0382166000908152602081905260409020805482919060ff1916600183600381111561431f5761431f614f07565b02179055506001805490600061433483615b4b565b91905055505050565b6000601a54600161434e9190615bb1565b9050600061435d600183615bc9565b905060606000601654426143719190615bb1565b905060006040518061012001604052808681526020016000600381111561439a5761439a614f07565b815233602080830182905260408301919091526060820186905260006080830181905260a083018690524260c084015260e0909201879052601780546001818101835591909352835160089093027fc624b66cc0138b8fabc209247f72d758e1cf3343756d543badbf24212bed8c158101938455918401517fc624b66cc0138b8fabc209247f72d758e1cf3343756d543badbf24212bed8c1690920180549495508594909160ff199091169083600381111561445857614458614f07565b02179055506040820151600182018054610100600160a81b0319166101006001600160a01b039384160217905560608301516002830180546001600160a01b03191691909216179055608082015180516144bc916003840191602090910190614d7d565b5060a0820151600482015560c0820151600582015560e082015160068201556101009091015160079091015560008581526019602090815260409091208251815590820151600180830180548594939260ff199091169083600381111561452557614525614f07565b02179055506040820151600182018054610100600160a81b0319166101006001600160a01b039384160217905560608301516002830180546001600160a01b0319169190921617905560808201518051614589916003840191602090910190614d7d565b5060a0820151600482015560c0820151600582015560e0820151600682015561010090910151600790910155601a80549060006145c583615b4b565b91905055505050505050565b6000600360008381526019602052604090206001015460ff1660038111156145fb576145fb614f07565b1492915050565b608082018190526002602083015261461982614add565b60a0830152815160009081526019602090815260409091208351815590830151600180830180548694939260ff199091169083600381111561465d5761465d614f07565b02179055506040820151600182018054610100600160a81b0319166101006001600160a01b039384160217905560608301516002830180546001600160a01b03191691909216179055608082015180516146c1916003840191602090910190614d7d565b5060a0820151816004015560c0820151816005015560e0820151816006015561010082015181600701559050508160178361010001518154811061470757614707615b66565b90600052602060002090600802016000820151816000015560208201518160010160006101000a81548160ff0219169083600381111561474957614749614f07565b02179055506040820151600182018054610100600160a81b0319166101006001600160a01b039384160217905560608301516002830180546001600160a01b03191691909216179055608082015180516147ad916003840191602090910190614d7d565b5060a0820151600482015560c0820151600582015560e08201516006820155610100909101516007909101555050565b600081815260196020908152604080832060018101546002909101546001600160a01b0390811680865260069485905292852060058101805460ff191690559093018054610100909204909316939192909161483883615b4b565b90915550506001600160a01b038216600090815260036020526040812060058101805460ff1916905560060180549161487083615b4b565b90915550506001600160a01b03821660009081526018602090815260408083208684526019835290832081546001818101845592855292909320835460089093020191825580830154828201805460ff90921692909160ff1916908360038111156148dd576148dd614f07565b021790555060018281015490820180546001600160a01b03610100938490048116909302610100600160a81b031990911617905560028084015490830180546001600160a01b03191691909216179055600380830180546149419284019190614dd6565b506004828101549082015560058083015490820155600680830154908201556007918201549101556001600160a01b03811660009081526018602090815260408083208684526019835290832081546001818101845592855292909320835460089093020191825580830154828201805460ff90921692909160ff1916908360038111156149d1576149d1614f07565b021790555060018281015490820180546001600160a01b03610100938490048116909302610100600160a81b031990911617905560028084015490830180546001600160a01b0319169190921617905560038083018054614a359284019190614dd6565b50600482015481600401556005820154816005015560068201548160060155600782015481600701555050505050565b6001600160a01b038216600090815260036020526040908190206008015481518083019092529080614a978484615bb1565b8152600060209182018190526001600160a01b03959095168552600381526040909420815160088201559301516009909301805460ff1916931515939093179092555050565b608081015160009081614aef82614af7565b949350505050565b600080805b83518160ff161015612df5576000848260ff1681518110614b1f57614b1f615b66565b6020026020010151600181518110614b3957614b39615b66565b6020026020010151905060028111614b595782614b5581615b4b565b9350505b5080614b6481615c2f565b915050614afc565b60408051610120810182526000808252602082018190529091820190815260200160608152602001606081526020016060815260200160001515815260200160008152602001614bdd6040518060800160405280606081526020016060815260200160608152602001606081525090565b905290565b828054614bee90615b7c565b90600052602060002090601f016020900481019282614c105760008555614c56565b82601f10614c2957805160ff1916838001178555614c56565b82800160010185558215614c56579182015b82811115614c56578251825591602001919060010190614c3b565b50614c62929150614e22565b5090565b828054614c7290615b7c565b90600052602060002090601f016020900481019282614c945760008555614c56565b82601f10614ca55780548555614c56565b82800160010185558215614c5657600052602060002091601f016020900482015b82811115614c56578254825591600101919060010190614cc6565b6040805161016081018252600080825260208201819052909182019081526020016060815260200160608152602001606081526020016000151581526020016000815260200160008152602001614d4d6040518060400160405280600081526020016000151581525090565b8152602001614bdd6040518060800160405280606081526020016060815260200160608152602001606081525090565b828054828255906000526020600020908101928215614dca579160200282015b82811115614dca5782518051614dba918491602090910190614e37565b5091602001919060010190614d9d565b50614c62929150614e71565b828054828255906000526020600020908101928215614dca5760005260206000209182015b82811115614dca578254614e129083908590614e8e565b5091600101919060010190614dfb565b5b80821115614c625760008155600101614e23565b828054828255906000526020600020908101928215614c565791602002820182811115614c56578251825591602001919060010190614c3b565b80821115614c62576000614e858282614ecd565b50600101614e71565b828054828255906000526020600020908101928215614c5657600052602060002091820182811115614c56578254825591600101919060010190614cc6565b5080546000825590600052602060002090810190614eeb9190614e22565b50565b600060208284031215614f0057600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b60048110614eeb57634e487b7160e01b600052602160045260246000fd5b614f4481614f1d565b9052565b600082825180855260208086019550808260051b8401018186016000805b85811015614fb957868403601f19018a52825180518086529086019086860190845b81811015614fa457835183529288019291880191600101614f88565b50509a86019a94505091840191600101614f66565b509198975050505050505050565b6000610120825184526020830151614fde81614f1d565b806020860152506040830151614fff60408601826001600160a01b03169052565b50606083015161501a60608601826001600160a01b03169052565b50608083015181608086015261503282860182614f48565b91505060a083015160a085015260c083015160c085015260e083015160e08501526101008084015181860152508091505092915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156150be57603f198886030184526150ac858351614fc7565b94509285019290850190600101615090565b5092979650505050505050565b6000815180845260005b818110156150f1576020818501810151868301820152016150d5565b81811115615103576000602083870101525b50601f01601f19169290920160200192915050565b600081516080845261512d60808501826150cb565b90506020830151848203602086015261514682826150cb565b9150506040830151848203604086015261516082826150cb565b9150506060830151848203606086015261517a82826150cb565b95945050505050565b8b81526001600160a01b038b16602082015260006101806151a38c614f1d565b8b60408401528060608401526151bb8184018c6150cb565b905082810360808401526151cf818b6150cb565b905082810360a08401526151e3818a6150cb565b905087151560c08401528660e084015285610100840152615214610120840186805182526020908101511515910152565b8281036101608401526152278185615118565b9e9d5050505050505050505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561527857615278615239565b604052919050565b600082601f83011261529157600080fd5b813567ffffffffffffffff8111156152ab576152ab615239565b6152be601f8201601f191660200161524f565b8181528460208386010111156152d357600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600080600060e0888a03121561530b57600080fd5b873567ffffffffffffffff8082111561532357600080fd5b61532f8b838c01615280565b985060208a013591508082111561534557600080fd5b6153518b838c01615280565b975060408a013591508082111561536757600080fd5b6153738b838c01615280565b965060608a013591508082111561538957600080fd5b6153958b838c01615280565b955060808a01359150808211156153ab57600080fd5b6153b78b838c01615280565b945060a08a01359150808211156153cd57600080fd5b6153d98b838c01615280565b935060c08a01359150808211156153ef57600080fd5b506153fc8a828b01615280565b91505092959891949750929550565b600061012082518452602083015161542e60208601826001600160a01b03169052565b5060408301516154416040860182614f3b565b506060830151816060860152615459828601826150cb565b9150506080830151848203608086015261547382826150cb565b91505060a083015184820360a086015261548d82826150cb565b91505060c08301516154a360c086018215159052565b5060e083015160e085015261010080840151858303828701526154c68382615118565b9695505050505050565b6020815260006154e3602083018461540b565b9392505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156150be57603f1988860301845261552d85835161540b565b94509285019290850190600101615511565b600061016082518452602083015161556260208601826001600160a01b03169052565b50604083015181604086015261557a828601826150cb565b9150506060830151848203606086015261559482826150cb565b915050608083015184820360808601526155ae82826150cb565b91505060a083015184820360a08601526155c882826150cb565b91505060c083015184820360c08601526155e282826150cb565b91505060e083015184820360e08601526155fc82826150cb565b915050610100808401518583038287015261561783826150cb565b610120868101519088015261014095860151959096019490945250929392505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156150be57603f1988860301845261567d85835161553f565b94509285019290850190600101615661565b6000602082840312156156a157600080fd5b81356001600160a01b03811681146154e357600080fd5b6060815260006156cb60608301866150cb565b82810360208401526156dd81866150cb565b905082810360408401526154c681856150cb565b602081016156fe83614f1d565b91905290565b600061018082518452602083015161572760208601826001600160a01b03169052565b50604083015161573a6040860182614f3b565b506060830151816060860152615752828601826150cb565b9150506080830151848203608086015261576c82826150cb565b91505060a083015184820360a086015261578682826150cb565b91505060c083015161579c60c086018215159052565b5060e0838101519085015261010080840151908501526101208084015180518287015260208101511515610140870152505061014083015184820361016086015261517a8282615118565b6020815260006154e36020830184615704565b60a08152600061580d60a08301886150cb565b828103602084015261581f81886150cb565b9050828103604084015261583381876150cb565b9050828103606084015261584781866150cb565b9050828103608084015261585b81856150cb565b98975050505050505050565b600067ffffffffffffffff82111561588157615881615239565b5060051b60200190565b600080604080848603121561589f57600080fd5b8335925060208085013567ffffffffffffffff808211156158bf57600080fd5b818701915087601f8301126158d357600080fd5b81356158e66158e182615867565b61524f565b81815260059190911b8301840190848101908a83111561590557600080fd5b8585015b83811015615991578035858111156159215760008081fd5b8601603f81018d136159335760008081fd5b878101356159436158e182615867565b81815260059190911b82018a0190898101908f8311156159635760008081fd5b928b01925b828410156159815783358252928a0192908a0190615968565b8652505050918601918601615909565b50809750505050505050509250929050565b6080815260006159b660808301876150cb565b82810360208401526159c881876150cb565b905082810360408401526159dc81866150cb565b905082810360608401526159f081856150cb565b979650505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156150be57603f19888603018452615a3e858351615704565b94509285019290850190600101615a22565b8b81526001600160a01b038b1660208201526000610160806040840152615a798184018d6150cb565b90508281036060840152615a8d818c6150cb565b90508281036080840152615aa1818b6150cb565b905082810360a0840152615ab5818a6150cb565b905082810360c0840152615ac981896150cb565b905082810360e0840152615add81886150cb565b9050828103610100840152615af281876150cb565b610120840195909552505061014001529998505050505050505050565b6020815260006154e36020830184614fc7565b6020815260006154e3602083018461553f565b634e487b7160e01b600052601160045260246000fd5b6000600019821415615b5f57615b5f615b35565b5060010190565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680615b9057607f821691505b6020821081141561070d57634e487b7160e01b600052602260045260246000fd5b60008219821115615bc457615bc4615b35565b500190565b600082821015615bdb57615bdb615b35565b500390565b6020808252602f908201527f596f75206d75737420626520616e2061637469766973742120506c656173652060408201526e7265676973746572206173206f6e6560881b606082015260800190565b600060ff821660ff811415615c4657615c46615b35565b6001019291505056fea2646970667358221220115ed42c505568f357d1d532980bad10747b58eb867af140024b163a7f0b8e9164736f6c63430008090033",
  "deployedBytecode": "",
  "immutableReferences": {},
  "sourceMap": "254:7466:2:-:0;;;438:6;412:32;;254:7466;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "254:7466:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2451:206:1;;;;;;:::i;:::-;;:::i;:::-;;;460:14:15;;453:22;435:41;;423:2;408:18;2451:206:1;;;;;;;;700:26:0;;;;;;;;;633:25:15;;;621:2;606:18;700:26:0;487:177:15;1030:127:2;;;:::i;:::-;;;;;;;:::i;852:31:4:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;1164:861:0:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2133:102::-;;;:::i;:::-;;;;;;;:::i;940:104:1:-;;;:::i;:::-;;;;;;;:::i;2344:113:0:-;;;;;;:::i;:::-;;:::i;977:153:10:-;1077:45;;;;;;;;;;;;-1:-1:-1;;;1077:45:10;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1077:45:10;;;;;;;;;;;;;;-1:-1:-1;;;1077:45:10;;;;;;;977:153;;;;1077:45;977:153;:::i;351:22::-;;;;;;804:98;;;;;;:::i;:::-;-1:-1:-1;;;;;883:11:10;855:8;883:11;;;;;;;;;;;;;;804:98;;;;;;;;:::i;733:26:1:-;;;;;;1247:451:2;;;:::i;2596:128:0:-;;;;;;:::i;:::-;;:::i;3262:139:4:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3353:19:4;3329:4;3353:19;;;:9;:19;;;;;:32;;:40;;3262:139;1370:940;;;;;;:::i;:::-;;:::i;1551:735:1:-;;;;;;:::i;:::-;;:::i;2633:122:4:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2928:250:1:-;3053:117;;;;;;;;;;;;-1:-1:-1;;;3053:117:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3053:117:1;;;;;;;;;;;;;;-1:-1:-1;;;3053:117:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2928:250;;;;3053:117;;;2928:250;:::i;3581:582:2:-;;;;;;:::i;:::-;;:::i;5205:182::-;5328:51;;;;;;;;;;;-1:-1:-1;;;5328:51:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5328:51:2;;;;;;;;;;;;;;-1:-1:-1;;;5328:51:2;;;;;;;;;;;;;;-1:-1:-1;;;5328:51:2;;;;;;;5205:182;;;;5328:51;;;5205:182;:::i;935:26:4:-;;;;;;2359:503:2;;;;;;:::i;:::-;;:::i;2418:102:4:-;;;:::i;:::-;;;;;;;:::i;2894:128::-;;;;;;:::i;:::-;;:::i;5019:109:2:-;;;:::i;702:24:1:-;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;4830:115:2:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2757:107:1:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5541:113:2:-;;;;;;:::i;:::-;5599:4;5623:15;;;:11;:15;;;;;:18;5645:1;-1:-1:-1;5623:23:2;;5541:113;2451:206:1;2513:4;3264:14;;;:10;:14;;;;;:17;2493:2;;3256:60;;;;-1:-1:-1;;;3256:60:1;;23979:2:15;3256:60:1;;;23961:21:15;24018:2;23998:18;;;23991:30;24057:28;24037:18;;;24030:56;24103:18;;3256:60:1;;;;;;;;;2530:14:::1;::::0;;;:10:::1;:14;::::0;;;;:25:::1;;:27:::0;;;::::1;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;;2583:14:1::1;::::0;;;:10:::1;:14;::::0;;;;:20:::1;;::::0;2568:14:::1;:36:::0;;:14;;2583:20;2568:36;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;:47:::1;:36;::::0;;::::1;;:47;:49:::0;;;::::1;::::0;::::1;:::i;:::-;;;;;;2645:4;2638:11;;3332:1;2451:206:::0;;;;:::o;1030:127:2:-;1138:10;1122:27;;;;:15;:27;;;;;;;;1115:34;;;;;;;;;;;;;;;;;1083:19;;1115:34;;1122:27;;1115:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1115:34:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1115:34:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1030:127;:::o;852:31:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;852:31:4;;;-1:-1:-1;;;852:31:4;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;852:31:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;852:31:4;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1164:861:0:-;1426:15;;:::i;:::-;1469:7;1479:14;;1496:1;1479:18;;;;:::i;:::-;1619:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1703:91;;;;;;;;;;1716:10;1703:91;;;;;;;1469:28;;-1:-1:-1;1532:17:0;;1619:42;;1512:17;;1703:91;;;1532:17;1703:91;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1703:91:0;;;;;;;;;;;;;;;;;;;1823:13;:28;;1703:91;1823:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1823:28:0;;;-1:-1:-1;;;;;;1823:28:0;;;;;;;;;;1676:118;;-1:-1:-1;1676:118:0;;1823:28;;;-1:-1:-1;;;;;;1823:28:0;;;;-1:-1:-1;;;1823:28:0;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;1823:28:0;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1823:28:0;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1823:28:0;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1823:28:0;;;;;;;;;-1:-1:-1;;1823:28:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1823:28:0;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1823:28:0;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1823:28:0;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;1876:10:0;1866:21;;;;:9;:21;;;;;;;;;:32;;;;;;;;;;;;;-1:-1:-1;;;;;;1866:32:0;;-1:-1:-1;;;;;1866:32:0;;;;;;;;;;;;;;-1:-1:-1;1866:21:0;;-1:-1:-1;1866:32:0;;-1:-1:-1;1866:32:0;;-1:-1:-1;;;;;;1866:32:0;;-1:-1:-1;;;1866:32:0;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;1866:32:0;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1866:32:0;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1866:32:0;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1866:32:0;;;;;;;;;-1:-1:-1;;1866:32:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1866:32:0;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1866:32:0;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1866:32:0;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;1913:14:0;:16;;;-1:-1:-1;1913:14:0;-1:-1:-1;1913:14:0;;-1:-1:-1;1913:16:0;;;:::i;:::-;;;;;;1944:29;1952:10;1964:8;1944:7;:29::i;:::-;2009:8;1164:861;-1:-1:-1;;;;;;;;;;;1164:861:0:o;2133:102::-;2177:17;2214:13;2207:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2207:20:0;;;;;;;;;;;;;;;-1:-1:-1;;;2207:20:0;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2207:20:0;;;-1:-1:-1;;2207:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;940:104:1;985:17;1022:14;1015:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1015:21:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2344:113:0;2399:15;;:::i;:::-;-1:-1:-1;;;;;2434:15:0;;;;;;;:9;:15;;;;;;;;;2427:22;;;;;;;;;;;;;;;;;;;;;;;;;;;2434:15;;2427:22;;;-1:-1:-1;;;2427:22:0;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2427:22:0;;;-1:-1:-1;;2427:22:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2427:22:0;;;;-1:-1:-1;;;2427:22:0;;-1:-1:-1;2427:22:0;2344:113;-1:-1:-1;;2344:113:0:o;1247:451:2:-;1291:4;1316:26;1331:10;1316:14;:26::i;:::-;1308:85;;;;-1:-1:-1;;;1308:85:2;;25256:2:15;1308:85:2;;;25238:21:15;25295:2;25275:18;;;25268:30;25334:34;25314:18;;;25307:62;-1:-1:-1;;;25385:18:15;;;25378:44;25439:19;;1308:85:2;25054:410:15;1308:85:2;1422:10;1412:21;;;;:9;:21;;;;;:38;;;;;:47;1404:162;;;;-1:-1:-1;;;1404:162:2;;25671:2:15;1404:162:2;;;25653:21:15;25710:3;25690:18;;;25683:31;25750:34;25730:18;;;25723:62;25821:34;25801:18;;;25794:62;25893:34;25872:19;;;25865:63;-1:-1:-1;;;25944:19:15;;;25937:37;25991:19;;1404:162:2;25469:547:15;1404:162:2;1587:15;:13;:15::i;:::-;-1:-1:-1;1623:10:2;1613:21;;;;:9;:21;;;;;:38;;:45;;-1:-1:-1;;1613:45:2;1654:4;1613:45;;;;;;1654:4;1247:451::o;2596:128:0:-;-1:-1:-1;;;;;2684:15:0;;2654:4;2684:15;;;:9;:15;;;;;:20;;2678:34;;2654:4;;2684:20;2678:34;;;:::i;:::-;;;:38;2671:45;;2596:128;;;:::o;1370:940:4:-;1632:4;1667:7;1677:14;;1694:1;1677:18;;;;:::i;:::-;1818:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1910:22;;;;;;;1710:17;1910:22;;;;;;;;;1974:109;;;;;;;;;;1987:10;1974:109;;;;;;;1667:28;;-1:-1:-1;1730:17:4;;1818:42;;1910:22;;1710:17;1974:109;;;1730:17;1974:109;;;;2009:4;1974:109;;;;2015:8;1974:109;;;;2025:12;1974:109;;;;2039:5;1974:109;;;;;;2046:1;1974:109;;;;2049:1;1974:109;;;;2052:12;1974:109;;;;2066:16;1974:109;;;1947:136;;2112:13;2131:8;2112:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2112:28:4;;;;;-1:-1:-1;;;;;2112:28:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;2112:28:4;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2112:28:4;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2112:28:4;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2112:28:4;;;;;;;;;;;;-1:-1:-1;;2112:28:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2112:28:4;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2112:28:4;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2112:28:4;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;2165:10:4;2155:21;;;;:9;:21;;;;;;;;;:32;;;;;;;;;;;;;-1:-1:-1;;;;;;2155:32:4;;-1:-1:-1;;;;;2155:32:4;;;;;;;;;;;;;;-1:-1:-1;2155:21:4;;-1:-1:-1;2155:32:4;;-1:-1:-1;2155:32:4;;-1:-1:-1;;;;;;2155:32:4;;;-1:-1:-1;;;2155:32:4;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;2155:32:4;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2155:32:4;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2155:32:4;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2155:32:4;;;;;;;;;;;;-1:-1:-1;;2155:32:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2155:32:4;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2155:32:4;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2155:32:4;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;2202:14:4;:16;;;-1:-1:-1;2202:14:4;-1:-1:-1;2202:14:4;;-1:-1:-1;2202:16:4;;;:::i;:::-;;;;;;2233:29;2241:10;2253:8;2233:7;:29::i;:::-;-1:-1:-1;2298:4:4;;1370:940;-1:-1:-1;;;;;;;;;;;;1370:940:4:o;1551:735:1:-;1872:4;1889:10;1902:14;;1919:1;1902:18;;;;:::i;:::-;1889:31;-1:-1:-1;1931:10:1;1944:6;1949:1;1889:31;1944:6;:::i;:::-;1982:151;;;;;;;;;;;1995:10;1982:151;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1982:151:1;;;;;;;;;;1971:8;:162;;;;;;-1:-1:-1;;;;;;1971:162:1;;;;;;;;;1931:19;;-1:-1:-1;1982:151:1;;1971:8;;:162;;;;;;;;:::i;:::-;-1:-1:-1;1971:162:1;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1971:162:1;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1971:162:1;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1971:162:1;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1971:162:1;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1971:162:1;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1971:162:1;;;;;;;;;;;;;;;;;;;;;;2154:14;:29;;;;;;;-1:-1:-1;2154:29:1;;;;2174:8;2154:29;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2154:29:1;-1:-1:-1;;;;;2154:29:1;;;;;;;;;;;2174:8;;2154:29;;;;;;;1971:162;2154:29;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;-1:-1:-1;2154:29:1;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2194:14:1;;;:10;:14;;;;;2211:8;2194:25;;;;;;;;;;;-1:-1:-1;;;;;;2194:25:1;-1:-1:-1;;;;;2194:25:1;;;;;;;;;;;2211:8;;2194:14;;:25;;;;2154:29;2194:25;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;-1:-1:-1;2194:25:1;;;;;;;;;;;;;;;;;2230:14;:16;;;-1:-1:-1;2230:16:1;;;:::i;:::-;;;;-1:-1:-1;2274:4:1;;1551:735;-1:-1:-1;;;;;;;;;;;1551:735:1:o;2633:122:4:-;2688:24;;:::i;:::-;-1:-1:-1;;;;;2732:15:4;;;;;;;:9;:15;;;;;;;;;2725:22;;;;;;;;;;;;;;;;;;;;;;;;;;;2732:15;;2725:22;;;-1:-1:-1;;;2725:22:4;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2725:22:4;;;-1:-1:-1;;2725:22:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3581:582:2:-;3719:4;7447:26;7462:10;7447:14;:26::i;:::-;7439:86;;;;-1:-1:-1;;;7439:86:2;;;;;;;:::i;:::-;5599:4;5623:15;;;:11;:15;;;;;:18;3697:12;;5645:1;-1:-1:-1;5623:23:2;7620:71:::1;;;::::0;-1:-1:-1;;;7620:71:2;;26769:2:15;7620:71:2::1;::::0;::::1;26751:21:15::0;26808:2;26788:18;;;26781:30;26847;26827:18;;;26820:58;26895:18;;7620:71:2::1;26567:352:15::0;7620:71:2::1;3741:24:::2;3752:12;3741:10;:24::i;:::-;3736:43;;3774:5;3767:12;;;;3736:43;3795:29;3811:12;7122:4:::0;7146:25;;;:11;:25;;;;;:40;;;-1:-1:-1;;;;;7146:40:2;7190:10;7146:54;;7056:152;3795:29:::2;3790:48;;3833:5;3826:12;;;;3790:48;3851:28;3882:25:::0;;;:11:::2;:25;::::0;;;;;;;3851:56;;::::2;::::0;::::2;::::0;;;;;;;::::2;::::0;::::2;::::0;;;3882:25;;3851:56;;::::2;::::0;::::2;;;::::0;::::2;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;::::0;;::::2;::::0;::::2;::::0;-1:-1:-1;;;;;3851:56:2::2;::::0;;::::2;::::0;::::2;;::::0;;::::2;::::0;;;;::::2;::::0;::::2;::::0;;;::::2;::::0;;;;;;;;::::2;::::0;::::2;::::0;;;;;;::::2;::::0;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3851:56:2;::::2;;;;;;;;;::::0;;;::::2;::::0;;;;;::::2;::::0;;::::2;::::0;;;;::::2;::::0;;;;;;;;;;;;::::2;::::0;;;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;3920:32;3935:10;3947:4;3920:14;:32::i;:::-;3963:36;3986:12;3963:22;:36::i;:::-;4042:20;::::0;::::2;::::0;4613:51;4623:25;;;:11;:25;;;;;;;;:40;;;;;;-1:-1:-1;;;;;4623:40:2;4613:51;;:9;:51;;;;;:61;;:73;4074:57:::2;4099:10;:25;;;4126:4;4074:24;:57::i;:::-;4151:4;4144:11;;;7702:1;7536::::1;3581:582:::0;;;;:::o;2359:503::-;2473:4;7447:26;7462:10;7447:14;:26::i;:::-;7439:86;;;;-1:-1:-1;;;7439:86:2;;;;;;;:::i;:::-;5599:4;5623:15;;;:11;:15;;;;;:18;2451:12;;5645:1;-1:-1:-1;5623:23:2;7620:71:::1;;;::::0;-1:-1:-1;;;7620:71:2;;26769:2:15;7620:71:2::1;::::0;::::1;26751:21:15::0;26808:2;26788:18;;;26781:30;26847;26827:18;;;26820:58;26895:18;;7620:71:2::1;26567:352:15::0;7620:71:2::1;2490:28:::2;2521:25:::0;;;:11:::2;:25;::::0;;;;;;;2490:56;;::::2;::::0;::::2;::::0;;;;;;;::::2;::::0;::::2;::::0;;;2521:25;;2490:56;;::::2;::::0;::::2;;;::::0;::::2;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;::::0;;::::2;::::0;::::2;::::0;-1:-1:-1;;;;;2490:56:2::2;::::0;;::::2;::::0;::::2;;::::0;;::::2;::::0;;;;::::2;::::0;::::2;::::0;;;::::2;::::0;;;;;;;;::::2;::::0;::::2;::::0;;;;;;::::2;::::0;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2490:56:2;::::2;;;;;;;;;::::0;;;::::2;::::0;;;;;::::2;::::0;;::::2;::::0;;;;::::2;::::0;;;;;;;;;;;;::::2;::::0;;;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;2490:56:2;;;-1:-1:-1;2490:56:2::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;;;;::::2;::::0;::::2;::::0;;;;;::::2;::::0;;::::2;::::0;;;;;;;-1:-1:-1;;2561:10:2::2;:17;;;:42;;;;;;;;:::i;:::-;;2557:60;;2612:5;2605:12;;;;;2557:60;2650:25;2630:17;::::0;;::::2;:45:::0;;;2714:10:::2;2686:25;::::0;::::2;:38:::0;-1:-1:-1;2735:25:2;;;:11:::2;:25:::0;;;;;;;:38;;;;;;::::2;::::0;;::::2;::::0;;2630:17;;2735:38;;-1:-1:-1;;2735:38:2;;::::2;::::0;;;;::::2;;;;;;:::i;:::-;;;::::0;;-1:-1:-1;2735:38:2::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;-1:-1:-1;;;;;;2735:38:2::2;;-1:-1:-1::0;;;;;2735:38:2;;::::2;;;::::0;;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;-1:-1:-1;;;;;;2735:38:2::2;::::0;;;::::2;;::::0;;::::2;::::0;::::2;::::0;;;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2822:10;2786:15;2802:10;:16;;;2786:33;;;;;;;;:::i;:::-;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;::::0;;-1:-1:-1;2786:46:2::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;-1:-1:-1;;;;;;2786:46:2::2;;-1:-1:-1::0;;;;;2786:46:2;;::::2;;;::::0;;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;-1:-1:-1;;;;;;2786:46:2::2;::::0;;;::::2;;::::0;;::::2;::::0;::::2;::::0;;;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;:::i;:::-;-1:-1:-1::0;2786:46:2::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;::::0;;::::2;::::0;-1:-1:-1;2850:4:2::2;::::0;2359:503;-1:-1:-1;;;2359:503:2:o;2418:102:4:-;2462:17;2499:13;2492:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2492:20:4;;;;;;;;;;;;;;;-1:-1:-1;;;2492:20:4;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2492:20:4;;;-1:-1:-1;;2492:20:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2894:128;-1:-1:-1;;;;;2982:15:4;;2952:4;2982:15;;;:9;:15;;;;;:20;;2976:34;;2952:4;;2982:20;2976:34;;;:::i;5019:109:2:-;5066:19;5105:15;5098:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5098:22:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5098:22:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;702:24:1;;;;;;;;;;;-1:-1:-1;;;;;702:24:1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4830:115:2:-;4885:17;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4885:17:2;4922:15;;;;:11;:15;;;;;;;;;4915:22;;;;;;;;;;;;;;;;4922:15;;4915:22;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;4915:22:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4915:22:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4830:115;;;:::o;2757:107:1:-;2807:15;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2807:15:1;2842:14;;;;:10;:14;;;;;;;;;2835:21;;;;;;;;;;;;;;;-1:-1:-1;;;;;2835:21:1;;;;;;;;;;;;;;;2842:14;;2835:21;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2757:107;;;:::o;537:123:10:-;-1:-1:-1;;;;;607:11:10;;:5;:11;;;;;;;;;;:22;;621:8;;607:11;-1:-1:-1;;607:22:10;;621:8;607:22;;;;;;;;:::i;:::-;;;;;-1:-1:-1;640:10:10;:12;;;:10;:12;;;:::i;:::-;;;;;;537:123;;:::o;1715:467:2:-;1759:7;1769:16;;1788:1;1769:20;;;;:::i;:::-;1759:30;-1:-1:-1;1800:10:2;1813:6;1818:1;1759:30;1813:6;:::i;:::-;1800:19;;1830:20;1861:14;1896:18;;1878:15;:36;;;;:::i;:::-;1861:53;;1925:28;1956:107;;;;;;;;1967:2;1956:107;;;;1971:21;1956:107;;;;;;;;:::i;:::-;;;1994:10;1956:107;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1956:107:2;;;;;;;;;;;;2040:15;1956:107;;;;;;;;;;;2074:15;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1925:138;;-1:-1:-1;1925:138:2;;2074:32;;-1:-1:-1;;2074:32:2;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;2074:32:2;;;;;;;;;-1:-1:-1;;;;;;2074:32:2;;-1:-1:-1;;;;;2074:32:2;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2074:32:2;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2074:32:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2117:15:2;;;:11;:15;;;;;;;;:28;;;;;;;;;;;;;;2135:10;;2117:15;:28;-1:-1:-1;;2117:28:2;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;2117:28:2;;;;;;;;;-1:-1:-1;;;;;;2117:28:2;;-1:-1:-1;;;;;2117:28:2;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2117:28:2;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2117:28:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:16;:18;;;-1:-1:-1;2156:18:2;;;:::i;:::-;;;;;;1748:434;;;;;1715:467::o;7217:154::-;7278:4;7338:25;7302;;;;:11;:25;;;;;:32;;;;;:61;;;;;;;;:::i;:::-;;;7217:154;-1:-1:-1;;7217:154:2:o;4172:351::-;4271:15;;;:22;;;4324:26;4304:17;;;:46;4384:24;4271:15;4384:12;:24::i;:::-;4361:20;;;:47;4431:13;;4419:26;;;;:11;:26;;;;;;;;:39;;;;;;;;;;;;;;4361:10;;4419:26;:39;-1:-1:-1;;4419:39:2;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;4419:39:2;;;;;;;;;-1:-1:-1;;;;;;4419:39:2;;-1:-1:-1;;;;;4419:39:2;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4419:39:2;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4505:10;4469:15;4485:10;:16;;;4469:33;;;;;;;;:::i;:::-;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;4469:46:2;;;;;;;;;-1:-1:-1;;;;;;4469:46:2;;-1:-1:-1;;;;;4469:46:2;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4469:46:2;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4469:46:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4172:351:2:o;5848:788::-;5919:22;5944:25;;;:11;:25;;;;;;;;:40;;;;6020;;;;;-1:-1:-1;;;;;6020:40:2;;;6164:25;;;:9;:25;;;;;;;:42;;;:50;;-1:-1:-1;;6164:50:2;;;6225:42;;;:44;;5944:40;;;;;;;;6020;;6225:44;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;6368:25:2;;6413:5;6368:25;;;:9;:25;;;;;:42;;;:50;;-1:-1:-1;;6368:50:2;;;6429:39;;:41;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;6491:31:2;;;;;;:15;:31;;;;;;;;6528:25;;;:11;:25;;;;;6491:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6491:63:2;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;6491:63:2;;;;;;;;;;-1:-1:-1;;;;;6491:63:2;;;;;;;;;;-1:-1:-1;;;;;;6491:63:2;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6491:63:2;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6491:63:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6565:31:2;;-1:-1:-1;6565:31:2;;;:15;:31;;;;;;;;6602:25;;;:11;:25;;;;;6565:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6565:63:2;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;6565:63:2;;;;;;;;;;-1:-1:-1;;;;;6565:63:2;;;;;;;;;;-1:-1:-1;;;;;;6565:63:2;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6565:63:2;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5908:728;;5848:788;:::o;3030:224:4:-;-1:-1:-1;;;;;3128:15:4;;3114:11;3128:15;;;:9;:15;;;;;;;:28;;:36;3206:40;;;;;;;;3128:36;3206:40;3219:19;3229:9;3128:36;3219:19;:::i;:::-;3206:40;;3240:5;3206:40;;;;;;;-1:-1:-1;;;;;3175:15:4;;;;;;:9;:15;;;;;;:71;;:28;;;:71;;;;;;;;;;-1:-1:-1;;3175:71:4;;;;;;;;;;;-1:-1:-1;;3030:224:4:o;3074:212:2:-;3188:15;;;;3148:4;;;3231:20;3188:15;3231:14;:20::i;:::-;3214:37;3074:212;-1:-1:-1;;;;3074:212:2:o;6724:320::-;6792:4;;;6838:172;6860:4;:11;6856:1;:15;;;6838:172;;;6893:13;6909:4;6914:1;6909:7;;;;;;;;;;:::i;:::-;;;;;;;6917:1;6909:10;;;;;;;;:::i;:::-;;;;;;;6893:26;;6950:1;6938:8;:13;6934:65;;6972:11;;;;:::i;:::-;;;;6934:65;-1:-1:-1;6873:3:2;;;;:::i;:::-;;;;6838:172;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;14:180:15:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:15;;14:180;-1:-1:-1;14:180:15:o;669:127::-;730:10;725:3;721:20;718:1;711:31;761:4;758:1;751:15;785:4;782:1;775:15;801:218;890:1;883:5;880:12;870:143;;935:10;930:3;926:20;923:1;916:31;970:4;967:1;960:15;998:4;995:1;988:15;1024:146;1092:45;1131:5;1092:45;:::i;:::-;1146:18;;1024:146::o;1284:1058::-;1347:3;1378;1410:5;1404:12;1437:6;1432:3;1425:19;1463:4;1492:2;1487:3;1483:12;1476:19;;1548:2;1538:6;1535:1;1531:14;1524:5;1520:26;1516:35;1585:2;1578:5;1574:14;1606:1;1627;1637:679;1653:6;1648:3;1645:15;1637:679;;;1722:16;;;-1:-1:-1;;1718:30:15;1706:43;;1772:13;;1844:9;;1866:22;;;1952:11;;;;1910:13;;;;1987:1;2001:209;2017:8;2012:3;2009:17;2001:209;;;2094:15;;2080:30;;2179:17;;;;2136:14;;;;2045:1;2036:11;2001:209;;;-1:-1:-1;;2294:12:15;;;;2231:5;-1:-1:-1;;2259:15:15;;;;1679:1;1670:11;1637:679;;;-1:-1:-1;2332:4:15;;1284:1058;-1:-1:-1;;;;;;;;1284:1058:15:o;2347:954::-;2400:3;2428:6;2461:5;2455:12;2450:3;2443:25;2514:4;2507:5;2503:16;2497:23;2529:52;2568:12;2529:52;:::i;:::-;2613:12;2606:4;2601:3;2597:14;2590:36;;2674:4;2667:5;2663:16;2657:23;2689:50;2733:4;2728:3;2724:14;2708;-1:-1:-1;;;;;1241:31:15;1229:44;;1175:104;2689:50;;2787:4;2780:5;2776:16;2770:23;2802:50;2846:4;2841:3;2837:14;2821;-1:-1:-1;;;;;1241:31:15;1229:44;;1175:104;2802:50;;2900:4;2893:5;2889:16;2883:23;2938:2;2931:4;2926:3;2922:14;2915:26;2962:68;3026:2;3021:3;3017:12;3001:14;2962:68;:::i;:::-;2950:80;;;3079:4;3072:5;3068:16;3062:23;3055:4;3050:3;3046:14;3039:47;3135:4;3128:5;3124:16;3118:23;3111:4;3106:3;3102:14;3095:47;3191:4;3184:5;3180:16;3174:23;3167:4;3162:3;3158:14;3151:47;3217:6;3270:2;3263:5;3259:14;3253:21;3248:2;3243:3;3239:12;3232:43;;3291:4;3284:11;;;2347:954;;;;:::o;3306:848::-;3502:4;3531:2;3571;3560:9;3556:18;3601:2;3590:9;3583:21;3624:6;3659;3653:13;3690:6;3682;3675:22;3728:2;3717:9;3713:18;3706:25;;3790:2;3780:6;3777:1;3773:14;3762:9;3758:30;3754:39;3740:53;;3828:2;3820:6;3816:15;3849:1;3859:266;3873:6;3870:1;3867:13;3859:266;;;3966:2;3962:7;3950:9;3942:6;3938:22;3934:36;3929:3;3922:49;3994:51;4038:6;4029;4023:13;3994:51;:::i;:::-;3984:61;-1:-1:-1;4103:12:15;;;;4068:15;;;;3895:1;3888:9;3859:266;;;-1:-1:-1;4142:6:15;;3306:848;-1:-1:-1;;;;;;;3306:848:15:o;4159:472::-;4201:3;4239:5;4233:12;4266:6;4261:3;4254:19;4291:1;4301:162;4315:6;4312:1;4309:13;4301:162;;;4377:4;4433:13;;;4429:22;;4423:29;4405:11;;;4401:20;;4394:59;4330:12;4301:162;;;4481:6;4478:1;4475:13;4472:87;;;4547:1;4540:4;4531:6;4526:3;4522:16;4518:27;4511:38;4472:87;-1:-1:-1;4613:2:15;4592:15;-1:-1:-1;;4588:29:15;4579:39;;;;4620:4;4575:50;;4159:472;-1:-1:-1;;4159:472:15:o;4810:698::-;4868:3;4912:5;4906:12;4939:4;4934:3;4927:17;4965:47;5006:4;5001:3;4997:14;4983:12;4965:47;:::i;:::-;4953:59;;5060:4;5053:5;5049:16;5043:23;5108:3;5102:4;5098:14;5091:4;5086:3;5082:14;5075:38;5136:39;5170:4;5154:14;5136:39;:::i;:::-;5122:53;;;5223:4;5216:5;5212:16;5206:23;5273:3;5265:6;5261:16;5254:4;5249:3;5245:14;5238:40;5301:41;5335:6;5319:14;5301:41;:::i;:::-;5287:55;;;5390:4;5383:5;5379:16;5373:23;5440:3;5432:6;5428:16;5421:4;5416:3;5412:14;5405:40;5461:41;5495:6;5479:14;5461:41;:::i;:::-;5454:48;4810:698;-1:-1:-1;;;;;4810:698:15:o;5513:1485::-;6118:25;;;-1:-1:-1;;;;;6179:32:15;;6174:2;6159:18;;6152:60;6077:4;6106:3;6221:46;6260:6;6221:46;:::i;:::-;6303:6;6298:2;6287:9;6283:18;6276:34;6346:2;6341;6330:9;6326:18;6319:30;6372:45;6413:2;6402:9;6398:18;6390:6;6372:45;:::i;:::-;6358:59;;6466:9;6458:6;6454:22;6448:3;6437:9;6433:19;6426:51;6500:33;6526:6;6518;6500:33;:::i;:::-;6486:47;;6582:9;6574:6;6570:22;6564:3;6553:9;6549:19;6542:51;6616:33;6642:6;6634;6616:33;:::i;:::-;6602:47;;6700:6;6693:14;6686:22;6680:3;6669:9;6665:19;6658:51;6746:6;6740:3;6729:9;6725:19;6718:35;6790:6;6784:3;6773:9;6769:19;6762:35;6806:59;6860:3;6849:9;6845:19;6837:6;4714:12;;4702:25;;4790:4;4779:16;;;4773:23;4766:31;4759:39;4743:14;;4736:63;4636:169;6806:59;6914:9;6906:6;6902:22;6896:3;6885:9;6881:19;6874:51;6942:50;6985:6;6976:7;6942:50;:::i;:::-;6934:58;5513:1485;-1:-1:-1;;;;;;;;;;;;;;5513:1485:15:o;7003:127::-;7064:10;7059:3;7055:20;7052:1;7045:31;7095:4;7092:1;7085:15;7119:4;7116:1;7109:15;7135:275;7206:2;7200:9;7271:2;7252:13;;-1:-1:-1;;7248:27:15;7236:40;;7306:18;7291:34;;7327:22;;;7288:62;7285:88;;;7353:18;;:::i;:::-;7389:2;7382:22;7135:275;;-1:-1:-1;7135:275:15:o;7415:531::-;7458:5;7511:3;7504:4;7496:6;7492:17;7488:27;7478:55;;7529:1;7526;7519:12;7478:55;7565:6;7552:20;7591:18;7587:2;7584:26;7581:52;;;7613:18;;:::i;:::-;7657:55;7700:2;7681:13;;-1:-1:-1;;7677:27:15;7706:4;7673:38;7657:55;:::i;:::-;7737:2;7728:7;7721:19;7783:3;7776:4;7771:2;7763:6;7759:15;7755:26;7752:35;7749:55;;;7800:1;7797;7790:12;7749:55;7865:2;7858:4;7850:6;7846:17;7839:4;7830:7;7826:18;7813:55;7913:1;7888:16;;;7906:4;7884:27;7877:38;;;;7892:7;7415:531;-1:-1:-1;;;7415:531:15:o;7951:1547::-;8134:6;8142;8150;8158;8166;8174;8182;8235:3;8223:9;8214:7;8210:23;8206:33;8203:53;;;8252:1;8249;8242:12;8203:53;8292:9;8279:23;8321:18;8362:2;8354:6;8351:14;8348:34;;;8378:1;8375;8368:12;8348:34;8401:50;8443:7;8434:6;8423:9;8419:22;8401:50;:::i;:::-;8391:60;;8504:2;8493:9;8489:18;8476:32;8460:48;;8533:2;8523:8;8520:16;8517:36;;;8549:1;8546;8539:12;8517:36;8572:52;8616:7;8605:8;8594:9;8590:24;8572:52;:::i;:::-;8562:62;;8677:2;8666:9;8662:18;8649:32;8633:48;;8706:2;8696:8;8693:16;8690:36;;;8722:1;8719;8712:12;8690:36;8745:52;8789:7;8778:8;8767:9;8763:24;8745:52;:::i;:::-;8735:62;;8850:2;8839:9;8835:18;8822:32;8806:48;;8879:2;8869:8;8866:16;8863:36;;;8895:1;8892;8885:12;8863:36;8918:52;8962:7;8951:8;8940:9;8936:24;8918:52;:::i;:::-;8908:62;;9023:3;9012:9;9008:19;8995:33;8979:49;;9053:2;9043:8;9040:16;9037:36;;;9069:1;9066;9059:12;9037:36;9092:52;9136:7;9125:8;9114:9;9110:24;9092:52;:::i;:::-;9082:62;;9197:3;9186:9;9182:19;9169:33;9153:49;;9227:2;9217:8;9214:16;9211:36;;;9243:1;9240;9233:12;9211:36;9266:52;9310:7;9299:8;9288:9;9284:24;9266:52;:::i;:::-;9256:62;;9371:3;9360:9;9356:19;9343:33;9327:49;;9401:2;9391:8;9388:16;9385:36;;;9417:1;9414;9407:12;9385:36;;9440:52;9484:7;9473:8;9462:9;9458:24;9440:52;:::i;:::-;9430:62;;;7951:1547;;;;;;;;;;:::o;9503:1211::-;9554:3;9582:6;9615:5;9609:12;9604:3;9597:25;9668:4;9661:5;9657:16;9651:23;9683:48;9725:4;9720:3;9716:14;9702:12;-1:-1:-1;;;;;1241:31:15;1229:44;;1175:104;9683:48;;9779:4;9772:5;9768:16;9762:23;9794:64;9852:4;9847:3;9843:14;9827;9794:64;:::i;:::-;;9906:4;9899:5;9895:16;9889:23;9944:2;9937:4;9932:3;9928:14;9921:26;9968:47;10011:2;10006:3;10002:12;9986:14;9968:47;:::i;:::-;9956:59;;;10063:4;10056:5;10052:16;10046:23;10111:3;10105:4;10101:14;10094:4;10089:3;10085:14;10078:38;10139:39;10173:4;10157:14;10139:39;:::i;:::-;10125:53;;;10226:4;10219:5;10215:16;10209:23;10276:3;10268:6;10264:16;10257:4;10252:3;10248:14;10241:40;10304:41;10338:6;10322:14;10304:41;:::i;:::-;10290:55;;;10393:4;10386:5;10382:16;10376:23;10408:47;10449:4;10444:3;10440:14;10424;269:13;262:21;250:34;;199:91;10408:47;;10504:4;10497:5;10493:16;10487:23;10480:4;10475:3;10471:14;10464:47;10530:6;10584:2;10577:5;10573:14;10567:21;10630:3;10622:6;10618:16;10613:2;10608:3;10604:12;10597:38;10651:57;10701:6;10685:14;10651:57;:::i;:::-;10644:64;9503:1211;-1:-1:-1;;;;;;9503:1211:15:o;10719:257::-;10896:2;10885:9;10878:21;10859:4;10916:54;10966:2;10955:9;10951:18;10943:6;10916:54;:::i;:::-;10908:62;10719:257;-1:-1:-1;;;10719:257:15:o;10981:840::-;11171:4;11200:2;11240;11229:9;11225:18;11270:2;11259:9;11252:21;11293:6;11328;11322:13;11359:6;11351;11344:22;11397:2;11386:9;11382:18;11375:25;;11459:2;11449:6;11446:1;11442:14;11431:9;11427:30;11423:39;11409:53;;11497:2;11489:6;11485:15;11518:1;11528:264;11542:6;11539:1;11536:13;11528:264;;;11635:2;11631:7;11619:9;11611:6;11607:22;11603:36;11598:3;11591:49;11663;11705:6;11696;11690:13;11663:49;:::i;:::-;11653:59;-1:-1:-1;11770:12:15;;;;11735:15;;;;11564:1;11557:9;11528:264;;11826:1586;11877:3;11905:6;11938:5;11932:12;11927:3;11920:25;11991:4;11984:5;11980:16;11974:23;12006:48;12048:4;12043:3;12039:14;12025:12;-1:-1:-1;;;;;1241:31:15;1229:44;;1175:104;12006:48;;12102:4;12095:5;12091:16;12085:23;12140:2;12133:4;12128:3;12124:14;12117:26;12164:47;12207:2;12202:3;12198:12;12182:14;12164:47;:::i;:::-;12152:59;;;12259:4;12252:5;12248:16;12242:23;12307:3;12301:4;12297:14;12290:4;12285:3;12281:14;12274:38;12335:39;12369:4;12353:14;12335:39;:::i;:::-;12321:53;;;12422:4;12415:5;12411:16;12405:23;12472:3;12464:6;12460:16;12453:4;12448:3;12444:14;12437:40;12500:41;12534:6;12518:14;12500:41;:::i;:::-;12486:55;;;12589:4;12582:5;12578:16;12572:23;12639:3;12631:6;12627:16;12620:4;12615:3;12611:14;12604:40;12667:41;12701:6;12685:14;12667:41;:::i;:::-;12653:55;;;12756:4;12749:5;12745:16;12739:23;12806:3;12798:6;12794:16;12787:4;12782:3;12778:14;12771:40;12834:41;12868:6;12852:14;12834:41;:::i;:::-;12820:55;;;12923:4;12916:5;12912:16;12906:23;12973:3;12965:6;12961:16;12954:4;12949:3;12945:14;12938:40;13001:41;13035:6;13019:14;13001:41;:::i;:::-;12987:55;;;13061:6;13115:2;13108:5;13104:14;13098:21;13161:3;13153:6;13149:16;13144:2;13139:3;13135:12;13128:38;13189:41;13223:6;13207:14;13189:41;:::i;:::-;13249:6;13291:14;;;13285:21;13271:12;;;13264:43;13326:6;13368:14;;;13362:21;13348:12;;;;13341:43;;;;-1:-1:-1;13175:55:15;;11826:1586;-1:-1:-1;;;11826:1586:15:o;13417:842::-;13609:4;13638:2;13678;13667:9;13663:18;13708:2;13697:9;13690:21;13731:6;13766;13760:13;13797:6;13789;13782:22;13835:2;13824:9;13820:18;13813:25;;13897:2;13887:6;13884:1;13880:14;13869:9;13865:30;13861:39;13847:53;;13935:2;13927:6;13923:15;13956:1;13966:264;13980:6;13977:1;13974:13;13966:264;;;14073:2;14069:7;14057:9;14049:6;14045:22;14041:36;14036:3;14029:49;14101;14143:6;14134;14128:13;14101:49;:::i;:::-;14091:59;-1:-1:-1;14208:12:15;;;;14173:15;;;;14002:1;13995:9;13966:264;;14264:286;14323:6;14376:2;14364:9;14355:7;14351:23;14347:32;14344:52;;;14392:1;14389;14382:12;14344:52;14418:23;;-1:-1:-1;;;;;14470:31:15;;14460:42;;14450:70;;14516:1;14513;14506:12;14555:546;14800:2;14789:9;14782:21;14763:4;14826:45;14867:2;14856:9;14852:18;14844:6;14826:45;:::i;:::-;14919:9;14911:6;14907:22;14902:2;14891:9;14887:18;14880:50;14953:33;14979:6;14971;14953:33;:::i;:::-;14939:47;;15034:9;15026:6;15022:22;15017:2;15006:9;15002:18;14995:50;15062:33;15088:6;15080;15062:33;:::i;15106:243::-;15251:2;15236:18;;15263:46;15302:6;15263:46;:::i;:::-;15318:25;;;15106:243;:::o;15354:1417::-;15405:3;15433:6;15466:5;15460:12;15455:3;15448:25;15519:4;15512:5;15508:16;15502:23;15534:48;15576:4;15571:3;15567:14;15553:12;-1:-1:-1;;;;;1241:31:15;1229:44;;1175:104;15534:48;;15630:4;15623:5;15619:16;15613:23;15645:64;15703:4;15698:3;15694:14;15678;15645:64;:::i;:::-;;15757:4;15750:5;15746:16;15740:23;15795:2;15788:4;15783:3;15779:14;15772:26;15819:47;15862:2;15857:3;15853:12;15837:14;15819:47;:::i;:::-;15807:59;;;15914:4;15907:5;15903:16;15897:23;15962:3;15956:4;15952:14;15945:4;15940:3;15936:14;15929:38;15990:39;16024:4;16008:14;15990:39;:::i;:::-;15976:53;;;16077:4;16070:5;16066:16;16060:23;16127:3;16119:6;16115:16;16108:4;16103:3;16099:14;16092:40;16155:41;16189:6;16173:14;16155:41;:::i;:::-;16141:55;;;16244:4;16237:5;16233:16;16227:23;16259:47;16300:4;16295:3;16291:14;16275;269:13;262:21;250:34;;199:91;16259:47;-1:-1:-1;16355:4:15;16344:16;;;16338:23;16322:14;;;16315:47;16381:6;16423:14;;;16417:21;16403:12;;;16396:43;16458:6;16501:14;;;16495:21;4714:12;;16572;;;4702:25;4790:4;4779:16;;4773:23;4766:31;4759:39;4743:14;;;4736:63;16525:60;;16633:6;16626:5;16622:18;16616:25;16687:3;16679:6;16675:16;16666:6;16661:3;16657:16;16650:42;16708:57;16758:6;16742:14;16708:57;:::i;16776:261::-;16957:2;16946:9;16939:21;16920:4;16977:54;17027:2;17016:9;17012:18;17004:6;16977:54;:::i;17042:875::-;17383:3;17372:9;17365:22;17346:4;17410:46;17451:3;17440:9;17436:19;17428:6;17410:46;:::i;:::-;17504:9;17496:6;17492:22;17487:2;17476:9;17472:18;17465:50;17538:33;17564:6;17556;17538:33;:::i;:::-;17524:47;;17619:9;17611:6;17607:22;17602:2;17591:9;17587:18;17580:50;17653:33;17679:6;17671;17653:33;:::i;:::-;17639:47;;17734:9;17726:6;17722:22;17717:2;17706:9;17702:18;17695:50;17768:33;17794:6;17786;17768:33;:::i;:::-;17754:47;;17850:9;17842:6;17838:22;17832:3;17821:9;17817:19;17810:51;17878:33;17904:6;17896;17878:33;:::i;:::-;17870:41;17042:875;-1:-1:-1;;;;;;;;17042:875:15:o;17922:193::-;17992:4;18025:18;18017:6;18014:30;18011:56;;;18047:18;;:::i;:::-;-1:-1:-1;18092:1:15;18088:14;18104:4;18084:25;;17922:193::o;18120:2023::-;18238:6;18246;18277:2;18320;18308:9;18299:7;18295:23;18291:32;18288:52;;;18336:1;18333;18326:12;18288:52;18372:9;18359:23;18349:33;;18401:2;18454;18443:9;18439:18;18426:32;18477:18;18518:2;18510:6;18507:14;18504:34;;;18534:1;18531;18524:12;18504:34;18572:6;18561:9;18557:22;18547:32;;18617:7;18610:4;18606:2;18602:13;18598:27;18588:55;;18639:1;18636;18629:12;18588:55;18675:2;18662:16;18698:70;18714:53;18764:2;18714:53;:::i;:::-;18698:70;:::i;:::-;18802:15;;;18884:1;18880:10;;;;18872:19;;18868:28;;;18833:12;;;;18908:19;;;18905:39;;;18940:1;18937;18930:12;18905:39;18972:2;18968;18964:11;18984:1129;19000:6;18995:3;18992:15;18984:1129;;;19086:3;19073:17;19122:2;19109:11;19106:19;19103:109;;;19166:1;19195:2;19191;19184:14;19103:109;19235:20;;19290:2;19282:11;;19278:25;-1:-1:-1;19268:123:15;;19345:1;19374:2;19370;19363:14;19268:123;19435:2;19431;19427:11;19414:25;19465:70;19481:53;19531:2;19481:53;:::i;19465:70::-;19579:17;;;19677:1;19673:10;;;;19665:19;;19661:28;;;19618:14;;;;19705:21;;;19702:114;;;19768:1;19798:3;19793;19786:16;19702:114;19842:11;;;;19866:174;19884:8;19877:5;19874:19;19866:174;;;19966:19;;19952:34;;19905:14;;;;20012;;;;19866:174;;;20053:18;;-1:-1:-1;;;20091:12:15;;;;19017;;18984:1129;;;18988:3;20132:5;20122:15;;;;;;;;;18120:2023;;;;;:::o;20148:711::-;20441:3;20430:9;20423:22;20404:4;20468:46;20509:3;20498:9;20494:19;20486:6;20468:46;:::i;:::-;20562:9;20554:6;20550:22;20545:2;20534:9;20530:18;20523:50;20596:33;20622:6;20614;20596:33;:::i;:::-;20582:47;;20677:9;20669:6;20665:22;20660:2;20649:9;20645:18;20638:50;20711:33;20737:6;20729;20711:33;:::i;:::-;20697:47;;20792:9;20784:6;20780:22;20775:2;20764:9;20760:18;20753:50;20820:33;20846:6;20838;20820:33;:::i;:::-;20812:41;20148:711;-1:-1:-1;;;;;;;20148:711:15:o;20864:844::-;21058:4;21087:2;21127;21116:9;21112:18;21157:2;21146:9;21139:21;21180:6;21215;21209:13;21246:6;21238;21231:22;21284:2;21273:9;21269:18;21262:25;;21346:2;21336:6;21333:1;21329:14;21318:9;21314:30;21310:39;21296:53;;21384:2;21376:6;21372:15;21405:1;21415:264;21429:6;21426:1;21423:13;21415:264;;;21522:2;21518:7;21506:9;21498:6;21494:22;21490:36;21485:3;21478:49;21550;21592:6;21583;21577:13;21550:49;:::i;:::-;21540:59;-1:-1:-1;21657:12:15;;;;21622:15;;;;21451:1;21444:9;21415:264;;21713:1525;22267:25;;;-1:-1:-1;;;;;1241:31:15;;22343:2;22328:18;;1229:44;22226:4;22255:3;22383:2;22378;22367:9;22363:18;22356:30;22409:45;22450:2;22439:9;22435:18;22427:6;22409:45;:::i;:::-;22395:59;;22502:9;22494:6;22490:22;22485:2;22474:9;22470:18;22463:50;22536:33;22562:6;22554;22536:33;:::i;:::-;22522:47;;22618:9;22610:6;22606:22;22600:3;22589:9;22585:19;22578:51;22652:33;22678:6;22670;22652:33;:::i;:::-;22638:47;;22734:9;22726:6;22722:22;22716:3;22705:9;22701:19;22694:51;22768:33;22794:6;22786;22768:33;:::i;:::-;22754:47;;22850:9;22842:6;22838:22;22832:3;22821:9;22817:19;22810:51;22884:33;22910:6;22902;22884:33;:::i;:::-;22870:47;;22966:9;22958:6;22954:22;22948:3;22937:9;22933:19;22926:51;23000:33;23026:6;23018;23000:33;:::i;:::-;22986:47;;23082:9;23074:6;23070:22;23064:3;23053:9;23049:19;23042:51;23110:33;23136:6;23128;23110:33;:::i;:::-;23174:3;23159:19;;23152:35;;;;-1:-1:-1;;23218:3:15;23203:19;23196:36;23102:41;21713:1525;-1:-1:-1;;;;;;;;;21713:1525:15:o;23243:265::-;23426:2;23415:9;23408:21;23389:4;23446:56;23498:2;23487:9;23483:18;23475:6;23446:56;:::i;23513:259::-;23692:2;23681:9;23674:21;23655:4;23712:54;23762:2;23751:9;23747:18;23739:6;23712:54;:::i;24132:127::-;24193:10;24188:3;24184:20;24181:1;24174:31;24224:4;24221:1;24214:15;24248:4;24245:1;24238:15;24264:135;24303:3;-1:-1:-1;;24324:17:15;;24321:43;;;24344:18;;:::i;:::-;-1:-1:-1;24391:1:15;24380:13;;24264:135::o;24404:127::-;24465:10;24460:3;24456:20;24453:1;24446:31;24496:4;24493:1;24486:15;24520:4;24517:1;24510:15;24536:380;24615:1;24611:12;;;;24658;;;24679:61;;24733:4;24725:6;24721:17;24711:27;;24679:61;24786:2;24778:6;24775:14;24755:18;24752:38;24749:161;;;24832:10;24827:3;24823:20;24820:1;24813:31;24867:4;24864:1;24857:15;24895:4;24892:1;24885:15;24921:128;24961:3;24992:1;24988:6;24985:1;24982:13;24979:39;;;24998:18;;:::i;:::-;-1:-1:-1;25034:9:15;;24921:128::o;26021:125::-;26061:4;26089:1;26086;26083:8;26080:34;;;26094:18;;:::i;:::-;-1:-1:-1;26131:9:15;;26021:125::o;26151:411::-;26353:2;26335:21;;;26392:2;26372:18;;;26365:30;26431:34;26426:2;26411:18;;26404:62;-1:-1:-1;;;26497:2:15;26482:18;;26475:45;26552:3;26537:19;;26151:411::o;26924:175::-;26961:3;27005:4;26998:5;26994:16;27034:4;27025:7;27022:17;27019:43;;;27042:18;;:::i;:::-;27091:1;27078:15;;26924:175;-1:-1:-1;;26924:175:15:o",
  "source": "pragma solidity >=0.5.0 <=0.9.0;\r\n// SPDX-License-Identifier: GPL-3.0-or-later\r\n\r\nimport './ProducerContract.sol';\r\nimport './ActivistContract.sol';\r\nimport './CategoryContract.sol';\r\n\r\n/**\r\n* @title InspectionContract\r\n* @dev Inpection action core\r\n*/\r\ncontract InspectionContract is ProducerContract, ActivistContract, CategoryContract {\r\n    enum InspectionStatus { OPEN, EXPIRED, INSPECTED, ACCEPTED } \r\n    uint inspactionExpireIn = 604800; // Seven days\r\n    \r\n    struct Inspection {\r\n        uint id;\r\n        InspectionStatus status;\r\n        address producerWallet;\r\n        address activistWallet;\r\n        uint[][] isas;\r\n        uint isaPoints;\r\n        uint expiresIn;\r\n        uint createdAt;\r\n        uint index;\r\n    }\r\n    Inspection[] inspectionsList;\r\n    mapping(address => Inspection[]) userInspections;\r\n    mapping(uint256 => Inspection) inspections;\r\n    uint256 inspectionsCount;\r\n\r\n    /**\r\n   * @dev Allows the current user producer/activist get all yours inspections with status INSPECTED\r\n   */\r\n    function getInspectionsHistory() public view returns(Inspection[] memory) {\r\n        return userInspections[msg.sender];\r\n    }\r\n\r\n  /**\r\n   * @dev Allows the current user (producer) request a inspection.\r\n   */\r\n    function requestInspection() public returns(bool) {\r\n        require(producerExists(msg.sender), \"You are not a producer! Please register as one\");\r\n        require(producers[msg.sender].recentInspection == false, \"You have a inspection request OPEN or ACCEPTED! Wait a activist realize inspection or you can close it\");\r\n        \r\n        createRequest();\r\n        producers[msg.sender].recentInspection = true;\r\n        \r\n        return true;\r\n    }     \r\n    \r\n    function createRequest() internal{\r\n        uint id = inspectionsCount + 1;\r\n        uint index = id - 1;\r\n        uint[][] memory isas;\r\n        uint expiresIn = block.timestamp + inspactionExpireIn;\r\n        Inspection memory inspection = Inspection(id, InspectionStatus.OPEN, msg.sender, msg.sender, isas,  0, expiresIn,  block.timestamp, index);\r\n        inspectionsList.push(inspection);\r\n        inspections[id] = inspection;\r\n        inspectionsCount++;\r\n    }\r\n    \r\n    /**\r\n   * @dev Allows the current user (activist) accept a inspection.\r\n   * @param inspectionId The id of the inspection that the activist want accept.\r\n   */\r\n    function acceptInspection(uint inspectionId) public requireActivist requireInspectionExists(inspectionId) returns(bool) {\r\n        Inspection memory inspection = inspections[inspectionId];\r\n        if (inspection.status != InspectionStatus.OPEN) return false;\r\n\r\n        inspection.status = InspectionStatus.ACCEPTED;\r\n        inspection.activistWallet = msg.sender;\r\n        inspections[inspectionId] = inspection;\r\n\r\n        inspectionsList[inspection.index] = inspection;\r\n        return true;\r\n    }  \r\n    \r\n    /**\r\n   * @dev Calculate the ISA of the inspection based in the category and the ISA level of the category\r\n   * @param inspection Receive the inspected inspection with your isas levels\r\n   */\r\n    function calculateIsa(Inspection memory inspection) internal pure returns(uint){ \r\n        uint[][] memory isas = inspection.isas;\r\n        uint isaPoints = checkIsaPoints(isas);\r\n        return isaPoints;\r\n    }\r\n    \r\n    /**\r\n     * @dev Allow a activist realize a inspection and mark as INSPECTED\r\n     * @param inspectionId The id of the inspection to be realized\r\n     * @param isas The uint[][] of categoryId and isaIndex. Ex: isas = [ [categoryId, isaIndex], [categoryId, isaIndex] ]\r\n     */ \r\n    function realizeInspection(uint inspectionId, uint[][] memory isas) public  requireActivist requireInspectionExists(inspectionId) returns(bool) {\r\n        if (!isAccepted(inspectionId)) return false;\r\n        if (!isActivistOwner(inspectionId)) return false;\r\n\r\n        Inspection memory inspection = inspections[inspectionId];\r\n\r\n        markAsRealized(inspection, isas);\r\n        afterRealizeInspection(inspectionId);\r\n        updateProducerIsa(inspectionId, inspection.isaPoints);\r\n        approveProducerNewTokens(inspection.producerWallet, 2000);  \r\n        return true;\r\n    } \r\n\r\n    function markAsRealized(Inspection memory inspection, uint[][] memory isas) internal {   \r\n        inspection.isas = isas;\r\n        inspection.status = InspectionStatus.INSPECTED;\r\n        inspection.isaPoints = calculateIsa(inspection);\r\n        inspections[inspection.id] = inspection;\r\n        inspectionsList[inspection.index] = inspection;\r\n    }\r\n\r\n    function updateProducerIsa(uint inspectionId, uint isaPoints) internal {\r\n        producers[inspections[inspectionId].producerWallet].isaPoints = isaPoints;\r\n    }  \r\n    \r\n    /**\r\n   * @dev Returns a inspection by id if that exists.\r\n   * @param id The id of the inspection to return.\r\n   */\r\n    function getInspection(uint256 id) public view returns(Inspection memory) {\r\n        return inspections[id];\r\n    }\r\n    \r\n    /**\r\n   * @dev Returns all requested inspections.\r\n   */\r\n    function getInspections() public view returns (Inspection[] memory) {\r\n        return inspectionsList;\r\n    }\r\n    \r\n    /**\r\n   * @dev Returns all inpections status string.\r\n   */\r\n    function getInspectionsStatus() public pure returns(string memory, string memory, string memory, string memory) {\r\n        return (\"OPEN\", \"EXPIRED\", \"INSPECTED\", \"ACCEPTED\");\r\n    }\r\n    \r\n    /**\r\n   * @dev Check if an inspections exists in mapping.\r\n   * @param id The id of the inspection that the activist want accept.\r\n   */\r\n    function inspectionExists(uint256 id) public view returns(bool) {\r\n        return inspections[id].id >= 1;\r\n    }\r\n    \r\n    /**\r\n   * @dev Inscrement producer and activist request action and mark both as no recent open requests and inspection\r\n   * @param inspectionId The id of the inspection\r\n   */\r\n    function afterRealizeInspection(uint inspectionId) internal {\r\n        address producerWallet = inspections[inspectionId].producerWallet;\r\n        address activistWallet = inspections[inspectionId].activistWallet;\r\n        \r\n        // Increment actvist inspections and release to carry out new inspections\r\n        activists[activistWallet].recentInspection = false;\r\n        activists[activistWallet].totalInspections++;\r\n        \r\n        // Increment producer requests and release to carry out new requests\r\n        producers[producerWallet].recentInspection = false;\r\n        producers[producerWallet].totalRequests++;\r\n        \r\n        userInspections[producerWallet].push(inspections[inspectionId]);\r\n        userInspections[activistWallet].push(inspections[inspectionId]);\r\n    }\r\n\r\n    /**\r\n   * @dev Sum the ISA points\r\n   * @param isas The isas values\r\n   */\r\n    function checkIsaPoints(uint[][] memory isas) internal pure returns(uint) {\r\n        uint isaPoints = 0;\r\n        for (uint8 i = 0; i < isas.length; i++) {\r\n            uint isaIndex = isas[i][1];\r\n            if (isaIndex <= 2) {\r\n                isaPoints++;\r\n            }\r\n        }\r\n        return isaPoints;\r\n    }\r\n    \r\n    function isActivistOwner(uint inspectionId) internal view returns(bool) {\r\n        return inspections[inspectionId].activistWallet == msg.sender;\r\n    }\r\n \r\n    function isAccepted(uint inspectionId) internal view returns(bool) {\r\n        return inspections[inspectionId].status == InspectionStatus.ACCEPTED;\r\n    }\r\n    \r\n    // MODIFIERS\r\n    modifier requireActivist() {\r\n        require(activistExists(msg.sender), \"You must be an activist! Please register as one\");\r\n        _;\r\n    }\r\n    \r\n    modifier requireInspectionExists(uint inspectionId) {\r\n        require(inspectionExists(inspectionId), \"This inspection don't exists\");\r\n        _;\r\n    }\r\n    \r\n}\r\n",
  "sourcePath": "C:\\Users\\Breno\\Downloads\\SintropContract (1)\\contracts\\InspectionContract.sol",
  "ast": {
    "absolutePath": "/C/Users/Breno/Downloads/SintropContract (1)/contracts/InspectionContract.sol",
    "exportedSymbols": {
      "ActivistContract": [
        175
      ],
      "CategoryContract": [
        381
      ],
      "InspectionContract": [
        997
      ],
      "ProducerContract": [
        1287
      ],
      "UserContract": [
        1959
      ]
    },
    "id": 998,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 383,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<=",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:2"
      },
      {
        "absolutePath": "/C/Users/Breno/Downloads/SintropContract (1)/contracts/ProducerContract.sol",
        "file": "./ProducerContract.sol",
        "id": 384,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 998,
        "sourceUnit": 1288,
        "src": "82:32:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/Breno/Downloads/SintropContract (1)/contracts/ActivistContract.sol",
        "file": "./ActivistContract.sol",
        "id": 385,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 998,
        "sourceUnit": 176,
        "src": "116:32:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/Breno/Downloads/SintropContract (1)/contracts/CategoryContract.sol",
        "file": "./CategoryContract.sol",
        "id": 386,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 998,
        "sourceUnit": 382,
        "src": "150:32:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 388,
              "name": "ProducerContract",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1287,
              "src": "285:16:2"
            },
            "id": 389,
            "nodeType": "InheritanceSpecifier",
            "src": "285:16:2"
          },
          {
            "baseName": {
              "id": 390,
              "name": "ActivistContract",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 175,
              "src": "303:16:2"
            },
            "id": 391,
            "nodeType": "InheritanceSpecifier",
            "src": "303:16:2"
          },
          {
            "baseName": {
              "id": 392,
              "name": "CategoryContract",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 381,
              "src": "321:16:2"
            },
            "id": 393,
            "nodeType": "InheritanceSpecifier",
            "src": "321:16:2"
          }
        ],
        "canonicalName": "InspectionContract",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 387,
          "nodeType": "StructuredDocumentation",
          "src": "186:66:2",
          "text": " @title InspectionContract\n @dev Inpection action core"
        },
        "fullyImplemented": true,
        "id": 997,
        "linearizedBaseContracts": [
          997,
          381,
          175,
          1287,
          1959
        ],
        "name": "InspectionContract",
        "nameLocation": "263:18:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "InspectionContract.InspectionStatus",
            "id": 398,
            "members": [
              {
                "id": 394,
                "name": "OPEN",
                "nameLocation": "369:4:2",
                "nodeType": "EnumValue",
                "src": "369:4:2"
              },
              {
                "id": 395,
                "name": "EXPIRED",
                "nameLocation": "375:7:2",
                "nodeType": "EnumValue",
                "src": "375:7:2"
              },
              {
                "id": 396,
                "name": "INSPECTED",
                "nameLocation": "384:9:2",
                "nodeType": "EnumValue",
                "src": "384:9:2"
              },
              {
                "id": 397,
                "name": "ACCEPTED",
                "nameLocation": "395:8:2",
                "nodeType": "EnumValue",
                "src": "395:8:2"
              }
            ],
            "name": "InspectionStatus",
            "nameLocation": "350:16:2",
            "nodeType": "EnumDefinition",
            "src": "345:60:2"
          },
          {
            "constant": false,
            "id": 401,
            "mutability": "mutable",
            "name": "inspactionExpireIn",
            "nameLocation": "417:18:2",
            "nodeType": "VariableDeclaration",
            "scope": 997,
            "src": "412:32:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 399,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "412:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "363034383030",
              "id": 400,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "438:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_604800_by_1",
                "typeString": "int_const 604800"
              },
              "value": "604800"
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "InspectionContract.Inspection",
            "id": 423,
            "members": [
              {
                "constant": false,
                "id": 403,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "505:2:2",
                "nodeType": "VariableDeclaration",
                "scope": 423,
                "src": "500:7:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 402,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "500:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 406,
                "mutability": "mutable",
                "name": "status",
                "nameLocation": "535:6:2",
                "nodeType": "VariableDeclaration",
                "scope": 423,
                "src": "518:23:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_InspectionStatus_$398",
                  "typeString": "enum InspectionContract.InspectionStatus"
                },
                "typeName": {
                  "id": 405,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 404,
                    "name": "InspectionStatus",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 398,
                    "src": "518:16:2"
                  },
                  "referencedDeclaration": 398,
                  "src": "518:16:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_InspectionStatus_$398",
                    "typeString": "enum InspectionContract.InspectionStatus"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 408,
                "mutability": "mutable",
                "name": "producerWallet",
                "nameLocation": "560:14:2",
                "nodeType": "VariableDeclaration",
                "scope": 423,
                "src": "552:22:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 407,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "552:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 410,
                "mutability": "mutable",
                "name": "activistWallet",
                "nameLocation": "593:14:2",
                "nodeType": "VariableDeclaration",
                "scope": 423,
                "src": "585:22:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 409,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "585:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 414,
                "mutability": "mutable",
                "name": "isas",
                "nameLocation": "627:4:2",
                "nodeType": "VariableDeclaration",
                "scope": 423,
                "src": "618:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                  "typeString": "uint256[][]"
                },
                "typeName": {
                  "baseType": {
                    "baseType": {
                      "id": 411,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "618:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 412,
                    "nodeType": "ArrayTypeName",
                    "src": "618:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "id": 413,
                  "nodeType": "ArrayTypeName",
                  "src": "618:8:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                    "typeString": "uint256[][]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 416,
                "mutability": "mutable",
                "name": "isaPoints",
                "nameLocation": "647:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 423,
                "src": "642:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 415,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "642:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 418,
                "mutability": "mutable",
                "name": "expiresIn",
                "nameLocation": "672:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 423,
                "src": "667:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 417,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "667:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 420,
                "mutability": "mutable",
                "name": "createdAt",
                "nameLocation": "697:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 423,
                "src": "692:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 419,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "692:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 422,
                "mutability": "mutable",
                "name": "index",
                "nameLocation": "722:5:2",
                "nodeType": "VariableDeclaration",
                "scope": 423,
                "src": "717:10:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 421,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "717:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Inspection",
            "nameLocation": "478:10:2",
            "nodeType": "StructDefinition",
            "scope": 997,
            "src": "471:264:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 427,
            "mutability": "mutable",
            "name": "inspectionsList",
            "nameLocation": "754:15:2",
            "nodeType": "VariableDeclaration",
            "scope": 997,
            "src": "741:28:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Inspection_$423_storage_$dyn_storage",
              "typeString": "struct InspectionContract.Inspection[]"
            },
            "typeName": {
              "baseType": {
                "id": 425,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 424,
                  "name": "Inspection",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 423,
                  "src": "741:10:2"
                },
                "referencedDeclaration": 423,
                "src": "741:10:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Inspection_$423_storage_ptr",
                  "typeString": "struct InspectionContract.Inspection"
                }
              },
              "id": 426,
              "nodeType": "ArrayTypeName",
              "src": "741:12:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Inspection_$423_storage_$dyn_storage_ptr",
                "typeString": "struct InspectionContract.Inspection[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 433,
            "mutability": "mutable",
            "name": "userInspections",
            "nameLocation": "809:15:2",
            "nodeType": "VariableDeclaration",
            "scope": 997,
            "src": "776:48:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Inspection_$423_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct InspectionContract.Inspection[])"
            },
            "typeName": {
              "id": 432,
              "keyType": {
                "id": 428,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "784:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "776:32:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Inspection_$423_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct InspectionContract.Inspection[])"
              },
              "valueType": {
                "baseType": {
                  "id": 430,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 429,
                    "name": "Inspection",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 423,
                    "src": "795:10:2"
                  },
                  "referencedDeclaration": 423,
                  "src": "795:10:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Inspection_$423_storage_ptr",
                    "typeString": "struct InspectionContract.Inspection"
                  }
                },
                "id": 431,
                "nodeType": "ArrayTypeName",
                "src": "795:12:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Inspection_$423_storage_$dyn_storage_ptr",
                  "typeString": "struct InspectionContract.Inspection[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 438,
            "mutability": "mutable",
            "name": "inspections",
            "nameLocation": "862:11:2",
            "nodeType": "VariableDeclaration",
            "scope": 997,
            "src": "831:42:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$423_storage_$",
              "typeString": "mapping(uint256 => struct InspectionContract.Inspection)"
            },
            "typeName": {
              "id": 437,
              "keyType": {
                "id": 434,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "839:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "831:30:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$423_storage_$",
                "typeString": "mapping(uint256 => struct InspectionContract.Inspection)"
              },
              "valueType": {
                "id": 436,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 435,
                  "name": "Inspection",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 423,
                  "src": "850:10:2"
                },
                "referencedDeclaration": 423,
                "src": "850:10:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Inspection_$423_storage_ptr",
                  "typeString": "struct InspectionContract.Inspection"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 440,
            "mutability": "mutable",
            "name": "inspectionsCount",
            "nameLocation": "888:16:2",
            "nodeType": "VariableDeclaration",
            "scope": 997,
            "src": "880:24:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 439,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "880:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 453,
              "nodeType": "Block",
              "src": "1104:53:2",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 448,
                      "name": "userInspections",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 433,
                      "src": "1122:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Inspection_$423_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct InspectionContract.Inspection storage ref[] storage ref)"
                      }
                    },
                    "id": 451,
                    "indexExpression": {
                      "expression": {
                        "id": 449,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1138:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 450,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1138:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1122:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Inspection_$423_storage_$dyn_storage",
                      "typeString": "struct InspectionContract.Inspection storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 447,
                  "id": 452,
                  "nodeType": "Return",
                  "src": "1115:34:2"
                }
              ]
            },
            "documentation": {
              "id": 441,
              "nodeType": "StructuredDocumentation",
              "src": "913:111:2",
              "text": " @dev Allows the current user producer/activist get all yours inspections with status INSPECTED"
            },
            "functionSelector": "0bbec3c2",
            "id": 454,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInspectionsHistory",
            "nameLocation": "1039:21:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 442,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1060:2:2"
            },
            "returnParameters": {
              "id": 447,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 446,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 454,
                  "src": "1083:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Inspection_$423_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct InspectionContract.Inspection[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 444,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 443,
                        "name": "Inspection",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 423,
                        "src": "1083:10:2"
                      },
                      "referencedDeclaration": 423,
                      "src": "1083:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$423_storage_ptr",
                        "typeString": "struct InspectionContract.Inspection"
                      }
                    },
                    "id": 445,
                    "nodeType": "ArrayTypeName",
                    "src": "1083:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Inspection_$423_storage_$dyn_storage_ptr",
                      "typeString": "struct InspectionContract.Inspection[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1082:21:2"
            },
            "scope": 997,
            "src": "1030:127:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 492,
              "nodeType": "Block",
              "src": "1297:401:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 462,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1331:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 463,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1331:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 461,
                          "name": "producerExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1225,
                          "src": "1316:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1316:26:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520617265206e6f7420612070726f64756365722120506c65617365207265676973746572206173206f6e65",
                        "id": 465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1344:48:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dbb08f64851b685a0f36294d305e2db5057008a52567e5bdec9c2160a57b7398",
                          "typeString": "literal_string \"You are not a producer! Please register as one\""
                        },
                        "value": "You are not a producer! Please register as one"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dbb08f64851b685a0f36294d305e2db5057008a52567e5bdec9c2160a57b7398",
                          "typeString": "literal_string \"You are not a producer! Please register as one\""
                        }
                      ],
                      "id": 460,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1308:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1308:85:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 467,
                  "nodeType": "ExpressionStatement",
                  "src": "1308:85:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 469,
                              "name": "producers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1085,
                              "src": "1412:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Producer_$1062_storage_$",
                                "typeString": "mapping(address => struct ProducerContract.Producer storage ref)"
                              }
                            },
                            "id": 472,
                            "indexExpression": {
                              "expression": {
                                "id": 470,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1422:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 471,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1422:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1412:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Producer_$1062_storage",
                              "typeString": "struct ProducerContract.Producer storage ref"
                            }
                          },
                          "id": 473,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "recentInspection",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1051,
                          "src": "1412:38:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1454:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "1412:47:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752068617665206120696e7370656374696f6e2072657175657374204f50454e206f722041434345505445442120576169742061206163746976697374207265616c697a6520696e7370656374696f6e206f7220796f752063616e20636c6f7365206974",
                        "id": 476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1461:104:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6c06c4f9d658f6d0bee949be33756e3bdf523e4cfb9cc40af70a6abee2364d7d",
                          "typeString": "literal_string \"You have a inspection request OPEN or ACCEPTED! Wait a activist realize inspection or you can close it\""
                        },
                        "value": "You have a inspection request OPEN or ACCEPTED! Wait a activist realize inspection or you can close it"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6c06c4f9d658f6d0bee949be33756e3bdf523e4cfb9cc40af70a6abee2364d7d",
                          "typeString": "literal_string \"You have a inspection request OPEN or ACCEPTED! Wait a activist realize inspection or you can close it\""
                        }
                      ],
                      "id": 468,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1404:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1404:162:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 478,
                  "nodeType": "ExpressionStatement",
                  "src": "1404:162:2"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 479,
                      "name": "createRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 557,
                      "src": "1587:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1587:15:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 481,
                  "nodeType": "ExpressionStatement",
                  "src": "1587:15:2"
                },
                {
                  "expression": {
                    "id": 488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 482,
                          "name": "producers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1085,
                          "src": "1613:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Producer_$1062_storage_$",
                            "typeString": "mapping(address => struct ProducerContract.Producer storage ref)"
                          }
                        },
                        "id": 485,
                        "indexExpression": {
                          "expression": {
                            "id": 483,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1623:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 484,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1623:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1613:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Producer_$1062_storage",
                          "typeString": "struct ProducerContract.Producer storage ref"
                        }
                      },
                      "id": 486,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "recentInspection",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1051,
                      "src": "1613:38:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1654:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1613:45:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 489,
                  "nodeType": "ExpressionStatement",
                  "src": "1613:45:2"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1686:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 459,
                  "id": 491,
                  "nodeType": "Return",
                  "src": "1679:11:2"
                }
              ]
            },
            "documentation": {
              "id": 455,
              "nodeType": "StructuredDocumentation",
              "src": "1163:78:2",
              "text": " @dev Allows the current user (producer) request a inspection."
            },
            "functionSelector": "86ae2fb1",
            "id": 493,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestInspection",
            "nameLocation": "1256:17:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 456,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1273:2:2"
            },
            "returnParameters": {
              "id": 459,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 458,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 493,
                  "src": "1291:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 457,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1291:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1290:6:2"
            },
            "scope": 997,
            "src": "1247:451:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 556,
              "nodeType": "Block",
              "src": "1748:434:2",
              "statements": [
                {
                  "assignments": [
                    497
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 497,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "1764:2:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 556,
                      "src": "1759:7:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 496,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1759:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 501,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 498,
                      "name": "inspectionsCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 440,
                      "src": "1769:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 499,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1788:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1769:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1759:30:2"
                },
                {
                  "assignments": [
                    503
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 503,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "1805:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 556,
                      "src": "1800:10:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 502,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1800:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 507,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 504,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 497,
                      "src": "1813:2:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1818:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1813:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1800:19:2"
                },
                {
                  "assignments": [
                    513
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 513,
                      "mutability": "mutable",
                      "name": "isas",
                      "nameLocation": "1846:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 556,
                      "src": "1830:20:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                        "typeString": "uint256[][]"
                      },
                      "typeName": {
                        "baseType": {
                          "baseType": {
                            "id": 510,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "1830:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 511,
                          "nodeType": "ArrayTypeName",
                          "src": "1830:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "id": 512,
                        "nodeType": "ArrayTypeName",
                        "src": "1830:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                          "typeString": "uint256[][]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 514,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1830:20:2"
                },
                {
                  "assignments": [
                    516
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 516,
                      "mutability": "mutable",
                      "name": "expiresIn",
                      "nameLocation": "1866:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 556,
                      "src": "1861:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 515,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1861:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 521,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 517,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "1878:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1878:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 519,
                      "name": "inspactionExpireIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 401,
                      "src": "1896:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1878:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1861:53:2"
                },
                {
                  "assignments": [
                    524
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 524,
                      "mutability": "mutable",
                      "name": "inspection",
                      "nameLocation": "1943:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 556,
                      "src": "1925:28:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                        "typeString": "struct InspectionContract.Inspection"
                      },
                      "typeName": {
                        "id": 523,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 522,
                          "name": "Inspection",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 423,
                          "src": "1925:10:2"
                        },
                        "referencedDeclaration": 423,
                        "src": "1925:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$423_storage_ptr",
                          "typeString": "struct InspectionContract.Inspection"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 540,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 526,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 497,
                        "src": "1967:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 527,
                          "name": "InspectionStatus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 398,
                          "src": "1971:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_InspectionStatus_$398_$",
                            "typeString": "type(enum InspectionContract.InspectionStatus)"
                          }
                        },
                        "id": 528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "OPEN",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 394,
                        "src": "1971:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_InspectionStatus_$398",
                          "typeString": "enum InspectionContract.InspectionStatus"
                        }
                      },
                      {
                        "expression": {
                          "id": 529,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1994:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1994:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 531,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2006:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2006:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 533,
                        "name": "isas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 513,
                        "src": "2018:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2025:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 535,
                        "name": "expiresIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 516,
                        "src": "2028:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 536,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "2040:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "2040:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 538,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 503,
                        "src": "2057:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_InspectionStatus_$398",
                          "typeString": "enum InspectionContract.InspectionStatus"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 525,
                      "name": "Inspection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 423,
                      "src": "1956:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Inspection_$423_storage_ptr_$",
                        "typeString": "type(struct InspectionContract.Inspection storage pointer)"
                      }
                    },
                    "id": 539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1956:107:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                      "typeString": "struct InspectionContract.Inspection memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1925:138:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 544,
                        "name": "inspection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 524,
                        "src": "2095:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                          "typeString": "struct InspectionContract.Inspection memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                          "typeString": "struct InspectionContract.Inspection memory"
                        }
                      ],
                      "expression": {
                        "id": 541,
                        "name": "inspectionsList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 427,
                        "src": "2074:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Inspection_$423_storage_$dyn_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref[] storage ref"
                        }
                      },
                      "id": 543,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2074:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Inspection_$423_storage_$dyn_storage_ptr_$_t_struct$_Inspection_$423_storage_$returns$__$bound_to$_t_array$_t_struct$_Inspection_$423_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct InspectionContract.Inspection storage ref[] storage pointer,struct InspectionContract.Inspection storage ref)"
                      }
                    },
                    "id": 545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2074:32:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 546,
                  "nodeType": "ExpressionStatement",
                  "src": "2074:32:2"
                },
                {
                  "expression": {
                    "id": 551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 547,
                        "name": "inspections",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 438,
                        "src": "2117:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$423_storage_$",
                          "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                        }
                      },
                      "id": 549,
                      "indexExpression": {
                        "id": 548,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 497,
                        "src": "2129:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2117:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$423_storage",
                        "typeString": "struct InspectionContract.Inspection storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 550,
                      "name": "inspection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 524,
                      "src": "2135:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                        "typeString": "struct InspectionContract.Inspection memory"
                      }
                    },
                    "src": "2117:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$423_storage",
                      "typeString": "struct InspectionContract.Inspection storage ref"
                    }
                  },
                  "id": 552,
                  "nodeType": "ExpressionStatement",
                  "src": "2117:28:2"
                },
                {
                  "expression": {
                    "id": 554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "2156:18:2",
                    "subExpression": {
                      "id": 553,
                      "name": "inspectionsCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 440,
                      "src": "2156:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 555,
                  "nodeType": "ExpressionStatement",
                  "src": "2156:18:2"
                }
              ]
            },
            "id": 557,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createRequest",
            "nameLocation": "1724:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 494,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1737:2:2"
            },
            "returnParameters": {
              "id": 495,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1748:0:2"
            },
            "scope": 997,
            "src": "1715:467:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 614,
              "nodeType": "Block",
              "src": "2479:383:2",
              "statements": [
                {
                  "assignments": [
                    572
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 572,
                      "mutability": "mutable",
                      "name": "inspection",
                      "nameLocation": "2508:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 614,
                      "src": "2490:28:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                        "typeString": "struct InspectionContract.Inspection"
                      },
                      "typeName": {
                        "id": 571,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 570,
                          "name": "Inspection",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 423,
                          "src": "2490:10:2"
                        },
                        "referencedDeclaration": 423,
                        "src": "2490:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$423_storage_ptr",
                          "typeString": "struct InspectionContract.Inspection"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 576,
                  "initialValue": {
                    "baseExpression": {
                      "id": 573,
                      "name": "inspections",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 438,
                      "src": "2521:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$423_storage_$",
                        "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                      }
                    },
                    "id": 575,
                    "indexExpression": {
                      "id": 574,
                      "name": "inspectionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 560,
                      "src": "2533:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2521:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$423_storage",
                      "typeString": "struct InspectionContract.Inspection storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2490:56:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_InspectionStatus_$398",
                      "typeString": "enum InspectionContract.InspectionStatus"
                    },
                    "id": 581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 577,
                        "name": "inspection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 572,
                        "src": "2561:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                          "typeString": "struct InspectionContract.Inspection memory"
                        }
                      },
                      "id": 578,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 406,
                      "src": "2561:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_InspectionStatus_$398",
                        "typeString": "enum InspectionContract.InspectionStatus"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 579,
                        "name": "InspectionStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 398,
                        "src": "2582:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_InspectionStatus_$398_$",
                          "typeString": "type(enum InspectionContract.InspectionStatus)"
                        }
                      },
                      "id": 580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "OPEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 394,
                      "src": "2582:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_InspectionStatus_$398",
                        "typeString": "enum InspectionContract.InspectionStatus"
                      }
                    },
                    "src": "2561:42:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 584,
                  "nodeType": "IfStatement",
                  "src": "2557:60:2",
                  "trueBody": {
                    "expression": {
                      "hexValue": "66616c7365",
                      "id": 582,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2612:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "functionReturnParameters": 569,
                    "id": 583,
                    "nodeType": "Return",
                    "src": "2605:12:2"
                  }
                },
                {
                  "expression": {
                    "id": 590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 585,
                        "name": "inspection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 572,
                        "src": "2630:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                          "typeString": "struct InspectionContract.Inspection memory"
                        }
                      },
                      "id": 587,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 406,
                      "src": "2630:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_InspectionStatus_$398",
                        "typeString": "enum InspectionContract.InspectionStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 588,
                        "name": "InspectionStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 398,
                        "src": "2650:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_InspectionStatus_$398_$",
                          "typeString": "type(enum InspectionContract.InspectionStatus)"
                        }
                      },
                      "id": 589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ACCEPTED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 397,
                      "src": "2650:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_InspectionStatus_$398",
                        "typeString": "enum InspectionContract.InspectionStatus"
                      }
                    },
                    "src": "2630:45:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_InspectionStatus_$398",
                      "typeString": "enum InspectionContract.InspectionStatus"
                    }
                  },
                  "id": 591,
                  "nodeType": "ExpressionStatement",
                  "src": "2630:45:2"
                },
                {
                  "expression": {
                    "id": 597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 592,
                        "name": "inspection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 572,
                        "src": "2686:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                          "typeString": "struct InspectionContract.Inspection memory"
                        }
                      },
                      "id": 594,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "activistWallet",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 410,
                      "src": "2686:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 595,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2714:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 596,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2714:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2686:38:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 598,
                  "nodeType": "ExpressionStatement",
                  "src": "2686:38:2"
                },
                {
                  "expression": {
                    "id": 603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 599,
                        "name": "inspections",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 438,
                        "src": "2735:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$423_storage_$",
                          "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                        }
                      },
                      "id": 601,
                      "indexExpression": {
                        "id": 600,
                        "name": "inspectionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 560,
                        "src": "2747:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2735:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$423_storage",
                        "typeString": "struct InspectionContract.Inspection storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 602,
                      "name": "inspection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 572,
                      "src": "2763:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                        "typeString": "struct InspectionContract.Inspection memory"
                      }
                    },
                    "src": "2735:38:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$423_storage",
                      "typeString": "struct InspectionContract.Inspection storage ref"
                    }
                  },
                  "id": 604,
                  "nodeType": "ExpressionStatement",
                  "src": "2735:38:2"
                },
                {
                  "expression": {
                    "id": 610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 605,
                        "name": "inspectionsList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 427,
                        "src": "2786:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Inspection_$423_storage_$dyn_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref[] storage ref"
                        }
                      },
                      "id": 608,
                      "indexExpression": {
                        "expression": {
                          "id": 606,
                          "name": "inspection",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 572,
                          "src": "2802:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                            "typeString": "struct InspectionContract.Inspection memory"
                          }
                        },
                        "id": 607,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "index",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 422,
                        "src": "2802:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2786:33:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$423_storage",
                        "typeString": "struct InspectionContract.Inspection storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 609,
                      "name": "inspection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 572,
                      "src": "2822:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                        "typeString": "struct InspectionContract.Inspection memory"
                      }
                    },
                    "src": "2786:46:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$423_storage",
                      "typeString": "struct InspectionContract.Inspection storage ref"
                    }
                  },
                  "id": 611,
                  "nodeType": "ExpressionStatement",
                  "src": "2786:46:2"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2850:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 569,
                  "id": 613,
                  "nodeType": "Return",
                  "src": "2843:11:2"
                }
              ]
            },
            "documentation": {
              "id": 558,
              "nodeType": "StructuredDocumentation",
              "src": "2194:159:2",
              "text": " @dev Allows the current user (activist) accept a inspection.\n @param inspectionId The id of the inspection that the activist want accept."
            },
            "functionSelector": "e7857502",
            "id": 615,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 563,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 562,
                  "name": "requireActivist",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 983,
                  "src": "2411:15:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2411:15:2"
              },
              {
                "arguments": [
                  {
                    "id": 565,
                    "name": "inspectionId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 560,
                    "src": "2451:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 566,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 564,
                  "name": "requireInspectionExists",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 996,
                  "src": "2427:23:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2427:37:2"
              }
            ],
            "name": "acceptInspection",
            "nameLocation": "2368:16:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 560,
                  "mutability": "mutable",
                  "name": "inspectionId",
                  "nameLocation": "2390:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 615,
                  "src": "2385:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 559,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2385:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2384:19:2"
            },
            "returnParameters": {
              "id": 569,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 568,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 615,
                  "src": "2473:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 567,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2473:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2472:6:2"
            },
            "scope": 997,
            "src": "2359:503:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 641,
              "nodeType": "Block",
              "src": "3153:133:2",
              "statements": [
                {
                  "assignments": [
                    629
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 629,
                      "mutability": "mutable",
                      "name": "isas",
                      "nameLocation": "3181:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 641,
                      "src": "3165:20:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                        "typeString": "uint256[][]"
                      },
                      "typeName": {
                        "baseType": {
                          "baseType": {
                            "id": 626,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "3165:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 627,
                          "nodeType": "ArrayTypeName",
                          "src": "3165:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "id": 628,
                        "nodeType": "ArrayTypeName",
                        "src": "3165:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                          "typeString": "uint256[][]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 632,
                  "initialValue": {
                    "expression": {
                      "id": 630,
                      "name": "inspection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 619,
                      "src": "3188:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                        "typeString": "struct InspectionContract.Inspection memory"
                      }
                    },
                    "id": 631,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "isas",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 414,
                    "src": "3188:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                      "typeString": "uint256[] memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3165:38:2"
                },
                {
                  "assignments": [
                    634
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 634,
                      "mutability": "mutable",
                      "name": "isaPoints",
                      "nameLocation": "3219:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 641,
                      "src": "3214:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 633,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3214:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 638,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 636,
                        "name": "isas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 629,
                        "src": "3246:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        }
                      ],
                      "id": 635,
                      "name": "checkIsaPoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 939,
                      "src": "3231:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint256[] memory[] memory) pure returns (uint256)"
                      }
                    },
                    "id": 637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3231:20:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3214:37:2"
                },
                {
                  "expression": {
                    "id": 639,
                    "name": "isaPoints",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 634,
                    "src": "3269:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 623,
                  "id": 640,
                  "nodeType": "Return",
                  "src": "3262:16:2"
                }
              ]
            },
            "documentation": {
              "id": 616,
              "nodeType": "StructuredDocumentation",
              "src": "2876:192:2",
              "text": " @dev Calculate the ISA of the inspection based in the category and the ISA level of the category\n @param inspection Receive the inspected inspection with your isas levels"
            },
            "id": 642,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateIsa",
            "nameLocation": "3083:12:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 620,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 619,
                  "mutability": "mutable",
                  "name": "inspection",
                  "nameLocation": "3114:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 642,
                  "src": "3096:28:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                    "typeString": "struct InspectionContract.Inspection"
                  },
                  "typeName": {
                    "id": 618,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 617,
                      "name": "Inspection",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 423,
                      "src": "3096:10:2"
                    },
                    "referencedDeclaration": 423,
                    "src": "3096:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$423_storage_ptr",
                      "typeString": "struct InspectionContract.Inspection"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3095:30:2"
            },
            "returnParameters": {
              "id": 623,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 622,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 642,
                  "src": "3148:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 621,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3148:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3147:6:2"
            },
            "scope": 997,
            "src": "3074:212:2",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 703,
              "nodeType": "Block",
              "src": "3725:438:2",
              "statements": [
                {
                  "condition": {
                    "id": 662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3740:25:2",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 660,
                          "name": "inspectionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 645,
                          "src": "3752:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 659,
                        "name": "isAccepted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 971,
                        "src": "3741:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view returns (bool)"
                        }
                      },
                      "id": 661,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3741:24:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 665,
                  "nodeType": "IfStatement",
                  "src": "3736:43:2",
                  "trueBody": {
                    "expression": {
                      "hexValue": "66616c7365",
                      "id": 663,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3774:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "functionReturnParameters": 658,
                    "id": 664,
                    "nodeType": "Return",
                    "src": "3767:12:2"
                  }
                },
                {
                  "condition": {
                    "id": 669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3794:30:2",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 667,
                          "name": "inspectionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 645,
                          "src": "3811:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 666,
                        "name": "isActivistOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 955,
                        "src": "3795:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view returns (bool)"
                        }
                      },
                      "id": 668,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3795:29:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 672,
                  "nodeType": "IfStatement",
                  "src": "3790:48:2",
                  "trueBody": {
                    "expression": {
                      "hexValue": "66616c7365",
                      "id": 670,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3833:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "functionReturnParameters": 658,
                    "id": 671,
                    "nodeType": "Return",
                    "src": "3826:12:2"
                  }
                },
                {
                  "assignments": [
                    675
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 675,
                      "mutability": "mutable",
                      "name": "inspection",
                      "nameLocation": "3869:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 703,
                      "src": "3851:28:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                        "typeString": "struct InspectionContract.Inspection"
                      },
                      "typeName": {
                        "id": 674,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 673,
                          "name": "Inspection",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 423,
                          "src": "3851:10:2"
                        },
                        "referencedDeclaration": 423,
                        "src": "3851:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$423_storage_ptr",
                          "typeString": "struct InspectionContract.Inspection"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 679,
                  "initialValue": {
                    "baseExpression": {
                      "id": 676,
                      "name": "inspections",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 438,
                      "src": "3882:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$423_storage_$",
                        "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                      }
                    },
                    "id": 678,
                    "indexExpression": {
                      "id": 677,
                      "name": "inspectionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 645,
                      "src": "3894:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3882:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$423_storage",
                      "typeString": "struct InspectionContract.Inspection storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3851:56:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 681,
                        "name": "inspection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 675,
                        "src": "3935:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                          "typeString": "struct InspectionContract.Inspection memory"
                        }
                      },
                      {
                        "id": 682,
                        "name": "isas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 649,
                        "src": "3947:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                          "typeString": "struct InspectionContract.Inspection memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        }
                      ],
                      "id": 680,
                      "name": "markAsRealized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 750,
                      "src": "3920:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Inspection_$423_memory_ptr_$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (struct InspectionContract.Inspection memory,uint256[] memory[] memory)"
                      }
                    },
                    "id": 683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3920:32:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 684,
                  "nodeType": "ExpressionStatement",
                  "src": "3920:32:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 686,
                        "name": "inspectionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 645,
                        "src": "3986:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 685,
                      "name": "afterRealizeInspection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 893,
                      "src": "3963:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3963:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 688,
                  "nodeType": "ExpressionStatement",
                  "src": "3963:36:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 690,
                        "name": "inspectionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 645,
                        "src": "4028:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 691,
                          "name": "inspection",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 675,
                          "src": "4042:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                            "typeString": "struct InspectionContract.Inspection memory"
                          }
                        },
                        "id": 692,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isaPoints",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 416,
                        "src": "4042:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 689,
                      "name": "updateProducerIsa",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 768,
                      "src": "4010:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4010:53:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 694,
                  "nodeType": "ExpressionStatement",
                  "src": "4010:53:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 696,
                          "name": "inspection",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 675,
                          "src": "4099:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                            "typeString": "struct InspectionContract.Inspection memory"
                          }
                        },
                        "id": 697,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "producerWallet",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 408,
                        "src": "4099:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "32303030",
                        "id": 698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4126:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000_by_1",
                          "typeString": "int_const 2000"
                        },
                        "value": "2000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_2000_by_1",
                          "typeString": "int_const 2000"
                        }
                      ],
                      "id": 695,
                      "name": "approveProducerNewTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1253,
                      "src": "4074:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4074:57:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 700,
                  "nodeType": "ExpressionStatement",
                  "src": "4074:57:2"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4151:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 658,
                  "id": 702,
                  "nodeType": "Return",
                  "src": "4144:11:2"
                }
              ]
            },
            "documentation": {
              "id": 643,
              "nodeType": "StructuredDocumentation",
              "src": "3298:276:2",
              "text": " @dev Allow a activist realize a inspection and mark as INSPECTED\n @param inspectionId The id of the inspection to be realized\n @param isas The uint[][] of categoryId and isaIndex. Ex: isas = [ [categoryId, isaIndex], [categoryId, isaIndex] ]"
            },
            "functionSelector": "b92bd2d9",
            "id": 704,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 652,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 651,
                  "name": "requireActivist",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 983,
                  "src": "3657:15:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "3657:15:2"
              },
              {
                "arguments": [
                  {
                    "id": 654,
                    "name": "inspectionId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 645,
                    "src": "3697:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 655,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 653,
                  "name": "requireInspectionExists",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 996,
                  "src": "3673:23:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "3673:37:2"
              }
            ],
            "name": "realizeInspection",
            "nameLocation": "3590:17:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 650,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 645,
                  "mutability": "mutable",
                  "name": "inspectionId",
                  "nameLocation": "3613:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 704,
                  "src": "3608:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 644,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3608:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 649,
                  "mutability": "mutable",
                  "name": "isas",
                  "nameLocation": "3643:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 704,
                  "src": "3627:20:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                    "typeString": "uint256[][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 646,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3627:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 647,
                      "nodeType": "ArrayTypeName",
                      "src": "3627:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      }
                    },
                    "id": 648,
                    "nodeType": "ArrayTypeName",
                    "src": "3627:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                      "typeString": "uint256[][]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3607:41:2"
            },
            "returnParameters": {
              "id": 658,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 657,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 704,
                  "src": "3719:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 656,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3719:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3718:6:2"
            },
            "scope": 997,
            "src": "3581:582:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 749,
              "nodeType": "Block",
              "src": "4257:266:2",
              "statements": [
                {
                  "expression": {
                    "id": 718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 714,
                        "name": "inspection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 707,
                        "src": "4271:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                          "typeString": "struct InspectionContract.Inspection memory"
                        }
                      },
                      "id": 716,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isas",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 414,
                      "src": "4271:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                        "typeString": "uint256[] memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 717,
                      "name": "isas",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 711,
                      "src": "4289:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                        "typeString": "uint256[] memory[] memory"
                      }
                    },
                    "src": "4271:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                      "typeString": "uint256[] memory[] memory"
                    }
                  },
                  "id": 719,
                  "nodeType": "ExpressionStatement",
                  "src": "4271:22:2"
                },
                {
                  "expression": {
                    "id": 725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 720,
                        "name": "inspection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 707,
                        "src": "4304:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                          "typeString": "struct InspectionContract.Inspection memory"
                        }
                      },
                      "id": 722,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 406,
                      "src": "4304:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_InspectionStatus_$398",
                        "typeString": "enum InspectionContract.InspectionStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 723,
                        "name": "InspectionStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 398,
                        "src": "4324:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_InspectionStatus_$398_$",
                          "typeString": "type(enum InspectionContract.InspectionStatus)"
                        }
                      },
                      "id": 724,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "INSPECTED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 396,
                      "src": "4324:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_InspectionStatus_$398",
                        "typeString": "enum InspectionContract.InspectionStatus"
                      }
                    },
                    "src": "4304:46:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_InspectionStatus_$398",
                      "typeString": "enum InspectionContract.InspectionStatus"
                    }
                  },
                  "id": 726,
                  "nodeType": "ExpressionStatement",
                  "src": "4304:46:2"
                },
                {
                  "expression": {
                    "id": 733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 727,
                        "name": "inspection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 707,
                        "src": "4361:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                          "typeString": "struct InspectionContract.Inspection memory"
                        }
                      },
                      "id": 729,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isaPoints",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 416,
                      "src": "4361:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 731,
                          "name": "inspection",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 707,
                          "src": "4397:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                            "typeString": "struct InspectionContract.Inspection memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                            "typeString": "struct InspectionContract.Inspection memory"
                          }
                        ],
                        "id": 730,
                        "name": "calculateIsa",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 642,
                        "src": "4384:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_struct$_Inspection_$423_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (struct InspectionContract.Inspection memory) pure returns (uint256)"
                        }
                      },
                      "id": 732,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4384:24:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4361:47:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 734,
                  "nodeType": "ExpressionStatement",
                  "src": "4361:47:2"
                },
                {
                  "expression": {
                    "id": 740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 735,
                        "name": "inspections",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 438,
                        "src": "4419:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$423_storage_$",
                          "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                        }
                      },
                      "id": 738,
                      "indexExpression": {
                        "expression": {
                          "id": 736,
                          "name": "inspection",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 707,
                          "src": "4431:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                            "typeString": "struct InspectionContract.Inspection memory"
                          }
                        },
                        "id": 737,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "id",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 403,
                        "src": "4431:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4419:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$423_storage",
                        "typeString": "struct InspectionContract.Inspection storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 739,
                      "name": "inspection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 707,
                      "src": "4448:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                        "typeString": "struct InspectionContract.Inspection memory"
                      }
                    },
                    "src": "4419:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$423_storage",
                      "typeString": "struct InspectionContract.Inspection storage ref"
                    }
                  },
                  "id": 741,
                  "nodeType": "ExpressionStatement",
                  "src": "4419:39:2"
                },
                {
                  "expression": {
                    "id": 747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 742,
                        "name": "inspectionsList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 427,
                        "src": "4469:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Inspection_$423_storage_$dyn_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref[] storage ref"
                        }
                      },
                      "id": 745,
                      "indexExpression": {
                        "expression": {
                          "id": 743,
                          "name": "inspection",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 707,
                          "src": "4485:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                            "typeString": "struct InspectionContract.Inspection memory"
                          }
                        },
                        "id": 744,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "index",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 422,
                        "src": "4485:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4469:33:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$423_storage",
                        "typeString": "struct InspectionContract.Inspection storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 746,
                      "name": "inspection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 707,
                      "src": "4505:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                        "typeString": "struct InspectionContract.Inspection memory"
                      }
                    },
                    "src": "4469:46:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$423_storage",
                      "typeString": "struct InspectionContract.Inspection storage ref"
                    }
                  },
                  "id": 748,
                  "nodeType": "ExpressionStatement",
                  "src": "4469:46:2"
                }
              ]
            },
            "id": 750,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "markAsRealized",
            "nameLocation": "4181:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 712,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 707,
                  "mutability": "mutable",
                  "name": "inspection",
                  "nameLocation": "4214:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 750,
                  "src": "4196:28:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                    "typeString": "struct InspectionContract.Inspection"
                  },
                  "typeName": {
                    "id": 706,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 705,
                      "name": "Inspection",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 423,
                      "src": "4196:10:2"
                    },
                    "referencedDeclaration": 423,
                    "src": "4196:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$423_storage_ptr",
                      "typeString": "struct InspectionContract.Inspection"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 711,
                  "mutability": "mutable",
                  "name": "isas",
                  "nameLocation": "4242:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 750,
                  "src": "4226:20:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                    "typeString": "uint256[][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 708,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4226:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 709,
                      "nodeType": "ArrayTypeName",
                      "src": "4226:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      }
                    },
                    "id": 710,
                    "nodeType": "ArrayTypeName",
                    "src": "4226:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                      "typeString": "uint256[][]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4195:52:2"
            },
            "returnParameters": {
              "id": 713,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4257:0:2"
            },
            "scope": 997,
            "src": "4172:351:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 767,
              "nodeType": "Block",
              "src": "4602:92:2",
              "statements": [
                {
                  "expression": {
                    "id": 765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 757,
                          "name": "producers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1085,
                          "src": "4613:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Producer_$1062_storage_$",
                            "typeString": "mapping(address => struct ProducerContract.Producer storage ref)"
                          }
                        },
                        "id": 762,
                        "indexExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 758,
                              "name": "inspections",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 438,
                              "src": "4623:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$423_storage_$",
                                "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                              }
                            },
                            "id": 760,
                            "indexExpression": {
                              "id": 759,
                              "name": "inspectionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 752,
                              "src": "4635:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4623:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Inspection_$423_storage",
                              "typeString": "struct InspectionContract.Inspection storage ref"
                            }
                          },
                          "id": 761,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "producerWallet",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 408,
                          "src": "4623:40:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4613:51:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Producer_$1062_storage",
                          "typeString": "struct ProducerContract.Producer storage ref"
                        }
                      },
                      "id": 763,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isaPoints",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1055,
                      "src": "4613:61:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 764,
                      "name": "isaPoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 754,
                      "src": "4677:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4613:73:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 766,
                  "nodeType": "ExpressionStatement",
                  "src": "4613:73:2"
                }
              ]
            },
            "id": 768,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateProducerIsa",
            "nameLocation": "4540:17:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 752,
                  "mutability": "mutable",
                  "name": "inspectionId",
                  "nameLocation": "4563:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 768,
                  "src": "4558:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 751,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4558:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 754,
                  "mutability": "mutable",
                  "name": "isaPoints",
                  "nameLocation": "4582:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 768,
                  "src": "4577:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 753,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4577:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4557:35:2"
            },
            "returnParameters": {
              "id": 756,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4602:0:2"
            },
            "scope": 997,
            "src": "4531:163:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 781,
              "nodeType": "Block",
              "src": "4904:41:2",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 777,
                      "name": "inspections",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 438,
                      "src": "4922:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$423_storage_$",
                        "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                      }
                    },
                    "id": 779,
                    "indexExpression": {
                      "id": 778,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 771,
                      "src": "4934:2:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4922:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$423_storage",
                      "typeString": "struct InspectionContract.Inspection storage ref"
                    }
                  },
                  "functionReturnParameters": 776,
                  "id": 780,
                  "nodeType": "Return",
                  "src": "4915:22:2"
                }
              ]
            },
            "documentation": {
              "id": 769,
              "nodeType": "StructuredDocumentation",
              "src": "4708:116:2",
              "text": " @dev Returns a inspection by id if that exists.\n @param id The id of the inspection to return."
            },
            "functionSelector": "f2836670",
            "id": 782,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInspection",
            "nameLocation": "4839:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 772,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 771,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "4861:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 782,
                  "src": "4853:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 770,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4853:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4852:12:2"
            },
            "returnParameters": {
              "id": 776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 775,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 782,
                  "src": "4885:17:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                    "typeString": "struct InspectionContract.Inspection"
                  },
                  "typeName": {
                    "id": 774,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 773,
                      "name": "Inspection",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 423,
                      "src": "4885:10:2"
                    },
                    "referencedDeclaration": 423,
                    "src": "4885:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$423_storage_ptr",
                      "typeString": "struct InspectionContract.Inspection"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4884:19:2"
            },
            "scope": 997,
            "src": "4830:115:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 792,
              "nodeType": "Block",
              "src": "5087:41:2",
              "statements": [
                {
                  "expression": {
                    "id": 790,
                    "name": "inspectionsList",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 427,
                    "src": "5105:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Inspection_$423_storage_$dyn_storage",
                      "typeString": "struct InspectionContract.Inspection storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 789,
                  "id": 791,
                  "nodeType": "Return",
                  "src": "5098:22:2"
                }
              ]
            },
            "documentation": {
              "id": 783,
              "nodeType": "StructuredDocumentation",
              "src": "4957:56:2",
              "text": " @dev Returns all requested inspections."
            },
            "functionSelector": "ee699fc1",
            "id": 793,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInspections",
            "nameLocation": "5028:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 784,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5042:2:2"
            },
            "returnParameters": {
              "id": 789,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 788,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 793,
                  "src": "5066:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Inspection_$423_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct InspectionContract.Inspection[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 786,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 785,
                        "name": "Inspection",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 423,
                        "src": "5066:10:2"
                      },
                      "referencedDeclaration": 423,
                      "src": "5066:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$423_storage_ptr",
                        "typeString": "struct InspectionContract.Inspection"
                      }
                    },
                    "id": 787,
                    "nodeType": "ArrayTypeName",
                    "src": "5066:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Inspection_$423_storage_$dyn_storage_ptr",
                      "typeString": "struct InspectionContract.Inspection[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5065:21:2"
            },
            "scope": 997,
            "src": "5019:109:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 811,
              "nodeType": "Block",
              "src": "5317:70:2",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "4f50454e",
                        "id": 805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5336:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f76fe33b8a0ebf7aa05740f479d10138c7c15bdc75b10e047cc15be2be15e5b4",
                          "typeString": "literal_string \"OPEN\""
                        },
                        "value": "OPEN"
                      },
                      {
                        "hexValue": "45585049524544",
                        "id": 806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5344:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd725cfb5ba01ea5dc5a7159cf41eaa54c28dc001805ce2361d3c894e7c2f72a",
                          "typeString": "literal_string \"EXPIRED\""
                        },
                        "value": "EXPIRED"
                      },
                      {
                        "hexValue": "494e53504543544544",
                        "id": 807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5355:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee5396ce4732a0f90688f3919520a56ad5e5581ce25fa727e167ca44cbd5926f",
                          "typeString": "literal_string \"INSPECTED\""
                        },
                        "value": "INSPECTED"
                      },
                      {
                        "hexValue": "4143434550544544",
                        "id": 808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5368:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_66a524c81cf8e657f1147e56f41f83002f6210ee7ae7b08d255f786088ae96f7",
                          "typeString": "literal_string \"ACCEPTED\""
                        },
                        "value": "ACCEPTED"
                      }
                    ],
                    "id": 809,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5335:44:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_stringliteral_f76fe33b8a0ebf7aa05740f479d10138c7c15bdc75b10e047cc15be2be15e5b4_$_t_stringliteral_bd725cfb5ba01ea5dc5a7159cf41eaa54c28dc001805ce2361d3c894e7c2f72a_$_t_stringliteral_ee5396ce4732a0f90688f3919520a56ad5e5581ce25fa727e167ca44cbd5926f_$_t_stringliteral_66a524c81cf8e657f1147e56f41f83002f6210ee7ae7b08d255f786088ae96f7_$",
                      "typeString": "tuple(literal_string \"OPEN\",literal_string \"EXPIRED\",literal_string \"INSPECTED\",literal_string \"ACCEPTED\")"
                    }
                  },
                  "functionReturnParameters": 804,
                  "id": 810,
                  "nodeType": "Return",
                  "src": "5328:51:2"
                }
              ]
            },
            "documentation": {
              "id": 794,
              "nodeType": "StructuredDocumentation",
              "src": "5140:59:2",
              "text": " @dev Returns all inpections status string."
            },
            "functionSelector": "dd6850c6",
            "id": 812,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInspectionsStatus",
            "nameLocation": "5214:20:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 795,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5234:2:2"
            },
            "returnParameters": {
              "id": 804,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 797,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 812,
                  "src": "5257:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 796,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5257:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 799,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 812,
                  "src": "5272:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 798,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5272:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 801,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 812,
                  "src": "5287:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 800,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5287:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 803,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 812,
                  "src": "5302:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 802,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5302:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5256:60:2"
            },
            "scope": 997,
            "src": "5205:182:2",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 827,
              "nodeType": "Block",
              "src": "5605:49:2",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 820,
                          "name": "inspections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 438,
                          "src": "5623:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$423_storage_$",
                            "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                          }
                        },
                        "id": 822,
                        "indexExpression": {
                          "id": 821,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 815,
                          "src": "5635:2:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5623:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$423_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      },
                      "id": 823,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 403,
                      "src": "5623:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 824,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5645:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "5623:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 819,
                  "id": 826,
                  "nodeType": "Return",
                  "src": "5616:30:2"
                }
              ]
            },
            "documentation": {
              "id": 813,
              "nodeType": "StructuredDocumentation",
              "src": "5399:136:2",
              "text": " @dev Check if an inspections exists in mapping.\n @param id The id of the inspection that the activist want accept."
            },
            "functionSelector": "fe5a4fa4",
            "id": 828,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "inspectionExists",
            "nameLocation": "5550:16:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 816,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 815,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "5575:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 828,
                  "src": "5567:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 814,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5567:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5566:12:2"
            },
            "returnParameters": {
              "id": 819,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 818,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 828,
                  "src": "5599:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 817,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5599:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5598:6:2"
            },
            "scope": 997,
            "src": "5541:113:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 892,
              "nodeType": "Block",
              "src": "5908:728:2",
              "statements": [
                {
                  "assignments": [
                    835
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 835,
                      "mutability": "mutable",
                      "name": "producerWallet",
                      "nameLocation": "5927:14:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 892,
                      "src": "5919:22:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 834,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5919:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 840,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 836,
                        "name": "inspections",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 438,
                        "src": "5944:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$423_storage_$",
                          "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                        }
                      },
                      "id": 838,
                      "indexExpression": {
                        "id": 837,
                        "name": "inspectionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 831,
                        "src": "5956:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5944:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$423_storage",
                        "typeString": "struct InspectionContract.Inspection storage ref"
                      }
                    },
                    "id": 839,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "producerWallet",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 408,
                    "src": "5944:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5919:65:2"
                },
                {
                  "assignments": [
                    842
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 842,
                      "mutability": "mutable",
                      "name": "activistWallet",
                      "nameLocation": "6003:14:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 892,
                      "src": "5995:22:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 841,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5995:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 847,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 843,
                        "name": "inspections",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 438,
                        "src": "6020:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$423_storage_$",
                          "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                        }
                      },
                      "id": 845,
                      "indexExpression": {
                        "id": 844,
                        "name": "inspectionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 831,
                        "src": "6032:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6020:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$423_storage",
                        "typeString": "struct InspectionContract.Inspection storage ref"
                      }
                    },
                    "id": 846,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "activistWallet",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 410,
                    "src": "6020:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5995:65:2"
                },
                {
                  "expression": {
                    "id": 853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 848,
                          "name": "activists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "6164:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Activist_$25_storage_$",
                            "typeString": "mapping(address => struct ActivistContract.Activist storage ref)"
                          }
                        },
                        "id": 850,
                        "indexExpression": {
                          "id": 849,
                          "name": "activistWallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 842,
                          "src": "6174:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6164:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Activist_$25_storage",
                          "typeString": "struct ActivistContract.Activist storage ref"
                        }
                      },
                      "id": 851,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "recentInspection",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19,
                      "src": "6164:42:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 852,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6209:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "6164:50:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 854,
                  "nodeType": "ExpressionStatement",
                  "src": "6164:50:2"
                },
                {
                  "expression": {
                    "id": 859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "6225:44:2",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 855,
                          "name": "activists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "6225:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Activist_$25_storage_$",
                            "typeString": "mapping(address => struct ActivistContract.Activist storage ref)"
                          }
                        },
                        "id": 857,
                        "indexExpression": {
                          "id": 856,
                          "name": "activistWallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 842,
                          "src": "6235:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6225:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Activist_$25_storage",
                          "typeString": "struct ActivistContract.Activist storage ref"
                        }
                      },
                      "id": 858,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalInspections",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "6225:42:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 860,
                  "nodeType": "ExpressionStatement",
                  "src": "6225:44:2"
                },
                {
                  "expression": {
                    "id": 866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 861,
                          "name": "producers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1085,
                          "src": "6368:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Producer_$1062_storage_$",
                            "typeString": "mapping(address => struct ProducerContract.Producer storage ref)"
                          }
                        },
                        "id": 863,
                        "indexExpression": {
                          "id": 862,
                          "name": "producerWallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 835,
                          "src": "6378:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6368:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Producer_$1062_storage",
                          "typeString": "struct ProducerContract.Producer storage ref"
                        }
                      },
                      "id": 864,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "recentInspection",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1051,
                      "src": "6368:42:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 865,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6413:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "6368:50:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 867,
                  "nodeType": "ExpressionStatement",
                  "src": "6368:50:2"
                },
                {
                  "expression": {
                    "id": 872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "6429:41:2",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 868,
                          "name": "producers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1085,
                          "src": "6429:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Producer_$1062_storage_$",
                            "typeString": "mapping(address => struct ProducerContract.Producer storage ref)"
                          }
                        },
                        "id": 870,
                        "indexExpression": {
                          "id": 869,
                          "name": "producerWallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 835,
                          "src": "6439:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6429:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Producer_$1062_storage",
                          "typeString": "struct ProducerContract.Producer storage ref"
                        }
                      },
                      "id": 871,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalRequests",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1053,
                      "src": "6429:39:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 873,
                  "nodeType": "ExpressionStatement",
                  "src": "6429:41:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 878,
                          "name": "inspections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 438,
                          "src": "6528:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$423_storage_$",
                            "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                          }
                        },
                        "id": 880,
                        "indexExpression": {
                          "id": 879,
                          "name": "inspectionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 831,
                          "src": "6540:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6528:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$423_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Inspection_$423_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 874,
                          "name": "userInspections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 433,
                          "src": "6491:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Inspection_$423_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct InspectionContract.Inspection storage ref[] storage ref)"
                          }
                        },
                        "id": 876,
                        "indexExpression": {
                          "id": 875,
                          "name": "producerWallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 835,
                          "src": "6507:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6491:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Inspection_$423_storage_$dyn_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref[] storage ref"
                        }
                      },
                      "id": 877,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "6491:36:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Inspection_$423_storage_$dyn_storage_ptr_$_t_struct$_Inspection_$423_storage_$returns$__$bound_to$_t_array$_t_struct$_Inspection_$423_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct InspectionContract.Inspection storage ref[] storage pointer,struct InspectionContract.Inspection storage ref)"
                      }
                    },
                    "id": 881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6491:63:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 882,
                  "nodeType": "ExpressionStatement",
                  "src": "6491:63:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 887,
                          "name": "inspections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 438,
                          "src": "6602:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$423_storage_$",
                            "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                          }
                        },
                        "id": 889,
                        "indexExpression": {
                          "id": 888,
                          "name": "inspectionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 831,
                          "src": "6614:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6602:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$423_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Inspection_$423_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 883,
                          "name": "userInspections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 433,
                          "src": "6565:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Inspection_$423_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct InspectionContract.Inspection storage ref[] storage ref)"
                          }
                        },
                        "id": 885,
                        "indexExpression": {
                          "id": 884,
                          "name": "activistWallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 842,
                          "src": "6581:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6565:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Inspection_$423_storage_$dyn_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref[] storage ref"
                        }
                      },
                      "id": 886,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "6565:36:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Inspection_$423_storage_$dyn_storage_ptr_$_t_struct$_Inspection_$423_storage_$returns$__$bound_to$_t_array$_t_struct$_Inspection_$423_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct InspectionContract.Inspection storage ref[] storage pointer,struct InspectionContract.Inspection storage ref)"
                      }
                    },
                    "id": 890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6565:63:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 891,
                  "nodeType": "ExpressionStatement",
                  "src": "6565:63:2"
                }
              ]
            },
            "documentation": {
              "id": 829,
              "nodeType": "StructuredDocumentation",
              "src": "5666:176:2",
              "text": " @dev Inscrement producer and activist request action and mark both as no recent open requests and inspection\n @param inspectionId The id of the inspection"
            },
            "id": 893,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "afterRealizeInspection",
            "nameLocation": "5857:22:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 832,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 831,
                  "mutability": "mutable",
                  "name": "inspectionId",
                  "nameLocation": "5885:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 893,
                  "src": "5880:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 830,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5880:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5879:19:2"
            },
            "returnParameters": {
              "id": 833,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5908:0:2"
            },
            "scope": 997,
            "src": "5848:788:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 938,
              "nodeType": "Block",
              "src": "6798:246:2",
              "statements": [
                {
                  "assignments": [
                    904
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 904,
                      "mutability": "mutable",
                      "name": "isaPoints",
                      "nameLocation": "6814:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 938,
                      "src": "6809:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 903,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6809:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 906,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6826:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6809:18:2"
                },
                {
                  "body": {
                    "id": 934,
                    "nodeType": "Block",
                    "src": "6878:132:2",
                    "statements": [
                      {
                        "assignments": [
                          919
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 919,
                            "mutability": "mutable",
                            "name": "isaIndex",
                            "nameLocation": "6898:8:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 934,
                            "src": "6893:13:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 918,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "6893:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 925,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 920,
                              "name": "isas",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 898,
                              "src": "6909:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                                "typeString": "uint256[] memory[] memory"
                              }
                            },
                            "id": 922,
                            "indexExpression": {
                              "id": 921,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 908,
                              "src": "6914:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6909:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 924,
                          "indexExpression": {
                            "hexValue": "31",
                            "id": 923,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6917:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6909:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6893:26:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 926,
                            "name": "isaIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 919,
                            "src": "6938:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 927,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6950:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "6938:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 933,
                        "nodeType": "IfStatement",
                        "src": "6934:65:2",
                        "trueBody": {
                          "id": 932,
                          "nodeType": "Block",
                          "src": "6953:46:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 930,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "6972:11:2",
                                "subExpression": {
                                  "id": 929,
                                  "name": "isaPoints",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 904,
                                  "src": "6972:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 931,
                              "nodeType": "ExpressionStatement",
                              "src": "6972:11:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 911,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 908,
                      "src": "6856:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 912,
                        "name": "isas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 898,
                        "src": "6860:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        }
                      },
                      "id": 913,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6860:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6856:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 935,
                  "initializationExpression": {
                    "assignments": [
                      908
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 908,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6849:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 935,
                        "src": "6843:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 907,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "6843:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 910,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 909,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6853:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6843:11:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6873:3:2",
                      "subExpression": {
                        "id": 915,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 908,
                        "src": "6873:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 917,
                    "nodeType": "ExpressionStatement",
                    "src": "6873:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "6838:172:2"
                },
                {
                  "expression": {
                    "id": 936,
                    "name": "isaPoints",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 904,
                    "src": "7027:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 902,
                  "id": 937,
                  "nodeType": "Return",
                  "src": "7020:16:2"
                }
              ]
            },
            "documentation": {
              "id": 894,
              "nodeType": "StructuredDocumentation",
              "src": "6644:74:2",
              "text": " @dev Sum the ISA points\n @param isas The isas values"
            },
            "id": 939,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkIsaPoints",
            "nameLocation": "6733:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 899,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 898,
                  "mutability": "mutable",
                  "name": "isas",
                  "nameLocation": "6764:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 939,
                  "src": "6748:20:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                    "typeString": "uint256[][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 895,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6748:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 896,
                      "nodeType": "ArrayTypeName",
                      "src": "6748:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      }
                    },
                    "id": 897,
                    "nodeType": "ArrayTypeName",
                    "src": "6748:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                      "typeString": "uint256[][]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6747:22:2"
            },
            "returnParameters": {
              "id": 902,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 901,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 939,
                  "src": "6792:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 900,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6792:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6791:6:2"
            },
            "scope": 997,
            "src": "6724:320:2",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 954,
              "nodeType": "Block",
              "src": "7128:80:2",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 946,
                          "name": "inspections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 438,
                          "src": "7146:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$423_storage_$",
                            "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                          }
                        },
                        "id": 948,
                        "indexExpression": {
                          "id": 947,
                          "name": "inspectionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 941,
                          "src": "7158:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7146:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$423_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      },
                      "id": 949,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "activistWallet",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 410,
                      "src": "7146:40:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 950,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "7190:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "7190:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7146:54:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 945,
                  "id": 953,
                  "nodeType": "Return",
                  "src": "7139:61:2"
                }
              ]
            },
            "id": 955,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isActivistOwner",
            "nameLocation": "7065:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 942,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 941,
                  "mutability": "mutable",
                  "name": "inspectionId",
                  "nameLocation": "7086:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 955,
                  "src": "7081:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 940,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7081:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7080:19:2"
            },
            "returnParameters": {
              "id": 945,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 944,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 955,
                  "src": "7122:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 943,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7122:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7121:6:2"
            },
            "scope": 997,
            "src": "7056:152:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 970,
              "nodeType": "Block",
              "src": "7284:87:2",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_InspectionStatus_$398",
                      "typeString": "enum InspectionContract.InspectionStatus"
                    },
                    "id": 968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 962,
                          "name": "inspections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 438,
                          "src": "7302:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$423_storage_$",
                            "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                          }
                        },
                        "id": 964,
                        "indexExpression": {
                          "id": 963,
                          "name": "inspectionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 957,
                          "src": "7314:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7302:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$423_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      },
                      "id": 965,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 406,
                      "src": "7302:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_InspectionStatus_$398",
                        "typeString": "enum InspectionContract.InspectionStatus"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 966,
                        "name": "InspectionStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 398,
                        "src": "7338:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_InspectionStatus_$398_$",
                          "typeString": "type(enum InspectionContract.InspectionStatus)"
                        }
                      },
                      "id": 967,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ACCEPTED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 397,
                      "src": "7338:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_InspectionStatus_$398",
                        "typeString": "enum InspectionContract.InspectionStatus"
                      }
                    },
                    "src": "7302:61:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 961,
                  "id": 969,
                  "nodeType": "Return",
                  "src": "7295:68:2"
                }
              ]
            },
            "id": 971,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAccepted",
            "nameLocation": "7226:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 958,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 957,
                  "mutability": "mutable",
                  "name": "inspectionId",
                  "nameLocation": "7242:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 971,
                  "src": "7237:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 956,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7237:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7236:19:2"
            },
            "returnParameters": {
              "id": 961,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 960,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 971,
                  "src": "7278:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 959,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7278:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7277:6:2"
            },
            "scope": 997,
            "src": "7217:154:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 982,
              "nodeType": "Block",
              "src": "7428:117:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 975,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "7462:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 976,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7462:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 974,
                          "name": "activistExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 174,
                          "src": "7447:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7447:26:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206d75737420626520616e2061637469766973742120506c65617365207265676973746572206173206f6e65",
                        "id": 978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7475:49:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7bbfd9faa9484f9e64abeb985fc471aa16487b87a888d85c1e82273be1ee2169",
                          "typeString": "literal_string \"You must be an activist! Please register as one\""
                        },
                        "value": "You must be an activist! Please register as one"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7bbfd9faa9484f9e64abeb985fc471aa16487b87a888d85c1e82273be1ee2169",
                          "typeString": "literal_string \"You must be an activist! Please register as one\""
                        }
                      ],
                      "id": 973,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7439:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7439:86:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 980,
                  "nodeType": "ExpressionStatement",
                  "src": "7439:86:2"
                },
                {
                  "id": 981,
                  "nodeType": "PlaceholderStatement",
                  "src": "7536:1:2"
                }
              ]
            },
            "id": 983,
            "name": "requireActivist",
            "nameLocation": "7410:15:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 972,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7425:2:2"
            },
            "src": "7401:144:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 995,
              "nodeType": "Block",
              "src": "7609:102:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 989,
                            "name": "inspectionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 985,
                            "src": "7645:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 988,
                          "name": "inspectionExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 828,
                          "src": "7628:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7628:30:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320696e7370656374696f6e20646f6e277420657869737473",
                        "id": 991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7660:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_27cfb18fb102385a5a6ad3d3f29c4023f127e18857272a0d2d3c2847a7e8e217",
                          "typeString": "literal_string \"This inspection don't exists\""
                        },
                        "value": "This inspection don't exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_27cfb18fb102385a5a6ad3d3f29c4023f127e18857272a0d2d3c2847a7e8e217",
                          "typeString": "literal_string \"This inspection don't exists\""
                        }
                      ],
                      "id": 987,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7620:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7620:71:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 993,
                  "nodeType": "ExpressionStatement",
                  "src": "7620:71:2"
                },
                {
                  "id": 994,
                  "nodeType": "PlaceholderStatement",
                  "src": "7702:1:2"
                }
              ]
            },
            "id": 996,
            "name": "requireInspectionExists",
            "nameLocation": "7566:23:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 986,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 985,
                  "mutability": "mutable",
                  "name": "inspectionId",
                  "nameLocation": "7595:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 996,
                  "src": "7590:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 984,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7590:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7589:19:2"
            },
            "src": "7557:154:2",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 998,
        "src": "254:7466:2",
        "usedErrors": []
      }
    ],
    "src": "0:7722:2"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Breno/Downloads/SintropContract (1)/contracts/InspectionContract.sol",
    "exportedSymbols": {
      "ActivistContract": [
        175
      ],
      "CategoryContract": [
        381
      ],
      "InspectionContract": [
        997
      ],
      "ProducerContract": [
        1287
      ],
      "UserContract": [
        1959
      ]
    },
    "id": 998,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 383,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<=",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:2"
      },
      {
        "absolutePath": "/C/Users/Breno/Downloads/SintropContract (1)/contracts/ProducerContract.sol",
        "file": "./ProducerContract.sol",
        "id": 384,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 998,
        "sourceUnit": 1288,
        "src": "82:32:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/Breno/Downloads/SintropContract (1)/contracts/ActivistContract.sol",
        "file": "./ActivistContract.sol",
        "id": 385,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 998,
        "sourceUnit": 176,
        "src": "116:32:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/Breno/Downloads/SintropContract (1)/contracts/CategoryContract.sol",
        "file": "./CategoryContract.sol",
        "id": 386,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 998,
        "sourceUnit": 382,
        "src": "150:32:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 388,
              "name": "ProducerContract",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1287,
              "src": "285:16:2"
            },
            "id": 389,
            "nodeType": "InheritanceSpecifier",
            "src": "285:16:2"
          },
          {
            "baseName": {
              "id": 390,
              "name": "ActivistContract",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 175,
              "src": "303:16:2"
            },
            "id": 391,
            "nodeType": "InheritanceSpecifier",
            "src": "303:16:2"
          },
          {
            "baseName": {
              "id": 392,
              "name": "CategoryContract",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 381,
              "src": "321:16:2"
            },
            "id": 393,
            "nodeType": "InheritanceSpecifier",
            "src": "321:16:2"
          }
        ],
        "canonicalName": "InspectionContract",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 387,
          "nodeType": "StructuredDocumentation",
          "src": "186:66:2",
          "text": " @title InspectionContract\n @dev Inpection action core"
        },
        "fullyImplemented": true,
        "id": 997,
        "linearizedBaseContracts": [
          997,
          381,
          175,
          1287,
          1959
        ],
        "name": "InspectionContract",
        "nameLocation": "263:18:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "InspectionContract.InspectionStatus",
            "id": 398,
            "members": [
              {
                "id": 394,
                "name": "OPEN",
                "nameLocation": "369:4:2",
                "nodeType": "EnumValue",
                "src": "369:4:2"
              },
              {
                "id": 395,
                "name": "EXPIRED",
                "nameLocation": "375:7:2",
                "nodeType": "EnumValue",
                "src": "375:7:2"
              },
              {
                "id": 396,
                "name": "INSPECTED",
                "nameLocation": "384:9:2",
                "nodeType": "EnumValue",
                "src": "384:9:2"
              },
              {
                "id": 397,
                "name": "ACCEPTED",
                "nameLocation": "395:8:2",
                "nodeType": "EnumValue",
                "src": "395:8:2"
              }
            ],
            "name": "InspectionStatus",
            "nameLocation": "350:16:2",
            "nodeType": "EnumDefinition",
            "src": "345:60:2"
          },
          {
            "constant": false,
            "id": 401,
            "mutability": "mutable",
            "name": "inspactionExpireIn",
            "nameLocation": "417:18:2",
            "nodeType": "VariableDeclaration",
            "scope": 997,
            "src": "412:32:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 399,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "412:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "363034383030",
              "id": 400,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "438:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_604800_by_1",
                "typeString": "int_const 604800"
              },
              "value": "604800"
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "InspectionContract.Inspection",
            "id": 423,
            "members": [
              {
                "constant": false,
                "id": 403,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "505:2:2",
                "nodeType": "VariableDeclaration",
                "scope": 423,
                "src": "500:7:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 402,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "500:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 406,
                "mutability": "mutable",
                "name": "status",
                "nameLocation": "535:6:2",
                "nodeType": "VariableDeclaration",
                "scope": 423,
                "src": "518:23:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_InspectionStatus_$398",
                  "typeString": "enum InspectionContract.InspectionStatus"
                },
                "typeName": {
                  "id": 405,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 404,
                    "name": "InspectionStatus",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 398,
                    "src": "518:16:2"
                  },
                  "referencedDeclaration": 398,
                  "src": "518:16:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_InspectionStatus_$398",
                    "typeString": "enum InspectionContract.InspectionStatus"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 408,
                "mutability": "mutable",
                "name": "producerWallet",
                "nameLocation": "560:14:2",
                "nodeType": "VariableDeclaration",
                "scope": 423,
                "src": "552:22:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 407,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "552:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 410,
                "mutability": "mutable",
                "name": "activistWallet",
                "nameLocation": "593:14:2",
                "nodeType": "VariableDeclaration",
                "scope": 423,
                "src": "585:22:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 409,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "585:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 414,
                "mutability": "mutable",
                "name": "isas",
                "nameLocation": "627:4:2",
                "nodeType": "VariableDeclaration",
                "scope": 423,
                "src": "618:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                  "typeString": "uint256[][]"
                },
                "typeName": {
                  "baseType": {
                    "baseType": {
                      "id": 411,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "618:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 412,
                    "nodeType": "ArrayTypeName",
                    "src": "618:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "id": 413,
                  "nodeType": "ArrayTypeName",
                  "src": "618:8:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                    "typeString": "uint256[][]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 416,
                "mutability": "mutable",
                "name": "isaPoints",
                "nameLocation": "647:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 423,
                "src": "642:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 415,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "642:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 418,
                "mutability": "mutable",
                "name": "expiresIn",
                "nameLocation": "672:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 423,
                "src": "667:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 417,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "667:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 420,
                "mutability": "mutable",
                "name": "createdAt",
                "nameLocation": "697:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 423,
                "src": "692:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 419,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "692:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 422,
                "mutability": "mutable",
                "name": "index",
                "nameLocation": "722:5:2",
                "nodeType": "VariableDeclaration",
                "scope": 423,
                "src": "717:10:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 421,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "717:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Inspection",
            "nameLocation": "478:10:2",
            "nodeType": "StructDefinition",
            "scope": 997,
            "src": "471:264:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 427,
            "mutability": "mutable",
            "name": "inspectionsList",
            "nameLocation": "754:15:2",
            "nodeType": "VariableDeclaration",
            "scope": 997,
            "src": "741:28:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Inspection_$423_storage_$dyn_storage",
              "typeString": "struct InspectionContract.Inspection[]"
            },
            "typeName": {
              "baseType": {
                "id": 425,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 424,
                  "name": "Inspection",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 423,
                  "src": "741:10:2"
                },
                "referencedDeclaration": 423,
                "src": "741:10:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Inspection_$423_storage_ptr",
                  "typeString": "struct InspectionContract.Inspection"
                }
              },
              "id": 426,
              "nodeType": "ArrayTypeName",
              "src": "741:12:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Inspection_$423_storage_$dyn_storage_ptr",
                "typeString": "struct InspectionContract.Inspection[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 433,
            "mutability": "mutable",
            "name": "userInspections",
            "nameLocation": "809:15:2",
            "nodeType": "VariableDeclaration",
            "scope": 997,
            "src": "776:48:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Inspection_$423_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct InspectionContract.Inspection[])"
            },
            "typeName": {
              "id": 432,
              "keyType": {
                "id": 428,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "784:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "776:32:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Inspection_$423_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct InspectionContract.Inspection[])"
              },
              "valueType": {
                "baseType": {
                  "id": 430,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 429,
                    "name": "Inspection",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 423,
                    "src": "795:10:2"
                  },
                  "referencedDeclaration": 423,
                  "src": "795:10:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Inspection_$423_storage_ptr",
                    "typeString": "struct InspectionContract.Inspection"
                  }
                },
                "id": 431,
                "nodeType": "ArrayTypeName",
                "src": "795:12:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Inspection_$423_storage_$dyn_storage_ptr",
                  "typeString": "struct InspectionContract.Inspection[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 438,
            "mutability": "mutable",
            "name": "inspections",
            "nameLocation": "862:11:2",
            "nodeType": "VariableDeclaration",
            "scope": 997,
            "src": "831:42:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$423_storage_$",
              "typeString": "mapping(uint256 => struct InspectionContract.Inspection)"
            },
            "typeName": {
              "id": 437,
              "keyType": {
                "id": 434,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "839:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "831:30:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$423_storage_$",
                "typeString": "mapping(uint256 => struct InspectionContract.Inspection)"
              },
              "valueType": {
                "id": 436,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 435,
                  "name": "Inspection",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 423,
                  "src": "850:10:2"
                },
                "referencedDeclaration": 423,
                "src": "850:10:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Inspection_$423_storage_ptr",
                  "typeString": "struct InspectionContract.Inspection"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 440,
            "mutability": "mutable",
            "name": "inspectionsCount",
            "nameLocation": "888:16:2",
            "nodeType": "VariableDeclaration",
            "scope": 997,
            "src": "880:24:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 439,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "880:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 453,
              "nodeType": "Block",
              "src": "1104:53:2",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 448,
                      "name": "userInspections",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 433,
                      "src": "1122:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Inspection_$423_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct InspectionContract.Inspection storage ref[] storage ref)"
                      }
                    },
                    "id": 451,
                    "indexExpression": {
                      "expression": {
                        "id": 449,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1138:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 450,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1138:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1122:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Inspection_$423_storage_$dyn_storage",
                      "typeString": "struct InspectionContract.Inspection storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 447,
                  "id": 452,
                  "nodeType": "Return",
                  "src": "1115:34:2"
                }
              ]
            },
            "documentation": {
              "id": 441,
              "nodeType": "StructuredDocumentation",
              "src": "913:111:2",
              "text": " @dev Allows the current user producer/activist get all yours inspections with status INSPECTED"
            },
            "functionSelector": "0bbec3c2",
            "id": 454,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInspectionsHistory",
            "nameLocation": "1039:21:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 442,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1060:2:2"
            },
            "returnParameters": {
              "id": 447,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 446,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 454,
                  "src": "1083:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Inspection_$423_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct InspectionContract.Inspection[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 444,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 443,
                        "name": "Inspection",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 423,
                        "src": "1083:10:2"
                      },
                      "referencedDeclaration": 423,
                      "src": "1083:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$423_storage_ptr",
                        "typeString": "struct InspectionContract.Inspection"
                      }
                    },
                    "id": 445,
                    "nodeType": "ArrayTypeName",
                    "src": "1083:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Inspection_$423_storage_$dyn_storage_ptr",
                      "typeString": "struct InspectionContract.Inspection[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1082:21:2"
            },
            "scope": 997,
            "src": "1030:127:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 492,
              "nodeType": "Block",
              "src": "1297:401:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 462,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1331:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 463,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1331:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 461,
                          "name": "producerExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1225,
                          "src": "1316:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1316:26:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520617265206e6f7420612070726f64756365722120506c65617365207265676973746572206173206f6e65",
                        "id": 465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1344:48:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dbb08f64851b685a0f36294d305e2db5057008a52567e5bdec9c2160a57b7398",
                          "typeString": "literal_string \"You are not a producer! Please register as one\""
                        },
                        "value": "You are not a producer! Please register as one"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dbb08f64851b685a0f36294d305e2db5057008a52567e5bdec9c2160a57b7398",
                          "typeString": "literal_string \"You are not a producer! Please register as one\""
                        }
                      ],
                      "id": 460,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1308:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1308:85:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 467,
                  "nodeType": "ExpressionStatement",
                  "src": "1308:85:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 469,
                              "name": "producers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1085,
                              "src": "1412:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Producer_$1062_storage_$",
                                "typeString": "mapping(address => struct ProducerContract.Producer storage ref)"
                              }
                            },
                            "id": 472,
                            "indexExpression": {
                              "expression": {
                                "id": 470,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1422:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 471,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1422:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1412:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Producer_$1062_storage",
                              "typeString": "struct ProducerContract.Producer storage ref"
                            }
                          },
                          "id": 473,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "recentInspection",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1051,
                          "src": "1412:38:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1454:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "1412:47:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752068617665206120696e7370656374696f6e2072657175657374204f50454e206f722041434345505445442120576169742061206163746976697374207265616c697a6520696e7370656374696f6e206f7220796f752063616e20636c6f7365206974",
                        "id": 476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1461:104:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6c06c4f9d658f6d0bee949be33756e3bdf523e4cfb9cc40af70a6abee2364d7d",
                          "typeString": "literal_string \"You have a inspection request OPEN or ACCEPTED! Wait a activist realize inspection or you can close it\""
                        },
                        "value": "You have a inspection request OPEN or ACCEPTED! Wait a activist realize inspection or you can close it"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6c06c4f9d658f6d0bee949be33756e3bdf523e4cfb9cc40af70a6abee2364d7d",
                          "typeString": "literal_string \"You have a inspection request OPEN or ACCEPTED! Wait a activist realize inspection or you can close it\""
                        }
                      ],
                      "id": 468,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1404:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1404:162:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 478,
                  "nodeType": "ExpressionStatement",
                  "src": "1404:162:2"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 479,
                      "name": "createRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 557,
                      "src": "1587:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1587:15:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 481,
                  "nodeType": "ExpressionStatement",
                  "src": "1587:15:2"
                },
                {
                  "expression": {
                    "id": 488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 482,
                          "name": "producers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1085,
                          "src": "1613:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Producer_$1062_storage_$",
                            "typeString": "mapping(address => struct ProducerContract.Producer storage ref)"
                          }
                        },
                        "id": 485,
                        "indexExpression": {
                          "expression": {
                            "id": 483,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1623:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 484,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1623:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1613:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Producer_$1062_storage",
                          "typeString": "struct ProducerContract.Producer storage ref"
                        }
                      },
                      "id": 486,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "recentInspection",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1051,
                      "src": "1613:38:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1654:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1613:45:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 489,
                  "nodeType": "ExpressionStatement",
                  "src": "1613:45:2"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1686:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 459,
                  "id": 491,
                  "nodeType": "Return",
                  "src": "1679:11:2"
                }
              ]
            },
            "documentation": {
              "id": 455,
              "nodeType": "StructuredDocumentation",
              "src": "1163:78:2",
              "text": " @dev Allows the current user (producer) request a inspection."
            },
            "functionSelector": "86ae2fb1",
            "id": 493,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestInspection",
            "nameLocation": "1256:17:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 456,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1273:2:2"
            },
            "returnParameters": {
              "id": 459,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 458,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 493,
                  "src": "1291:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 457,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1291:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1290:6:2"
            },
            "scope": 997,
            "src": "1247:451:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 556,
              "nodeType": "Block",
              "src": "1748:434:2",
              "statements": [
                {
                  "assignments": [
                    497
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 497,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "1764:2:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 556,
                      "src": "1759:7:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 496,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1759:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 501,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 498,
                      "name": "inspectionsCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 440,
                      "src": "1769:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 499,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1788:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1769:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1759:30:2"
                },
                {
                  "assignments": [
                    503
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 503,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "1805:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 556,
                      "src": "1800:10:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 502,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1800:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 507,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 504,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 497,
                      "src": "1813:2:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1818:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1813:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1800:19:2"
                },
                {
                  "assignments": [
                    513
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 513,
                      "mutability": "mutable",
                      "name": "isas",
                      "nameLocation": "1846:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 556,
                      "src": "1830:20:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                        "typeString": "uint256[][]"
                      },
                      "typeName": {
                        "baseType": {
                          "baseType": {
                            "id": 510,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "1830:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 511,
                          "nodeType": "ArrayTypeName",
                          "src": "1830:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "id": 512,
                        "nodeType": "ArrayTypeName",
                        "src": "1830:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                          "typeString": "uint256[][]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 514,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1830:20:2"
                },
                {
                  "assignments": [
                    516
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 516,
                      "mutability": "mutable",
                      "name": "expiresIn",
                      "nameLocation": "1866:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 556,
                      "src": "1861:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 515,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1861:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 521,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 517,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "1878:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1878:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 519,
                      "name": "inspactionExpireIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 401,
                      "src": "1896:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1878:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1861:53:2"
                },
                {
                  "assignments": [
                    524
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 524,
                      "mutability": "mutable",
                      "name": "inspection",
                      "nameLocation": "1943:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 556,
                      "src": "1925:28:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                        "typeString": "struct InspectionContract.Inspection"
                      },
                      "typeName": {
                        "id": 523,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 522,
                          "name": "Inspection",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 423,
                          "src": "1925:10:2"
                        },
                        "referencedDeclaration": 423,
                        "src": "1925:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$423_storage_ptr",
                          "typeString": "struct InspectionContract.Inspection"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 540,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 526,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 497,
                        "src": "1967:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 527,
                          "name": "InspectionStatus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 398,
                          "src": "1971:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_InspectionStatus_$398_$",
                            "typeString": "type(enum InspectionContract.InspectionStatus)"
                          }
                        },
                        "id": 528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "OPEN",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 394,
                        "src": "1971:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_InspectionStatus_$398",
                          "typeString": "enum InspectionContract.InspectionStatus"
                        }
                      },
                      {
                        "expression": {
                          "id": 529,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1994:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1994:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 531,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2006:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2006:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 533,
                        "name": "isas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 513,
                        "src": "2018:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2025:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 535,
                        "name": "expiresIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 516,
                        "src": "2028:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 536,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "2040:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "2040:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 538,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 503,
                        "src": "2057:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_InspectionStatus_$398",
                          "typeString": "enum InspectionContract.InspectionStatus"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 525,
                      "name": "Inspection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 423,
                      "src": "1956:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Inspection_$423_storage_ptr_$",
                        "typeString": "type(struct InspectionContract.Inspection storage pointer)"
                      }
                    },
                    "id": 539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1956:107:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                      "typeString": "struct InspectionContract.Inspection memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1925:138:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 544,
                        "name": "inspection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 524,
                        "src": "2095:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                          "typeString": "struct InspectionContract.Inspection memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                          "typeString": "struct InspectionContract.Inspection memory"
                        }
                      ],
                      "expression": {
                        "id": 541,
                        "name": "inspectionsList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 427,
                        "src": "2074:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Inspection_$423_storage_$dyn_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref[] storage ref"
                        }
                      },
                      "id": 543,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2074:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Inspection_$423_storage_$dyn_storage_ptr_$_t_struct$_Inspection_$423_storage_$returns$__$bound_to$_t_array$_t_struct$_Inspection_$423_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct InspectionContract.Inspection storage ref[] storage pointer,struct InspectionContract.Inspection storage ref)"
                      }
                    },
                    "id": 545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2074:32:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 546,
                  "nodeType": "ExpressionStatement",
                  "src": "2074:32:2"
                },
                {
                  "expression": {
                    "id": 551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 547,
                        "name": "inspections",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 438,
                        "src": "2117:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$423_storage_$",
                          "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                        }
                      },
                      "id": 549,
                      "indexExpression": {
                        "id": 548,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 497,
                        "src": "2129:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2117:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$423_storage",
                        "typeString": "struct InspectionContract.Inspection storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 550,
                      "name": "inspection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 524,
                      "src": "2135:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                        "typeString": "struct InspectionContract.Inspection memory"
                      }
                    },
                    "src": "2117:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$423_storage",
                      "typeString": "struct InspectionContract.Inspection storage ref"
                    }
                  },
                  "id": 552,
                  "nodeType": "ExpressionStatement",
                  "src": "2117:28:2"
                },
                {
                  "expression": {
                    "id": 554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "2156:18:2",
                    "subExpression": {
                      "id": 553,
                      "name": "inspectionsCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 440,
                      "src": "2156:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 555,
                  "nodeType": "ExpressionStatement",
                  "src": "2156:18:2"
                }
              ]
            },
            "id": 557,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createRequest",
            "nameLocation": "1724:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 494,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1737:2:2"
            },
            "returnParameters": {
              "id": 495,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1748:0:2"
            },
            "scope": 997,
            "src": "1715:467:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 614,
              "nodeType": "Block",
              "src": "2479:383:2",
              "statements": [
                {
                  "assignments": [
                    572
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 572,
                      "mutability": "mutable",
                      "name": "inspection",
                      "nameLocation": "2508:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 614,
                      "src": "2490:28:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                        "typeString": "struct InspectionContract.Inspection"
                      },
                      "typeName": {
                        "id": 571,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 570,
                          "name": "Inspection",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 423,
                          "src": "2490:10:2"
                        },
                        "referencedDeclaration": 423,
                        "src": "2490:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$423_storage_ptr",
                          "typeString": "struct InspectionContract.Inspection"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 576,
                  "initialValue": {
                    "baseExpression": {
                      "id": 573,
                      "name": "inspections",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 438,
                      "src": "2521:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$423_storage_$",
                        "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                      }
                    },
                    "id": 575,
                    "indexExpression": {
                      "id": 574,
                      "name": "inspectionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 560,
                      "src": "2533:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2521:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$423_storage",
                      "typeString": "struct InspectionContract.Inspection storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2490:56:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_InspectionStatus_$398",
                      "typeString": "enum InspectionContract.InspectionStatus"
                    },
                    "id": 581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 577,
                        "name": "inspection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 572,
                        "src": "2561:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                          "typeString": "struct InspectionContract.Inspection memory"
                        }
                      },
                      "id": 578,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 406,
                      "src": "2561:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_InspectionStatus_$398",
                        "typeString": "enum InspectionContract.InspectionStatus"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 579,
                        "name": "InspectionStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 398,
                        "src": "2582:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_InspectionStatus_$398_$",
                          "typeString": "type(enum InspectionContract.InspectionStatus)"
                        }
                      },
                      "id": 580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "OPEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 394,
                      "src": "2582:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_InspectionStatus_$398",
                        "typeString": "enum InspectionContract.InspectionStatus"
                      }
                    },
                    "src": "2561:42:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 584,
                  "nodeType": "IfStatement",
                  "src": "2557:60:2",
                  "trueBody": {
                    "expression": {
                      "hexValue": "66616c7365",
                      "id": 582,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2612:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "functionReturnParameters": 569,
                    "id": 583,
                    "nodeType": "Return",
                    "src": "2605:12:2"
                  }
                },
                {
                  "expression": {
                    "id": 590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 585,
                        "name": "inspection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 572,
                        "src": "2630:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                          "typeString": "struct InspectionContract.Inspection memory"
                        }
                      },
                      "id": 587,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 406,
                      "src": "2630:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_InspectionStatus_$398",
                        "typeString": "enum InspectionContract.InspectionStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 588,
                        "name": "InspectionStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 398,
                        "src": "2650:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_InspectionStatus_$398_$",
                          "typeString": "type(enum InspectionContract.InspectionStatus)"
                        }
                      },
                      "id": 589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ACCEPTED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 397,
                      "src": "2650:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_InspectionStatus_$398",
                        "typeString": "enum InspectionContract.InspectionStatus"
                      }
                    },
                    "src": "2630:45:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_InspectionStatus_$398",
                      "typeString": "enum InspectionContract.InspectionStatus"
                    }
                  },
                  "id": 591,
                  "nodeType": "ExpressionStatement",
                  "src": "2630:45:2"
                },
                {
                  "expression": {
                    "id": 597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 592,
                        "name": "inspection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 572,
                        "src": "2686:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                          "typeString": "struct InspectionContract.Inspection memory"
                        }
                      },
                      "id": 594,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "activistWallet",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 410,
                      "src": "2686:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 595,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2714:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 596,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2714:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2686:38:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 598,
                  "nodeType": "ExpressionStatement",
                  "src": "2686:38:2"
                },
                {
                  "expression": {
                    "id": 603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 599,
                        "name": "inspections",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 438,
                        "src": "2735:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$423_storage_$",
                          "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                        }
                      },
                      "id": 601,
                      "indexExpression": {
                        "id": 600,
                        "name": "inspectionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 560,
                        "src": "2747:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2735:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$423_storage",
                        "typeString": "struct InspectionContract.Inspection storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 602,
                      "name": "inspection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 572,
                      "src": "2763:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                        "typeString": "struct InspectionContract.Inspection memory"
                      }
                    },
                    "src": "2735:38:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$423_storage",
                      "typeString": "struct InspectionContract.Inspection storage ref"
                    }
                  },
                  "id": 604,
                  "nodeType": "ExpressionStatement",
                  "src": "2735:38:2"
                },
                {
                  "expression": {
                    "id": 610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 605,
                        "name": "inspectionsList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 427,
                        "src": "2786:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Inspection_$423_storage_$dyn_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref[] storage ref"
                        }
                      },
                      "id": 608,
                      "indexExpression": {
                        "expression": {
                          "id": 606,
                          "name": "inspection",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 572,
                          "src": "2802:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                            "typeString": "struct InspectionContract.Inspection memory"
                          }
                        },
                        "id": 607,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "index",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 422,
                        "src": "2802:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2786:33:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$423_storage",
                        "typeString": "struct InspectionContract.Inspection storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 609,
                      "name": "inspection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 572,
                      "src": "2822:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                        "typeString": "struct InspectionContract.Inspection memory"
                      }
                    },
                    "src": "2786:46:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$423_storage",
                      "typeString": "struct InspectionContract.Inspection storage ref"
                    }
                  },
                  "id": 611,
                  "nodeType": "ExpressionStatement",
                  "src": "2786:46:2"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2850:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 569,
                  "id": 613,
                  "nodeType": "Return",
                  "src": "2843:11:2"
                }
              ]
            },
            "documentation": {
              "id": 558,
              "nodeType": "StructuredDocumentation",
              "src": "2194:159:2",
              "text": " @dev Allows the current user (activist) accept a inspection.\n @param inspectionId The id of the inspection that the activist want accept."
            },
            "functionSelector": "e7857502",
            "id": 615,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 563,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 562,
                  "name": "requireActivist",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 983,
                  "src": "2411:15:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2411:15:2"
              },
              {
                "arguments": [
                  {
                    "id": 565,
                    "name": "inspectionId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 560,
                    "src": "2451:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 566,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 564,
                  "name": "requireInspectionExists",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 996,
                  "src": "2427:23:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2427:37:2"
              }
            ],
            "name": "acceptInspection",
            "nameLocation": "2368:16:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 560,
                  "mutability": "mutable",
                  "name": "inspectionId",
                  "nameLocation": "2390:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 615,
                  "src": "2385:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 559,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2385:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2384:19:2"
            },
            "returnParameters": {
              "id": 569,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 568,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 615,
                  "src": "2473:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 567,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2473:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2472:6:2"
            },
            "scope": 997,
            "src": "2359:503:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 641,
              "nodeType": "Block",
              "src": "3153:133:2",
              "statements": [
                {
                  "assignments": [
                    629
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 629,
                      "mutability": "mutable",
                      "name": "isas",
                      "nameLocation": "3181:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 641,
                      "src": "3165:20:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                        "typeString": "uint256[][]"
                      },
                      "typeName": {
                        "baseType": {
                          "baseType": {
                            "id": 626,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "3165:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 627,
                          "nodeType": "ArrayTypeName",
                          "src": "3165:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "id": 628,
                        "nodeType": "ArrayTypeName",
                        "src": "3165:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                          "typeString": "uint256[][]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 632,
                  "initialValue": {
                    "expression": {
                      "id": 630,
                      "name": "inspection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 619,
                      "src": "3188:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                        "typeString": "struct InspectionContract.Inspection memory"
                      }
                    },
                    "id": 631,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "isas",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 414,
                    "src": "3188:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                      "typeString": "uint256[] memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3165:38:2"
                },
                {
                  "assignments": [
                    634
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 634,
                      "mutability": "mutable",
                      "name": "isaPoints",
                      "nameLocation": "3219:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 641,
                      "src": "3214:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 633,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3214:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 638,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 636,
                        "name": "isas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 629,
                        "src": "3246:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        }
                      ],
                      "id": 635,
                      "name": "checkIsaPoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 939,
                      "src": "3231:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint256[] memory[] memory) pure returns (uint256)"
                      }
                    },
                    "id": 637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3231:20:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3214:37:2"
                },
                {
                  "expression": {
                    "id": 639,
                    "name": "isaPoints",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 634,
                    "src": "3269:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 623,
                  "id": 640,
                  "nodeType": "Return",
                  "src": "3262:16:2"
                }
              ]
            },
            "documentation": {
              "id": 616,
              "nodeType": "StructuredDocumentation",
              "src": "2876:192:2",
              "text": " @dev Calculate the ISA of the inspection based in the category and the ISA level of the category\n @param inspection Receive the inspected inspection with your isas levels"
            },
            "id": 642,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateIsa",
            "nameLocation": "3083:12:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 620,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 619,
                  "mutability": "mutable",
                  "name": "inspection",
                  "nameLocation": "3114:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 642,
                  "src": "3096:28:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                    "typeString": "struct InspectionContract.Inspection"
                  },
                  "typeName": {
                    "id": 618,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 617,
                      "name": "Inspection",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 423,
                      "src": "3096:10:2"
                    },
                    "referencedDeclaration": 423,
                    "src": "3096:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$423_storage_ptr",
                      "typeString": "struct InspectionContract.Inspection"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3095:30:2"
            },
            "returnParameters": {
              "id": 623,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 622,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 642,
                  "src": "3148:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 621,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3148:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3147:6:2"
            },
            "scope": 997,
            "src": "3074:212:2",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 703,
              "nodeType": "Block",
              "src": "3725:438:2",
              "statements": [
                {
                  "condition": {
                    "id": 662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3740:25:2",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 660,
                          "name": "inspectionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 645,
                          "src": "3752:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 659,
                        "name": "isAccepted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 971,
                        "src": "3741:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view returns (bool)"
                        }
                      },
                      "id": 661,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3741:24:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 665,
                  "nodeType": "IfStatement",
                  "src": "3736:43:2",
                  "trueBody": {
                    "expression": {
                      "hexValue": "66616c7365",
                      "id": 663,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3774:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "functionReturnParameters": 658,
                    "id": 664,
                    "nodeType": "Return",
                    "src": "3767:12:2"
                  }
                },
                {
                  "condition": {
                    "id": 669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3794:30:2",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 667,
                          "name": "inspectionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 645,
                          "src": "3811:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 666,
                        "name": "isActivistOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 955,
                        "src": "3795:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view returns (bool)"
                        }
                      },
                      "id": 668,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3795:29:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 672,
                  "nodeType": "IfStatement",
                  "src": "3790:48:2",
                  "trueBody": {
                    "expression": {
                      "hexValue": "66616c7365",
                      "id": 670,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3833:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "functionReturnParameters": 658,
                    "id": 671,
                    "nodeType": "Return",
                    "src": "3826:12:2"
                  }
                },
                {
                  "assignments": [
                    675
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 675,
                      "mutability": "mutable",
                      "name": "inspection",
                      "nameLocation": "3869:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 703,
                      "src": "3851:28:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                        "typeString": "struct InspectionContract.Inspection"
                      },
                      "typeName": {
                        "id": 674,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 673,
                          "name": "Inspection",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 423,
                          "src": "3851:10:2"
                        },
                        "referencedDeclaration": 423,
                        "src": "3851:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$423_storage_ptr",
                          "typeString": "struct InspectionContract.Inspection"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 679,
                  "initialValue": {
                    "baseExpression": {
                      "id": 676,
                      "name": "inspections",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 438,
                      "src": "3882:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$423_storage_$",
                        "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                      }
                    },
                    "id": 678,
                    "indexExpression": {
                      "id": 677,
                      "name": "inspectionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 645,
                      "src": "3894:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3882:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$423_storage",
                      "typeString": "struct InspectionContract.Inspection storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3851:56:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 681,
                        "name": "inspection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 675,
                        "src": "3935:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                          "typeString": "struct InspectionContract.Inspection memory"
                        }
                      },
                      {
                        "id": 682,
                        "name": "isas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 649,
                        "src": "3947:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                          "typeString": "struct InspectionContract.Inspection memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        }
                      ],
                      "id": 680,
                      "name": "markAsRealized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 750,
                      "src": "3920:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Inspection_$423_memory_ptr_$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (struct InspectionContract.Inspection memory,uint256[] memory[] memory)"
                      }
                    },
                    "id": 683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3920:32:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 684,
                  "nodeType": "ExpressionStatement",
                  "src": "3920:32:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 686,
                        "name": "inspectionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 645,
                        "src": "3986:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 685,
                      "name": "afterRealizeInspection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 893,
                      "src": "3963:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3963:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 688,
                  "nodeType": "ExpressionStatement",
                  "src": "3963:36:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 690,
                        "name": "inspectionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 645,
                        "src": "4028:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 691,
                          "name": "inspection",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 675,
                          "src": "4042:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                            "typeString": "struct InspectionContract.Inspection memory"
                          }
                        },
                        "id": 692,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isaPoints",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 416,
                        "src": "4042:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 689,
                      "name": "updateProducerIsa",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 768,
                      "src": "4010:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4010:53:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 694,
                  "nodeType": "ExpressionStatement",
                  "src": "4010:53:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 696,
                          "name": "inspection",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 675,
                          "src": "4099:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                            "typeString": "struct InspectionContract.Inspection memory"
                          }
                        },
                        "id": 697,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "producerWallet",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 408,
                        "src": "4099:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "32303030",
                        "id": 698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4126:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000_by_1",
                          "typeString": "int_const 2000"
                        },
                        "value": "2000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_2000_by_1",
                          "typeString": "int_const 2000"
                        }
                      ],
                      "id": 695,
                      "name": "approveProducerNewTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1253,
                      "src": "4074:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4074:57:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 700,
                  "nodeType": "ExpressionStatement",
                  "src": "4074:57:2"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4151:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 658,
                  "id": 702,
                  "nodeType": "Return",
                  "src": "4144:11:2"
                }
              ]
            },
            "documentation": {
              "id": 643,
              "nodeType": "StructuredDocumentation",
              "src": "3298:276:2",
              "text": " @dev Allow a activist realize a inspection and mark as INSPECTED\n @param inspectionId The id of the inspection to be realized\n @param isas The uint[][] of categoryId and isaIndex. Ex: isas = [ [categoryId, isaIndex], [categoryId, isaIndex] ]"
            },
            "functionSelector": "b92bd2d9",
            "id": 704,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 652,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 651,
                  "name": "requireActivist",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 983,
                  "src": "3657:15:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "3657:15:2"
              },
              {
                "arguments": [
                  {
                    "id": 654,
                    "name": "inspectionId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 645,
                    "src": "3697:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 655,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 653,
                  "name": "requireInspectionExists",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 996,
                  "src": "3673:23:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "3673:37:2"
              }
            ],
            "name": "realizeInspection",
            "nameLocation": "3590:17:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 650,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 645,
                  "mutability": "mutable",
                  "name": "inspectionId",
                  "nameLocation": "3613:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 704,
                  "src": "3608:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 644,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3608:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 649,
                  "mutability": "mutable",
                  "name": "isas",
                  "nameLocation": "3643:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 704,
                  "src": "3627:20:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                    "typeString": "uint256[][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 646,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3627:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 647,
                      "nodeType": "ArrayTypeName",
                      "src": "3627:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      }
                    },
                    "id": 648,
                    "nodeType": "ArrayTypeName",
                    "src": "3627:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                      "typeString": "uint256[][]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3607:41:2"
            },
            "returnParameters": {
              "id": 658,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 657,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 704,
                  "src": "3719:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 656,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3719:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3718:6:2"
            },
            "scope": 997,
            "src": "3581:582:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 749,
              "nodeType": "Block",
              "src": "4257:266:2",
              "statements": [
                {
                  "expression": {
                    "id": 718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 714,
                        "name": "inspection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 707,
                        "src": "4271:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                          "typeString": "struct InspectionContract.Inspection memory"
                        }
                      },
                      "id": 716,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isas",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 414,
                      "src": "4271:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                        "typeString": "uint256[] memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 717,
                      "name": "isas",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 711,
                      "src": "4289:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                        "typeString": "uint256[] memory[] memory"
                      }
                    },
                    "src": "4271:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                      "typeString": "uint256[] memory[] memory"
                    }
                  },
                  "id": 719,
                  "nodeType": "ExpressionStatement",
                  "src": "4271:22:2"
                },
                {
                  "expression": {
                    "id": 725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 720,
                        "name": "inspection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 707,
                        "src": "4304:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                          "typeString": "struct InspectionContract.Inspection memory"
                        }
                      },
                      "id": 722,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 406,
                      "src": "4304:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_InspectionStatus_$398",
                        "typeString": "enum InspectionContract.InspectionStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 723,
                        "name": "InspectionStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 398,
                        "src": "4324:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_InspectionStatus_$398_$",
                          "typeString": "type(enum InspectionContract.InspectionStatus)"
                        }
                      },
                      "id": 724,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "INSPECTED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 396,
                      "src": "4324:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_InspectionStatus_$398",
                        "typeString": "enum InspectionContract.InspectionStatus"
                      }
                    },
                    "src": "4304:46:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_InspectionStatus_$398",
                      "typeString": "enum InspectionContract.InspectionStatus"
                    }
                  },
                  "id": 726,
                  "nodeType": "ExpressionStatement",
                  "src": "4304:46:2"
                },
                {
                  "expression": {
                    "id": 733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 727,
                        "name": "inspection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 707,
                        "src": "4361:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                          "typeString": "struct InspectionContract.Inspection memory"
                        }
                      },
                      "id": 729,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isaPoints",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 416,
                      "src": "4361:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 731,
                          "name": "inspection",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 707,
                          "src": "4397:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                            "typeString": "struct InspectionContract.Inspection memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                            "typeString": "struct InspectionContract.Inspection memory"
                          }
                        ],
                        "id": 730,
                        "name": "calculateIsa",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 642,
                        "src": "4384:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_struct$_Inspection_$423_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (struct InspectionContract.Inspection memory) pure returns (uint256)"
                        }
                      },
                      "id": 732,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4384:24:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4361:47:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 734,
                  "nodeType": "ExpressionStatement",
                  "src": "4361:47:2"
                },
                {
                  "expression": {
                    "id": 740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 735,
                        "name": "inspections",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 438,
                        "src": "4419:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$423_storage_$",
                          "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                        }
                      },
                      "id": 738,
                      "indexExpression": {
                        "expression": {
                          "id": 736,
                          "name": "inspection",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 707,
                          "src": "4431:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                            "typeString": "struct InspectionContract.Inspection memory"
                          }
                        },
                        "id": 737,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "id",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 403,
                        "src": "4431:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4419:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$423_storage",
                        "typeString": "struct InspectionContract.Inspection storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 739,
                      "name": "inspection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 707,
                      "src": "4448:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                        "typeString": "struct InspectionContract.Inspection memory"
                      }
                    },
                    "src": "4419:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$423_storage",
                      "typeString": "struct InspectionContract.Inspection storage ref"
                    }
                  },
                  "id": 741,
                  "nodeType": "ExpressionStatement",
                  "src": "4419:39:2"
                },
                {
                  "expression": {
                    "id": 747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 742,
                        "name": "inspectionsList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 427,
                        "src": "4469:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Inspection_$423_storage_$dyn_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref[] storage ref"
                        }
                      },
                      "id": 745,
                      "indexExpression": {
                        "expression": {
                          "id": 743,
                          "name": "inspection",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 707,
                          "src": "4485:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                            "typeString": "struct InspectionContract.Inspection memory"
                          }
                        },
                        "id": 744,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "index",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 422,
                        "src": "4485:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4469:33:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$423_storage",
                        "typeString": "struct InspectionContract.Inspection storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 746,
                      "name": "inspection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 707,
                      "src": "4505:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                        "typeString": "struct InspectionContract.Inspection memory"
                      }
                    },
                    "src": "4469:46:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$423_storage",
                      "typeString": "struct InspectionContract.Inspection storage ref"
                    }
                  },
                  "id": 748,
                  "nodeType": "ExpressionStatement",
                  "src": "4469:46:2"
                }
              ]
            },
            "id": 750,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "markAsRealized",
            "nameLocation": "4181:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 712,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 707,
                  "mutability": "mutable",
                  "name": "inspection",
                  "nameLocation": "4214:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 750,
                  "src": "4196:28:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                    "typeString": "struct InspectionContract.Inspection"
                  },
                  "typeName": {
                    "id": 706,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 705,
                      "name": "Inspection",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 423,
                      "src": "4196:10:2"
                    },
                    "referencedDeclaration": 423,
                    "src": "4196:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$423_storage_ptr",
                      "typeString": "struct InspectionContract.Inspection"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 711,
                  "mutability": "mutable",
                  "name": "isas",
                  "nameLocation": "4242:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 750,
                  "src": "4226:20:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                    "typeString": "uint256[][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 708,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4226:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 709,
                      "nodeType": "ArrayTypeName",
                      "src": "4226:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      }
                    },
                    "id": 710,
                    "nodeType": "ArrayTypeName",
                    "src": "4226:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                      "typeString": "uint256[][]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4195:52:2"
            },
            "returnParameters": {
              "id": 713,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4257:0:2"
            },
            "scope": 997,
            "src": "4172:351:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 767,
              "nodeType": "Block",
              "src": "4602:92:2",
              "statements": [
                {
                  "expression": {
                    "id": 765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 757,
                          "name": "producers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1085,
                          "src": "4613:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Producer_$1062_storage_$",
                            "typeString": "mapping(address => struct ProducerContract.Producer storage ref)"
                          }
                        },
                        "id": 762,
                        "indexExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 758,
                              "name": "inspections",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 438,
                              "src": "4623:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$423_storage_$",
                                "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                              }
                            },
                            "id": 760,
                            "indexExpression": {
                              "id": 759,
                              "name": "inspectionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 752,
                              "src": "4635:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4623:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Inspection_$423_storage",
                              "typeString": "struct InspectionContract.Inspection storage ref"
                            }
                          },
                          "id": 761,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "producerWallet",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 408,
                          "src": "4623:40:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4613:51:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Producer_$1062_storage",
                          "typeString": "struct ProducerContract.Producer storage ref"
                        }
                      },
                      "id": 763,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isaPoints",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1055,
                      "src": "4613:61:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 764,
                      "name": "isaPoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 754,
                      "src": "4677:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4613:73:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 766,
                  "nodeType": "ExpressionStatement",
                  "src": "4613:73:2"
                }
              ]
            },
            "id": 768,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateProducerIsa",
            "nameLocation": "4540:17:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 752,
                  "mutability": "mutable",
                  "name": "inspectionId",
                  "nameLocation": "4563:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 768,
                  "src": "4558:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 751,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4558:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 754,
                  "mutability": "mutable",
                  "name": "isaPoints",
                  "nameLocation": "4582:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 768,
                  "src": "4577:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 753,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4577:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4557:35:2"
            },
            "returnParameters": {
              "id": 756,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4602:0:2"
            },
            "scope": 997,
            "src": "4531:163:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 781,
              "nodeType": "Block",
              "src": "4904:41:2",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 777,
                      "name": "inspections",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 438,
                      "src": "4922:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$423_storage_$",
                        "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                      }
                    },
                    "id": 779,
                    "indexExpression": {
                      "id": 778,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 771,
                      "src": "4934:2:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4922:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$423_storage",
                      "typeString": "struct InspectionContract.Inspection storage ref"
                    }
                  },
                  "functionReturnParameters": 776,
                  "id": 780,
                  "nodeType": "Return",
                  "src": "4915:22:2"
                }
              ]
            },
            "documentation": {
              "id": 769,
              "nodeType": "StructuredDocumentation",
              "src": "4708:116:2",
              "text": " @dev Returns a inspection by id if that exists.\n @param id The id of the inspection to return."
            },
            "functionSelector": "f2836670",
            "id": 782,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInspection",
            "nameLocation": "4839:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 772,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 771,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "4861:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 782,
                  "src": "4853:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 770,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4853:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4852:12:2"
            },
            "returnParameters": {
              "id": 776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 775,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 782,
                  "src": "4885:17:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Inspection_$423_memory_ptr",
                    "typeString": "struct InspectionContract.Inspection"
                  },
                  "typeName": {
                    "id": 774,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 773,
                      "name": "Inspection",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 423,
                      "src": "4885:10:2"
                    },
                    "referencedDeclaration": 423,
                    "src": "4885:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$423_storage_ptr",
                      "typeString": "struct InspectionContract.Inspection"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4884:19:2"
            },
            "scope": 997,
            "src": "4830:115:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 792,
              "nodeType": "Block",
              "src": "5087:41:2",
              "statements": [
                {
                  "expression": {
                    "id": 790,
                    "name": "inspectionsList",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 427,
                    "src": "5105:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Inspection_$423_storage_$dyn_storage",
                      "typeString": "struct InspectionContract.Inspection storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 789,
                  "id": 791,
                  "nodeType": "Return",
                  "src": "5098:22:2"
                }
              ]
            },
            "documentation": {
              "id": 783,
              "nodeType": "StructuredDocumentation",
              "src": "4957:56:2",
              "text": " @dev Returns all requested inspections."
            },
            "functionSelector": "ee699fc1",
            "id": 793,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInspections",
            "nameLocation": "5028:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 784,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5042:2:2"
            },
            "returnParameters": {
              "id": 789,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 788,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 793,
                  "src": "5066:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Inspection_$423_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct InspectionContract.Inspection[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 786,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 785,
                        "name": "Inspection",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 423,
                        "src": "5066:10:2"
                      },
                      "referencedDeclaration": 423,
                      "src": "5066:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$423_storage_ptr",
                        "typeString": "struct InspectionContract.Inspection"
                      }
                    },
                    "id": 787,
                    "nodeType": "ArrayTypeName",
                    "src": "5066:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Inspection_$423_storage_$dyn_storage_ptr",
                      "typeString": "struct InspectionContract.Inspection[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5065:21:2"
            },
            "scope": 997,
            "src": "5019:109:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 811,
              "nodeType": "Block",
              "src": "5317:70:2",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "4f50454e",
                        "id": 805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5336:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f76fe33b8a0ebf7aa05740f479d10138c7c15bdc75b10e047cc15be2be15e5b4",
                          "typeString": "literal_string \"OPEN\""
                        },
                        "value": "OPEN"
                      },
                      {
                        "hexValue": "45585049524544",
                        "id": 806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5344:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd725cfb5ba01ea5dc5a7159cf41eaa54c28dc001805ce2361d3c894e7c2f72a",
                          "typeString": "literal_string \"EXPIRED\""
                        },
                        "value": "EXPIRED"
                      },
                      {
                        "hexValue": "494e53504543544544",
                        "id": 807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5355:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee5396ce4732a0f90688f3919520a56ad5e5581ce25fa727e167ca44cbd5926f",
                          "typeString": "literal_string \"INSPECTED\""
                        },
                        "value": "INSPECTED"
                      },
                      {
                        "hexValue": "4143434550544544",
                        "id": 808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5368:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_66a524c81cf8e657f1147e56f41f83002f6210ee7ae7b08d255f786088ae96f7",
                          "typeString": "literal_string \"ACCEPTED\""
                        },
                        "value": "ACCEPTED"
                      }
                    ],
                    "id": 809,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5335:44:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_stringliteral_f76fe33b8a0ebf7aa05740f479d10138c7c15bdc75b10e047cc15be2be15e5b4_$_t_stringliteral_bd725cfb5ba01ea5dc5a7159cf41eaa54c28dc001805ce2361d3c894e7c2f72a_$_t_stringliteral_ee5396ce4732a0f90688f3919520a56ad5e5581ce25fa727e167ca44cbd5926f_$_t_stringliteral_66a524c81cf8e657f1147e56f41f83002f6210ee7ae7b08d255f786088ae96f7_$",
                      "typeString": "tuple(literal_string \"OPEN\",literal_string \"EXPIRED\",literal_string \"INSPECTED\",literal_string \"ACCEPTED\")"
                    }
                  },
                  "functionReturnParameters": 804,
                  "id": 810,
                  "nodeType": "Return",
                  "src": "5328:51:2"
                }
              ]
            },
            "documentation": {
              "id": 794,
              "nodeType": "StructuredDocumentation",
              "src": "5140:59:2",
              "text": " @dev Returns all inpections status string."
            },
            "functionSelector": "dd6850c6",
            "id": 812,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInspectionsStatus",
            "nameLocation": "5214:20:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 795,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5234:2:2"
            },
            "returnParameters": {
              "id": 804,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 797,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 812,
                  "src": "5257:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 796,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5257:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 799,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 812,
                  "src": "5272:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 798,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5272:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 801,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 812,
                  "src": "5287:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 800,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5287:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 803,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 812,
                  "src": "5302:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 802,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5302:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5256:60:2"
            },
            "scope": 997,
            "src": "5205:182:2",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 827,
              "nodeType": "Block",
              "src": "5605:49:2",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 820,
                          "name": "inspections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 438,
                          "src": "5623:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$423_storage_$",
                            "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                          }
                        },
                        "id": 822,
                        "indexExpression": {
                          "id": 821,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 815,
                          "src": "5635:2:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5623:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$423_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      },
                      "id": 823,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 403,
                      "src": "5623:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 824,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5645:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "5623:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 819,
                  "id": 826,
                  "nodeType": "Return",
                  "src": "5616:30:2"
                }
              ]
            },
            "documentation": {
              "id": 813,
              "nodeType": "StructuredDocumentation",
              "src": "5399:136:2",
              "text": " @dev Check if an inspections exists in mapping.\n @param id The id of the inspection that the activist want accept."
            },
            "functionSelector": "fe5a4fa4",
            "id": 828,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "inspectionExists",
            "nameLocation": "5550:16:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 816,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 815,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "5575:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 828,
                  "src": "5567:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 814,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5567:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5566:12:2"
            },
            "returnParameters": {
              "id": 819,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 818,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 828,
                  "src": "5599:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 817,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5599:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5598:6:2"
            },
            "scope": 997,
            "src": "5541:113:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 892,
              "nodeType": "Block",
              "src": "5908:728:2",
              "statements": [
                {
                  "assignments": [
                    835
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 835,
                      "mutability": "mutable",
                      "name": "producerWallet",
                      "nameLocation": "5927:14:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 892,
                      "src": "5919:22:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 834,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5919:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 840,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 836,
                        "name": "inspections",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 438,
                        "src": "5944:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$423_storage_$",
                          "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                        }
                      },
                      "id": 838,
                      "indexExpression": {
                        "id": 837,
                        "name": "inspectionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 831,
                        "src": "5956:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5944:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$423_storage",
                        "typeString": "struct InspectionContract.Inspection storage ref"
                      }
                    },
                    "id": 839,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "producerWallet",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 408,
                    "src": "5944:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5919:65:2"
                },
                {
                  "assignments": [
                    842
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 842,
                      "mutability": "mutable",
                      "name": "activistWallet",
                      "nameLocation": "6003:14:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 892,
                      "src": "5995:22:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 841,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5995:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 847,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 843,
                        "name": "inspections",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 438,
                        "src": "6020:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$423_storage_$",
                          "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                        }
                      },
                      "id": 845,
                      "indexExpression": {
                        "id": 844,
                        "name": "inspectionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 831,
                        "src": "6032:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6020:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$423_storage",
                        "typeString": "struct InspectionContract.Inspection storage ref"
                      }
                    },
                    "id": 846,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "activistWallet",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 410,
                    "src": "6020:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5995:65:2"
                },
                {
                  "expression": {
                    "id": 853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 848,
                          "name": "activists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "6164:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Activist_$25_storage_$",
                            "typeString": "mapping(address => struct ActivistContract.Activist storage ref)"
                          }
                        },
                        "id": 850,
                        "indexExpression": {
                          "id": 849,
                          "name": "activistWallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 842,
                          "src": "6174:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6164:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Activist_$25_storage",
                          "typeString": "struct ActivistContract.Activist storage ref"
                        }
                      },
                      "id": 851,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "recentInspection",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19,
                      "src": "6164:42:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 852,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6209:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "6164:50:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 854,
                  "nodeType": "ExpressionStatement",
                  "src": "6164:50:2"
                },
                {
                  "expression": {
                    "id": 859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "6225:44:2",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 855,
                          "name": "activists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "6225:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Activist_$25_storage_$",
                            "typeString": "mapping(address => struct ActivistContract.Activist storage ref)"
                          }
                        },
                        "id": 857,
                        "indexExpression": {
                          "id": 856,
                          "name": "activistWallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 842,
                          "src": "6235:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6225:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Activist_$25_storage",
                          "typeString": "struct ActivistContract.Activist storage ref"
                        }
                      },
                      "id": 858,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalInspections",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "6225:42:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 860,
                  "nodeType": "ExpressionStatement",
                  "src": "6225:44:2"
                },
                {
                  "expression": {
                    "id": 866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 861,
                          "name": "producers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1085,
                          "src": "6368:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Producer_$1062_storage_$",
                            "typeString": "mapping(address => struct ProducerContract.Producer storage ref)"
                          }
                        },
                        "id": 863,
                        "indexExpression": {
                          "id": 862,
                          "name": "producerWallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 835,
                          "src": "6378:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6368:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Producer_$1062_storage",
                          "typeString": "struct ProducerContract.Producer storage ref"
                        }
                      },
                      "id": 864,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "recentInspection",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1051,
                      "src": "6368:42:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 865,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6413:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "6368:50:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 867,
                  "nodeType": "ExpressionStatement",
                  "src": "6368:50:2"
                },
                {
                  "expression": {
                    "id": 872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "6429:41:2",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 868,
                          "name": "producers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1085,
                          "src": "6429:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Producer_$1062_storage_$",
                            "typeString": "mapping(address => struct ProducerContract.Producer storage ref)"
                          }
                        },
                        "id": 870,
                        "indexExpression": {
                          "id": 869,
                          "name": "producerWallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 835,
                          "src": "6439:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6429:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Producer_$1062_storage",
                          "typeString": "struct ProducerContract.Producer storage ref"
                        }
                      },
                      "id": 871,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalRequests",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1053,
                      "src": "6429:39:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 873,
                  "nodeType": "ExpressionStatement",
                  "src": "6429:41:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 878,
                          "name": "inspections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 438,
                          "src": "6528:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$423_storage_$",
                            "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                          }
                        },
                        "id": 880,
                        "indexExpression": {
                          "id": 879,
                          "name": "inspectionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 831,
                          "src": "6540:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6528:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$423_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Inspection_$423_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 874,
                          "name": "userInspections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 433,
                          "src": "6491:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Inspection_$423_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct InspectionContract.Inspection storage ref[] storage ref)"
                          }
                        },
                        "id": 876,
                        "indexExpression": {
                          "id": 875,
                          "name": "producerWallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 835,
                          "src": "6507:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6491:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Inspection_$423_storage_$dyn_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref[] storage ref"
                        }
                      },
                      "id": 877,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "6491:36:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Inspection_$423_storage_$dyn_storage_ptr_$_t_struct$_Inspection_$423_storage_$returns$__$bound_to$_t_array$_t_struct$_Inspection_$423_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct InspectionContract.Inspection storage ref[] storage pointer,struct InspectionContract.Inspection storage ref)"
                      }
                    },
                    "id": 881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6491:63:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 882,
                  "nodeType": "ExpressionStatement",
                  "src": "6491:63:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 887,
                          "name": "inspections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 438,
                          "src": "6602:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$423_storage_$",
                            "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                          }
                        },
                        "id": 889,
                        "indexExpression": {
                          "id": 888,
                          "name": "inspectionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 831,
                          "src": "6614:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6602:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$423_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Inspection_$423_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 883,
                          "name": "userInspections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 433,
                          "src": "6565:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Inspection_$423_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct InspectionContract.Inspection storage ref[] storage ref)"
                          }
                        },
                        "id": 885,
                        "indexExpression": {
                          "id": 884,
                          "name": "activistWallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 842,
                          "src": "6581:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6565:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Inspection_$423_storage_$dyn_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref[] storage ref"
                        }
                      },
                      "id": 886,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "6565:36:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Inspection_$423_storage_$dyn_storage_ptr_$_t_struct$_Inspection_$423_storage_$returns$__$bound_to$_t_array$_t_struct$_Inspection_$423_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct InspectionContract.Inspection storage ref[] storage pointer,struct InspectionContract.Inspection storage ref)"
                      }
                    },
                    "id": 890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6565:63:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 891,
                  "nodeType": "ExpressionStatement",
                  "src": "6565:63:2"
                }
              ]
            },
            "documentation": {
              "id": 829,
              "nodeType": "StructuredDocumentation",
              "src": "5666:176:2",
              "text": " @dev Inscrement producer and activist request action and mark both as no recent open requests and inspection\n @param inspectionId The id of the inspection"
            },
            "id": 893,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "afterRealizeInspection",
            "nameLocation": "5857:22:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 832,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 831,
                  "mutability": "mutable",
                  "name": "inspectionId",
                  "nameLocation": "5885:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 893,
                  "src": "5880:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 830,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5880:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5879:19:2"
            },
            "returnParameters": {
              "id": 833,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5908:0:2"
            },
            "scope": 997,
            "src": "5848:788:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 938,
              "nodeType": "Block",
              "src": "6798:246:2",
              "statements": [
                {
                  "assignments": [
                    904
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 904,
                      "mutability": "mutable",
                      "name": "isaPoints",
                      "nameLocation": "6814:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 938,
                      "src": "6809:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 903,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6809:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 906,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6826:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6809:18:2"
                },
                {
                  "body": {
                    "id": 934,
                    "nodeType": "Block",
                    "src": "6878:132:2",
                    "statements": [
                      {
                        "assignments": [
                          919
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 919,
                            "mutability": "mutable",
                            "name": "isaIndex",
                            "nameLocation": "6898:8:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 934,
                            "src": "6893:13:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 918,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "6893:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 925,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 920,
                              "name": "isas",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 898,
                              "src": "6909:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                                "typeString": "uint256[] memory[] memory"
                              }
                            },
                            "id": 922,
                            "indexExpression": {
                              "id": 921,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 908,
                              "src": "6914:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6909:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 924,
                          "indexExpression": {
                            "hexValue": "31",
                            "id": 923,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6917:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6909:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6893:26:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 926,
                            "name": "isaIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 919,
                            "src": "6938:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 927,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6950:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "6938:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 933,
                        "nodeType": "IfStatement",
                        "src": "6934:65:2",
                        "trueBody": {
                          "id": 932,
                          "nodeType": "Block",
                          "src": "6953:46:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 930,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "6972:11:2",
                                "subExpression": {
                                  "id": 929,
                                  "name": "isaPoints",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 904,
                                  "src": "6972:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 931,
                              "nodeType": "ExpressionStatement",
                              "src": "6972:11:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 911,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 908,
                      "src": "6856:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 912,
                        "name": "isas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 898,
                        "src": "6860:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        }
                      },
                      "id": 913,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6860:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6856:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 935,
                  "initializationExpression": {
                    "assignments": [
                      908
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 908,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6849:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 935,
                        "src": "6843:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 907,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "6843:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 910,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 909,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6853:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6843:11:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6873:3:2",
                      "subExpression": {
                        "id": 915,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 908,
                        "src": "6873:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 917,
                    "nodeType": "ExpressionStatement",
                    "src": "6873:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "6838:172:2"
                },
                {
                  "expression": {
                    "id": 936,
                    "name": "isaPoints",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 904,
                    "src": "7027:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 902,
                  "id": 937,
                  "nodeType": "Return",
                  "src": "7020:16:2"
                }
              ]
            },
            "documentation": {
              "id": 894,
              "nodeType": "StructuredDocumentation",
              "src": "6644:74:2",
              "text": " @dev Sum the ISA points\n @param isas The isas values"
            },
            "id": 939,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkIsaPoints",
            "nameLocation": "6733:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 899,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 898,
                  "mutability": "mutable",
                  "name": "isas",
                  "nameLocation": "6764:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 939,
                  "src": "6748:20:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                    "typeString": "uint256[][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 895,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6748:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 896,
                      "nodeType": "ArrayTypeName",
                      "src": "6748:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      }
                    },
                    "id": 897,
                    "nodeType": "ArrayTypeName",
                    "src": "6748:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                      "typeString": "uint256[][]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6747:22:2"
            },
            "returnParameters": {
              "id": 902,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 901,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 939,
                  "src": "6792:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 900,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6792:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6791:6:2"
            },
            "scope": 997,
            "src": "6724:320:2",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 954,
              "nodeType": "Block",
              "src": "7128:80:2",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 946,
                          "name": "inspections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 438,
                          "src": "7146:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$423_storage_$",
                            "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                          }
                        },
                        "id": 948,
                        "indexExpression": {
                          "id": 947,
                          "name": "inspectionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 941,
                          "src": "7158:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7146:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$423_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      },
                      "id": 949,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "activistWallet",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 410,
                      "src": "7146:40:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 950,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "7190:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "7190:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7146:54:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 945,
                  "id": 953,
                  "nodeType": "Return",
                  "src": "7139:61:2"
                }
              ]
            },
            "id": 955,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isActivistOwner",
            "nameLocation": "7065:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 942,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 941,
                  "mutability": "mutable",
                  "name": "inspectionId",
                  "nameLocation": "7086:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 955,
                  "src": "7081:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 940,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7081:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7080:19:2"
            },
            "returnParameters": {
              "id": 945,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 944,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 955,
                  "src": "7122:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 943,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7122:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7121:6:2"
            },
            "scope": 997,
            "src": "7056:152:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 970,
              "nodeType": "Block",
              "src": "7284:87:2",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_InspectionStatus_$398",
                      "typeString": "enum InspectionContract.InspectionStatus"
                    },
                    "id": 968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 962,
                          "name": "inspections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 438,
                          "src": "7302:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$423_storage_$",
                            "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                          }
                        },
                        "id": 964,
                        "indexExpression": {
                          "id": 963,
                          "name": "inspectionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 957,
                          "src": "7314:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7302:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$423_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      },
                      "id": 965,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 406,
                      "src": "7302:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_InspectionStatus_$398",
                        "typeString": "enum InspectionContract.InspectionStatus"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 966,
                        "name": "InspectionStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 398,
                        "src": "7338:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_InspectionStatus_$398_$",
                          "typeString": "type(enum InspectionContract.InspectionStatus)"
                        }
                      },
                      "id": 967,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ACCEPTED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 397,
                      "src": "7338:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_InspectionStatus_$398",
                        "typeString": "enum InspectionContract.InspectionStatus"
                      }
                    },
                    "src": "7302:61:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 961,
                  "id": 969,
                  "nodeType": "Return",
                  "src": "7295:68:2"
                }
              ]
            },
            "id": 971,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAccepted",
            "nameLocation": "7226:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 958,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 957,
                  "mutability": "mutable",
                  "name": "inspectionId",
                  "nameLocation": "7242:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 971,
                  "src": "7237:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 956,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7237:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7236:19:2"
            },
            "returnParameters": {
              "id": 961,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 960,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 971,
                  "src": "7278:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 959,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7278:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7277:6:2"
            },
            "scope": 997,
            "src": "7217:154:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 982,
              "nodeType": "Block",
              "src": "7428:117:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 975,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "7462:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 976,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7462:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 974,
                          "name": "activistExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 174,
                          "src": "7447:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7447:26:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206d75737420626520616e2061637469766973742120506c65617365207265676973746572206173206f6e65",
                        "id": 978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7475:49:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7bbfd9faa9484f9e64abeb985fc471aa16487b87a888d85c1e82273be1ee2169",
                          "typeString": "literal_string \"You must be an activist! Please register as one\""
                        },
                        "value": "You must be an activist! Please register as one"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7bbfd9faa9484f9e64abeb985fc471aa16487b87a888d85c1e82273be1ee2169",
                          "typeString": "literal_string \"You must be an activist! Please register as one\""
                        }
                      ],
                      "id": 973,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7439:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7439:86:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 980,
                  "nodeType": "ExpressionStatement",
                  "src": "7439:86:2"
                },
                {
                  "id": 981,
                  "nodeType": "PlaceholderStatement",
                  "src": "7536:1:2"
                }
              ]
            },
            "id": 983,
            "name": "requireActivist",
            "nameLocation": "7410:15:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 972,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7425:2:2"
            },
            "src": "7401:144:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 995,
              "nodeType": "Block",
              "src": "7609:102:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 989,
                            "name": "inspectionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 985,
                            "src": "7645:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 988,
                          "name": "inspectionExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 828,
                          "src": "7628:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7628:30:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320696e7370656374696f6e20646f6e277420657869737473",
                        "id": 991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7660:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_27cfb18fb102385a5a6ad3d3f29c4023f127e18857272a0d2d3c2847a7e8e217",
                          "typeString": "literal_string \"This inspection don't exists\""
                        },
                        "value": "This inspection don't exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_27cfb18fb102385a5a6ad3d3f29c4023f127e18857272a0d2d3c2847a7e8e217",
                          "typeString": "literal_string \"This inspection don't exists\""
                        }
                      ],
                      "id": 987,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7620:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7620:71:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 993,
                  "nodeType": "ExpressionStatement",
                  "src": "7620:71:2"
                },
                {
                  "id": 994,
                  "nodeType": "PlaceholderStatement",
                  "src": "7702:1:2"
                }
              ]
            },
            "id": 996,
            "name": "requireInspectionExists",
            "nameLocation": "7566:23:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 986,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 985,
                  "mutability": "mutable",
                  "name": "inspectionId",
                  "nameLocation": "7595:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 996,
                  "src": "7590:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 984,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7590:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7589:19:2"
            },
            "src": "7557:154:2",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 998,
        "src": "254:7466:2",
        "usedErrors": []
      }
    ],
    "src": "0:7722:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2021-12-21T17:21:54.068Z",
  "devdoc": {
    "details": "Inpection action core",
    "kind": "dev",
    "methods": {
      "acceptInspection(uint256)": {
        "details": "Allows the current user (activist) accept a inspection.",
        "params": {
          "inspectionId": "The id of the inspection that the activist want accept."
        }
      },
      "activistExists(address)": {
        "details": "Check if a specific activist exists",
        "returns": {
          "_0": "a bool that represent if a activist exists or not"
        }
      },
      "addActivist(string,string,string,string,string,string,string)": {
        "details": "Allow a new register of activist",
        "params": {
          "cep": "the cep of the activist",
          "city": "the of the activist",
          "country": "the country where the activist is",
          "document": "the document of activist",
          "documentType": "the document type type of activist. CPF/CNPJ",
          "name": "the name of the activist",
          "state": "the state of the activist"
        },
        "returns": {
          "_0": "a Activist"
        }
      },
      "addCategory(string,string,string,string,string,string,string)": {
        "details": "add a new category",
        "params": {
          "description": "the description of category",
          "name": "the name of category",
          "neutro": "the description text to this metric",
          "partiallyNotSustainable": "the description text to this metric",
          "partiallySustainable": "the description text to this metric",
          "totallyNotSustainable": "the description text to this metric",
          "totallySustainable": "the description text to this metric"
        },
        "returns": {
          "_0": "bool"
        }
      },
      "addProducer(string,string,string,string,string,string,string)": {
        "details": "Allow a new register of producer",
        "params": {
          "cep": "the cep of the producer",
          "city": "the of the producer",
          "country": "the country where the producer is",
          "document": "the document of producer",
          "documentType": "the document type type of producer. CPF/CNPJ",
          "name": "the name of the producer",
          "state": "the state of the producer"
        }
      },
      "getActivist(address)": {
        "details": "Return a specific activist",
        "params": {
          "addr": "the address of the activist."
        }
      },
      "getActivists()": {
        "details": "Returns all registered activists",
        "returns": {
          "_0": "Activist struct array"
        }
      },
      "getCategories()": {
        "details": "Returns all added categories",
        "returns": {
          "_0": "category struc array"
        }
      },
      "getCategory(uint256)": {
        "details": "get a specific category",
        "params": {
          "id": "the id of a category"
        }
      },
      "getInspection(uint256)": {
        "details": "Returns a inspection by id if that exists.",
        "params": {
          "id": "The id of the inspection to return."
        }
      },
      "getInspections()": {
        "details": "Returns all requested inspections."
      },
      "getInspectionsHistory()": {
        "details": "Allows the current user producer/activist get all yours inspections with status INSPECTED"
      },
      "getInspectionsStatus()": {
        "details": "Returns all inpections status string."
      },
      "getIsas()": {
        "details": "Returns all isas string."
      },
      "getProducer(address)": {
        "details": "Return a specific producer",
        "params": {
          "addr": "the address of the producer."
        }
      },
      "getProducers()": {
        "details": "Returns all registered producers",
        "returns": {
          "_0": "Producer struct array"
        }
      },
      "getUser(address)": {
        "details": "Returns the user type if the user is registered",
        "params": {
          "addr": "the user address that want check if exists"
        }
      },
      "getUserTypes()": {
        "details": "Returns the enum UserType of the system"
      },
      "inspectionExists(uint256)": {
        "details": "Check if an inspections exists in mapping.",
        "params": {
          "id": "The id of the inspection that the activist want accept."
        }
      },
      "producerExists(address)": {
        "details": "Check if a specific producer exists",
        "returns": {
          "_0": "a bool that represent if a producer exists or not"
        }
      },
      "realizeInspection(uint256,uint256[][])": {
        "details": "Allow a activist realize a inspection and mark as INSPECTED",
        "params": {
          "inspectionId": "The id of the inspection to be realized",
          "isas": "The uint[][] of categoryId and isaIndex. Ex: isas = [ [categoryId, isaIndex], [categoryId, isaIndex] ]"
        }
      },
      "requestInspection()": {
        "details": "Allows the current user (producer) request a inspection."
      },
      "vote(uint256)": {
        "details": "Allow a user vote in a category",
        "params": {
          "id": "the id of a category that receives a vote."
        },
        "returns": {
          "_0": "category struc array"
        }
      }
    },
    "title": "InspectionContract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}