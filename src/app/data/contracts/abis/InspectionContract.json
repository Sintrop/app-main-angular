{
  "contractName": "InspectionContract",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "activistExists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "activistsCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "document",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "documentType",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "country",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "state",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "city",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "cep",
          "type": "string"
        }
      ],
      "name": "addActivist",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "activistWallet",
              "type": "address"
            },
            {
              "internalType": "enum UserContract.UserType",
              "name": "userType",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "document",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "documentType",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "recentInspection",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "totalInspections",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "country",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "state",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "city",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "cep",
                  "type": "string"
                }
              ],
              "internalType": "struct ActivistContract.ActivistAddress",
              "name": "activistAddress",
              "type": "tuple"
            }
          ],
          "internalType": "struct ActivistContract.Activist",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "totallySustainable",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "partiallySustainable",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "neutro",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "partiallyNotSustainable",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "totallyNotSustainable",
          "type": "string"
        }
      ],
      "name": "addCategory",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "document",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "documentType",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "country",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "state",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "city",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "cep",
          "type": "string"
        }
      ],
      "name": "addProducer",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "producer_wallet",
              "type": "address"
            },
            {
              "internalType": "enum UserContract.UserType",
              "name": "userType",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "document",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "documentType",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "recentInspection",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "totalRequests",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "isaAverage",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "country",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "state",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "city",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "cep",
                  "type": "string"
                }
              ],
              "internalType": "struct ProducerContract.PropertyAddress",
              "name": "property_address",
              "type": "tuple"
            }
          ],
          "internalType": "struct ProducerContract.Producer",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "category",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "createdBy",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "totallySustainable",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "partiallySustainable",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "neutro",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "partiallyNotSustainable",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "totallyNotSustainable",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "votesCount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "categoryCounts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "getActivist",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "activistWallet",
              "type": "address"
            },
            {
              "internalType": "enum UserContract.UserType",
              "name": "userType",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "document",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "documentType",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "recentInspection",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "totalInspections",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "country",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "state",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "city",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "cep",
                  "type": "string"
                }
              ],
              "internalType": "struct ActivistContract.ActivistAddress",
              "name": "activistAddress",
              "type": "tuple"
            }
          ],
          "internalType": "struct ActivistContract.Activist",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getActivists",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "activistWallet",
              "type": "address"
            },
            {
              "internalType": "enum UserContract.UserType",
              "name": "userType",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "document",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "documentType",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "recentInspection",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "totalInspections",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "country",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "state",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "city",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "cep",
                  "type": "string"
                }
              ],
              "internalType": "struct ActivistContract.ActivistAddress",
              "name": "activistAddress",
              "type": "tuple"
            }
          ],
          "internalType": "struct ActivistContract.Activist[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCategories",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "createdBy",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "totallySustainable",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "partiallySustainable",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "neutro",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "partiallyNotSustainable",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "totallyNotSustainable",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "votesCount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "internalType": "struct CategoryContract.Category[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getCategory",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "createdBy",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "totallySustainable",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "partiallySustainable",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "neutro",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "partiallyNotSustainable",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "totallyNotSustainable",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "votesCount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "internalType": "struct CategoryContract.Category",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getIsas",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "getProducer",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "producer_wallet",
              "type": "address"
            },
            {
              "internalType": "enum UserContract.UserType",
              "name": "userType",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "document",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "documentType",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "recentInspection",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "totalRequests",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "isaAverage",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "country",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "state",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "city",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "cep",
                  "type": "string"
                }
              ],
              "internalType": "struct ProducerContract.PropertyAddress",
              "name": "property_address",
              "type": "tuple"
            }
          ],
          "internalType": "struct ProducerContract.Producer",
          "name": "producer",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProducers",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "producer_wallet",
              "type": "address"
            },
            {
              "internalType": "enum UserContract.UserType",
              "name": "userType",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "document",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "documentType",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "recentInspection",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "totalRequests",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "isaAverage",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "country",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "state",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "city",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "cep",
                  "type": "string"
                }
              ],
              "internalType": "struct ProducerContract.PropertyAddress",
              "name": "property_address",
              "type": "tuple"
            }
          ],
          "internalType": "struct ProducerContract.Producer[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "getUser",
      "outputs": [
        {
          "internalType": "enum UserContract.UserType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUserTypes",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "producerExists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "producersCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usersCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "vote",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getInspectionsHistory",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "enum InspectionContract.InspectionStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "producerWallet",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "activistWallet",
              "type": "address"
            },
            {
              "internalType": "uint256[][]",
              "name": "isas",
              "type": "uint256[][]"
            },
            {
              "internalType": "uint256",
              "name": "isaAverage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiresIn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "createdAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "internalType": "struct InspectionContract.Inspection[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "requestInspection",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "inspectionId",
          "type": "uint256"
        }
      ],
      "name": "acceptInspection",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "inspectionId",
          "type": "uint256"
        },
        {
          "internalType": "uint256[][]",
          "name": "isas",
          "type": "uint256[][]"
        }
      ],
      "name": "realizeInspection",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getInspection",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "enum InspectionContract.InspectionStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "producerWallet",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "activistWallet",
              "type": "address"
            },
            {
              "internalType": "uint256[][]",
              "name": "isas",
              "type": "uint256[][]"
            },
            {
              "internalType": "uint256",
              "name": "isaAverage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiresIn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "createdAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "internalType": "struct InspectionContract.Inspection",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getInspections",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "enum InspectionContract.InspectionStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "producerWallet",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "activistWallet",
              "type": "address"
            },
            {
              "internalType": "uint256[][]",
              "name": "isas",
              "type": "uint256[][]"
            },
            {
              "internalType": "uint256",
              "name": "isaAverage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiresIn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "createdAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "internalType": "struct InspectionContract.Inspection[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getInspectionsStatus",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "inspectionExists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"inspectionId\",\"type\":\"uint256\"}],\"name\":\"acceptInspection\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"activistExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activistsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"document\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"documentType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"state\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"cep\",\"type\":\"string\"}],\"name\":\"addActivist\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"activistWallet\",\"type\":\"address\"},{\"internalType\":\"enum UserContract.UserType\",\"name\":\"userType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"document\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"documentType\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recentInspection\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalInspections\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"state\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"cep\",\"type\":\"string\"}],\"internalType\":\"struct ActivistContract.ActivistAddress\",\"name\":\"activistAddress\",\"type\":\"tuple\"}],\"internalType\":\"struct ActivistContract.Activist\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"totallySustainable\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"partiallySustainable\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"neutro\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"partiallyNotSustainable\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"totallyNotSustainable\",\"type\":\"string\"}],\"name\":\"addCategory\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"document\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"documentType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"state\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"cep\",\"type\":\"string\"}],\"name\":\"addProducer\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"producer_wallet\",\"type\":\"address\"},{\"internalType\":\"enum UserContract.UserType\",\"name\":\"userType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"document\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"documentType\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recentInspection\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalRequests\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"isaAverage\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"state\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"cep\",\"type\":\"string\"}],\"internalType\":\"struct ProducerContract.PropertyAddress\",\"name\":\"property_address\",\"type\":\"tuple\"}],\"internalType\":\"struct ProducerContract.Producer\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"category\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"createdBy\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"totallySustainable\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"partiallySustainable\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"neutro\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"partiallyNotSustainable\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"totallyNotSustainable\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"votesCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"categoryCounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getActivist\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"activistWallet\",\"type\":\"address\"},{\"internalType\":\"enum UserContract.UserType\",\"name\":\"userType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"document\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"documentType\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recentInspection\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalInspections\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"state\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"cep\",\"type\":\"string\"}],\"internalType\":\"struct ActivistContract.ActivistAddress\",\"name\":\"activistAddress\",\"type\":\"tuple\"}],\"internalType\":\"struct ActivistContract.Activist\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActivists\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"activistWallet\",\"type\":\"address\"},{\"internalType\":\"enum UserContract.UserType\",\"name\":\"userType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"document\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"documentType\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recentInspection\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalInspections\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"state\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"cep\",\"type\":\"string\"}],\"internalType\":\"struct ActivistContract.ActivistAddress\",\"name\":\"activistAddress\",\"type\":\"tuple\"}],\"internalType\":\"struct ActivistContract.Activist[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCategories\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"createdBy\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"totallySustainable\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"partiallySustainable\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"neutro\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"partiallyNotSustainable\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"totallyNotSustainable\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"votesCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"internalType\":\"struct CategoryContract.Category[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getCategory\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"createdBy\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"totallySustainable\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"partiallySustainable\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"neutro\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"partiallyNotSustainable\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"totallyNotSustainable\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"votesCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"internalType\":\"struct CategoryContract.Category\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getInspection\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum InspectionContract.InspectionStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"producerWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"activistWallet\",\"type\":\"address\"},{\"internalType\":\"uint256[][]\",\"name\":\"isas\",\"type\":\"uint256[][]\"},{\"internalType\":\"uint256\",\"name\":\"isaAverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiresIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"internalType\":\"struct InspectionContract.Inspection\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInspections\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum InspectionContract.InspectionStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"producerWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"activistWallet\",\"type\":\"address\"},{\"internalType\":\"uint256[][]\",\"name\":\"isas\",\"type\":\"uint256[][]\"},{\"internalType\":\"uint256\",\"name\":\"isaAverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiresIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"internalType\":\"struct InspectionContract.Inspection[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInspectionsHistory\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum InspectionContract.InspectionStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"producerWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"activistWallet\",\"type\":\"address\"},{\"internalType\":\"uint256[][]\",\"name\":\"isas\",\"type\":\"uint256[][]\"},{\"internalType\":\"uint256\",\"name\":\"isaAverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiresIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"internalType\":\"struct InspectionContract.Inspection[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInspectionsStatus\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getIsas\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getProducer\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"producer_wallet\",\"type\":\"address\"},{\"internalType\":\"enum UserContract.UserType\",\"name\":\"userType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"document\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"documentType\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recentInspection\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalRequests\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"isaAverage\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"state\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"cep\",\"type\":\"string\"}],\"internalType\":\"struct ProducerContract.PropertyAddress\",\"name\":\"property_address\",\"type\":\"tuple\"}],\"internalType\":\"struct ProducerContract.Producer\",\"name\":\"producer\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProducers\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"producer_wallet\",\"type\":\"address\"},{\"internalType\":\"enum UserContract.UserType\",\"name\":\"userType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"document\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"documentType\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recentInspection\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalRequests\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"isaAverage\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"state\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"cep\",\"type\":\"string\"}],\"internalType\":\"struct ProducerContract.PropertyAddress\",\"name\":\"property_address\",\"type\":\"tuple\"}],\"internalType\":\"struct ProducerContract.Producer[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getUser\",\"outputs\":[{\"internalType\":\"enum UserContract.UserType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUserTypes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"inspectionExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"producerExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"producersCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"inspectionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[][]\",\"name\":\"isas\",\"type\":\"uint256[][]\"}],\"name\":\"realizeInspection\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestInspection\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usersCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Inpection action core\",\"kind\":\"dev\",\"methods\":{\"acceptInspection(uint256)\":{\"details\":\"Allows the current user (activist) accept a inspection.\",\"params\":{\"inspectionId\":\"The id of the inspection that the activist want accept.\"}},\"activistExists(address)\":{\"details\":\"Check if a specific activist exists\",\"returns\":{\"_0\":\"a bool that represent if a activist exists or not\"}},\"addActivist(string,string,string,string,string,string,string)\":{\"details\":\"Allow a new register of activist\",\"params\":{\"cep\":\"the cep of the activist\",\"city\":\"the of the activist\",\"country\":\"the country where the activist is\",\"document\":\"the document of activist\",\"documentType\":\"the document type type of activist. CPF/CNPJ\",\"name\":\"the name of the activist\",\"state\":\"the state of the activist\"},\"returns\":{\"_0\":\"a Activist\"}},\"addCategory(string,string,string,string,string,string,string)\":{\"details\":\"add a new category\",\"params\":{\"description\":\"the description of category\",\"name\":\"the name of category\",\"neutro\":\"the description text to this metric\",\"partiallyNotSustainable\":\"the description text to this metric\",\"partiallySustainable\":\"the description text to this metric\",\"totallyNotSustainable\":\"the description text to this metric\",\"totallySustainable\":\"the description text to this metric\"},\"returns\":{\"_0\":\"bool\"}},\"addProducer(string,string,string,string,string,string,string)\":{\"details\":\"Allow a new register of producer\",\"params\":{\"cep\":\"the cep of the producer\",\"city\":\"the of the producer\",\"country\":\"the country where the producer is\",\"document\":\"the document of producer\",\"documentType\":\"the document type type of producer. CPF/CNPJ\",\"name\":\"the name of the producer\",\"state\":\"the state of the producer\"}},\"getActivist(address)\":{\"details\":\"Return a specific activist\",\"params\":{\"addr\":\"the address of the activist.\"}},\"getActivists()\":{\"details\":\"Returns all registered activists\",\"returns\":{\"_0\":\"Activist struct array\"}},\"getCategories()\":{\"details\":\"Returns all added categories\",\"returns\":{\"_0\":\"category struc array\"}},\"getCategory(uint256)\":{\"details\":\"get a specific category\",\"params\":{\"id\":\"the id of a category\"}},\"getInspection(uint256)\":{\"details\":\"Returns a inspection by id if that exists.\",\"params\":{\"id\":\"The id of the inspection to return.\"}},\"getInspections()\":{\"details\":\"Returns all requested inspections.\"},\"getInspectionsHistory()\":{\"details\":\"Allows the current user producer/activist get all yours inspections with status INSPECTED\"},\"getInspectionsStatus()\":{\"details\":\"Returns all inpections status string.\"},\"getIsas()\":{\"details\":\"Returns all isas string.\"},\"getProducer(address)\":{\"details\":\"Return a specific producer\",\"params\":{\"addr\":\"the address of the producer.\"}},\"getProducers()\":{\"details\":\"Returns all registered producers\",\"returns\":{\"_0\":\"Producer struct array\"}},\"getUser(address)\":{\"details\":\"Returns the user type if the user is registered\",\"params\":{\"addr\":\"the user address that want check if exists\"}},\"getUserTypes()\":{\"details\":\"Returns the enum UserType of the system\"},\"inspectionExists(uint256)\":{\"details\":\"Check if an inspections exists in mapping.\",\"params\":{\"id\":\"The id of the inspection that the activist want accept.\"}},\"producerExists(address)\":{\"details\":\"Check if a specific producer exists\",\"returns\":{\"_0\":\"a bool that represent if a producer exists or not\"}},\"realizeInspection(uint256,uint256[][])\":{\"details\":\"Allow a activist realize a inspection and mark as INSPECTED\",\"params\":{\"inspectionId\":\"The id of the inspection to be realized\",\"isas\":\"The uint[][] of categoryId and isaIndex. Ex: isas = [ [categoryId, isaIndex], [categoryId, isaIndex] ]\"}},\"requestInspection()\":{\"details\":\"Allows the current user (producer) request a inspection.\"},\"vote(uint256)\":{\"details\":\"Allow a user vote in a category\",\"params\":{\"id\":\"the id of a category that receives a vote.\"},\"returns\":{\"_0\":\"category struc array\"}}},\"title\":\"InspectionContract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/Breno/Downloads/SintropContract/contracts/InspectionContract.sol\":\"InspectionContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/Breno/Downloads/SintropContract/contracts/ActivistContract.sol\":{\"keccak256\":\"0xb3ca36eb576f2268017e3ea24b171b903305d32c8ad0fdd93d0bc817662338cc\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8e0445a5d5093a0d18931f10d9d29b6a4ead58b5a273625b735e9a137b61ec83\",\"dweb:/ipfs/QmS9ApGzd3T5sJFRohKVtGgYjEppPnen3CZbKJWAxCqN8u\"]},\"/C/Users/Breno/Downloads/SintropContract/contracts/CategoryContract.sol\":{\"keccak256\":\"0x01166e170811c763ceac5a31b2e79a3e14d3c9c444dcae8fd1c9ae924e596e5b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://0405411a718c6275a66cf287d057362c23cbc0c9bc0cc0d763522eff13c06eed\",\"dweb:/ipfs/Qmc78gfgh683KBRf5uxBRM2h9EkNSxeNEnwUjJp37rES54\"]},\"/C/Users/Breno/Downloads/SintropContract/contracts/InspectionContract.sol\":{\"keccak256\":\"0xd99434f7788baa3a1dbceeb645a95bb5497ee9b96f9f66d9e758023d76b0533f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a4630f5367a5a46dbf63b646238b29cb0f0b4900a33c3bb6054aa33c6144b68c\",\"dweb:/ipfs/QmeaNE6GAEtbVMPuVdTTtTuK4oDk4HsNM4gq33dpcbeG8p\"]},\"/C/Users/Breno/Downloads/SintropContract/contracts/ProducerContract.sol\":{\"keccak256\":\"0x056a614415032cdcf9cdc536b2c995d7c68c0e4e47d31b3cb86bde4f5ebc806b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://89c779294a7d3582d253aa4134d36b9ae7000aaaed3622e72524da73cfe257db\",\"dweb:/ipfs/QmPPgstyWXnZmP2zgjkxqjiiJwnRhujYcjc9u6DsQnqWzB\"]},\"/C/Users/Breno/Downloads/SintropContract/contracts/UserContract.sol\":{\"keccak256\":\"0xbd938b28a90dbc3bc48fdd6f06bcdaab1b6a41cd6474bf902421dd7bff08a0a5\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a6840fd294114e6ee87c13f52cfd217df3db14346f4b348640e4e3ebb6671b02\",\"dweb:/ipfs/QmXUoCzJPkaNuiKQhkv3UERAVAEAHim5oDUNSAGxYm48mf\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101c45760003560e01c8063a1c24d64116100f9578063e80a7eb911610097578063ef430aa611610071578063ef430aa61461054b578063f28366701461056a578063f3052d261461058a578063fe5a4fa4146105aa57600080fd5b8063e80a7eb91461051b578063e9e797ac14610530578063ee699fc11461054357600080fd5b8063b92bd2d9116100d3578063b92bd2d91461046c578063dd6850c61461047f578063e53142e2146104ff578063e78575021461050857600080fd5b8063a1c24d6414610369578063aab147b21461037c578063b7399d881461038f57600080fd5b80636337dc1a116101665780637333afcf116101405780637333afcf1461032557806386ae2fb11461032e5780638c4772fc146103365780638ed5540d1461034957600080fd5b80636337dc1a1461027a5780636ba13a82146102e35780636f77926b146102ec57600080fd5b806340f52841116101a257806340f528411461021d57806342e187dd1461023d5780634db0412c1461025257806362efeff71461026757600080fd5b80630121b93f146101c957806309e1b1d1146101f15780630bbec3c214610208575b600080fd5b6101dc6101d736600461518d565b6105ce565b60405190151581526020015b60405180910390f35b6101fa60075481565b6040519081526020016101e8565b610210610af2565b6040516101e89190615308565b61023061022b366004615421565b610c8f565b6040516101e891906156b9565b610245611043565b6040516101e891906156d3565b61025a61151b565b6040516101e89190615823565b610230610275366004615878565b6119a4565b604080518082018252600880825267282927a22aa1a2a960c11b60208084019190915283518085018552918252671050d512559254d560c21b8282015283518085018552600a8152692922a9a2a0a921a422a960b11b9181019190915292516101e893906158a1565b6101fa60015481565b6103186102fa366004615878565b6001600160a01b031660009081526020819052604090205460ff1690565b6040516101e891906158da565b6101fa60135481565b6101dc611e52565b6101dc610344366004615878565b612449565b61035c610357366004615421565b61247f565b6040516101e891906159b4565b6101dc610377366004615421565b612833565b61035c61038a366004615878565b612c8c565b604080518082018252601380825272544f54414c4c595f5355535441494e41424c4560681b60208084019190915283518085018552918252725041525449414c5f5355535441494e41424c4560681b828201528351808501855260068152654e455554524f60d01b818301528451808601865260178082527f5041525449414c5f4e4f545f5355535441494e41424c4500000000000000000082850152865180880188529081527f544f54414c4c595f4e4f545f5355535441494e41424c450000000000000000009381019390935294516101e8959192906159c7565b6101dc61047a366004615a58565b612f09565b604080518082018252600481526327a822a760e11b6020808301919091528251808401845260078152661156141254915160ca1b81830152835180850185526009815268125394d41150d5115160ba1b818401528451808601865260088152671050d0d15415115160c21b9381019390935293516101e894919290615b70565b6101fa60045481565b6101dc61051636600461518d565b61335d565b6105236136d6565b6040516101e89190615bc8565b6101dc61053e366004615878565b613bbf565b610210613be9565b610553613d72565b6040516101e89b9a99989796959493929190615c1d565b61057d61057836600461518d565b614177565b6040516101e89190615cdc565b61059d61059836600461518d565b614322565b6040516101e89190615cef565b6101dc6105b836600461518d565b6000908152601960205260409020546001111590565b6000816105df565b60405180910390fd5b60008181526015602052604090205461063a5760405162461bcd60e51b815260206004820152601a60248201527f546869732063617465676f727920646f6e27742065786973747300000000000060448201526064016105d6565b60008381526015602090815260408083208151610160810183528154815260018201546001600160a01b031693810193909352600281018054919284019161068190615d02565b80601f01602080910402602001604051908101604052809291908181526020018280546106ad90615d02565b80156106fa5780601f106106cf576101008083540402835291602001916106fa565b820191906000526020600020905b8154815290600101906020018083116106dd57829003601f168201915b5050505050815260200160038201805461071390615d02565b80601f016020809104026020016040519081016040528092919081815260200182805461073f90615d02565b801561078c5780601f106107615761010080835404028352916020019161078c565b820191906000526020600020905b81548152906001019060200180831161076f57829003601f168201915b505050505081526020016004820180546107a590615d02565b80601f01602080910402602001604051908101604052809291908181526020018280546107d190615d02565b801561081e5780601f106107f35761010080835404028352916020019161081e565b820191906000526020600020905b81548152906001019060200180831161080157829003601f168201915b5050505050815260200160058201805461083790615d02565b80601f016020809104026020016040519081016040528092919081815260200182805461086390615d02565b80156108b05780601f10610885576101008083540402835291602001916108b0565b820191906000526020600020905b81548152906001019060200180831161089357829003601f168201915b505050505081526020016006820180546108c990615d02565b80601f01602080910402602001604051908101604052809291908181526020018280546108f590615d02565b80156109425780601f1061091757610100808354040283529160200191610942565b820191906000526020600020905b81548152906001019060200180831161092557829003601f168201915b5050505050815260200160078201805461095b90615d02565b80601f016020809104026020016040519081016040528092919081815260200182805461098790615d02565b80156109d45780601f106109a9576101008083540402835291602001916109d4565b820191906000526020600020905b8154815290600101906020018083116109b757829003601f168201915b505050505081526020016008820180546109ed90615d02565b80601f0160208091040260200160405190810160405280929190818152602001828054610a1990615d02565b8015610a665780601f10610a3b57610100808354040283529160200191610a66565b820191906000526020600020905b815481529060010190602001808311610a4957829003601f168201915b5050509183525050600982810154602080840191909152600a909301546040928301526000888152601590935290822001805492935090610aa683615d4d565b9190505550601481610140015181548110610ac357610ac3615d68565b6000918252602082206009600b9092020101805491610ae183615d4d565b919050555060019250505b50919050565b336000908152601860209081526040808320805482518185028101850190935280835260609492939192909184015b82821015610c86578382906000526020600020906008020160405180610120016040529081600082015481526020016001820160009054906101000a900460ff166003811115610b7357610b736151a6565b6003811115610b8457610b846151a6565b815260018201546001600160a01b0361010090910481166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919060009084015b82821015610c4757600084815260209081902083018054604080518285028101850190915281815292830182828015610c3357602002820191906000526020600020905b815481526020019060010190808311610c1f575b505050505081526020019060010190610bdb565b50505050815260200160048201548152602001600582015481526020016006820154815260200160078201548152505081526020019060010190610b21565b50505050905090565b610c97614e2f565b60006007546001610ca89190615d7e565b604080516080810182528881526020808201899052818301889052606082018790528251610120810184528481523391810191909152929350600292909160009190810184815260208082018f905260408083018f9052606083018e905260006080840181905260a0840181905260c09093018690526005805460018101825593528351600b9093027f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db08101938455918401517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db190920180546001600160a01b039093166001600160a01b03198416811782559185015194955085949290916001600160a81b031990911617600160a01b836003811115610dcb57610dcb6151a6565b021790555060608201518051610deb916002840191602090910190614ea5565b5060808201518051610e07916003840191602090910190614ea5565b5060a08201518051610e23916004840191602090910190614ea5565b5060c082015160058201805460ff191691151591909117905560e08201516006820155610100820151805180516007840191610e6491839160200190614ea5565b506020828101518051610e7d9260018501920190614ea5565b5060408201518051610e99916002840191602090910190614ea5565b5060608201518051610eb5916003840191602090910190614ea5565b50503360009081526006602090815260409182902086518155908601516001820180546001600160a01b031981166001600160a01b0390931692831782559388015188975092955091935090916001600160a81b03191617600160a01b836003811115610f2457610f246151a6565b021790555060608201518051610f44916002840191602090910190614ea5565b5060808201518051610f60916003840191602090910190614ea5565b5060a08201518051610f7c916004840191602090910190614ea5565b5060c082015160058201805460ff191691151591909117905560e08201516006820155610100820151805180516007840191610fbd91839160200190614ea5565b506020828101518051610fd69260018501920190614ea5565b5060408201518051610ff2916002840191602090910190614ea5565b506060820151805161100e916003840191602090910190614ea5565b505060078054935091506000905061102583615d4d565b919050555061103433846147dc565b9b9a5050505050505050505050565b60606005805480602002602001604051908101604052809291908181526020016000905b82821015610c865760008481526020908190206040805161012081018252600b86029092018054835260018101546001600160a01b03811694840194909452919290830190600160a01b900460ff1660038111156110c7576110c76151a6565b60038111156110d8576110d86151a6565b81526020016002820180546110ec90615d02565b80601f016020809104026020016040519081016040528092919081815260200182805461111890615d02565b80156111655780601f1061113a57610100808354040283529160200191611165565b820191906000526020600020905b81548152906001019060200180831161114857829003601f168201915b5050505050815260200160038201805461117e90615d02565b80601f01602080910402602001604051908101604052809291908181526020018280546111aa90615d02565b80156111f75780601f106111cc576101008083540402835291602001916111f7565b820191906000526020600020905b8154815290600101906020018083116111da57829003601f168201915b5050505050815260200160048201805461121090615d02565b80601f016020809104026020016040519081016040528092919081815260200182805461123c90615d02565b80156112895780601f1061125e57610100808354040283529160200191611289565b820191906000526020600020905b81548152906001019060200180831161126c57829003601f168201915b5050509183525050600582015460ff16151560208201526006820154604080830191909152805160808101909152600783018054606090930192829082906112d090615d02565b80601f01602080910402602001604051908101604052809291908181526020018280546112fc90615d02565b80156113495780601f1061131e57610100808354040283529160200191611349565b820191906000526020600020905b81548152906001019060200180831161132c57829003601f168201915b5050505050815260200160018201805461136290615d02565b80601f016020809104026020016040519081016040528092919081815260200182805461138e90615d02565b80156113db5780601f106113b0576101008083540402835291602001916113db565b820191906000526020600020905b8154815290600101906020018083116113be57829003601f168201915b505050505081526020016002820180546113f490615d02565b80601f016020809104026020016040519081016040528092919081815260200182805461142090615d02565b801561146d5780601f106114425761010080835404028352916020019161146d565b820191906000526020600020905b81548152906001019060200180831161145057829003601f168201915b5050505050815260200160038201805461148690615d02565b80601f01602080910402602001604051908101604052809291908181526020018280546114b290615d02565b80156114ff5780601f106114d4576101008083540402835291602001916114ff565b820191906000526020600020905b8154815290600101906020018083116114e257829003601f168201915b5050505050815250508152505081526020019060010190611067565b60606014805480602002602001604051908101604052809291908181526020016000905b82821015610c865760008481526020908190206040805161016081018252600b86029092018054835260018101546001600160a01b0316938301939093526002830180549293929184019161159390615d02565b80601f01602080910402602001604051908101604052809291908181526020018280546115bf90615d02565b801561160c5780601f106115e15761010080835404028352916020019161160c565b820191906000526020600020905b8154815290600101906020018083116115ef57829003601f168201915b5050505050815260200160038201805461162590615d02565b80601f016020809104026020016040519081016040528092919081815260200182805461165190615d02565b801561169e5780601f106116735761010080835404028352916020019161169e565b820191906000526020600020905b81548152906001019060200180831161168157829003601f168201915b505050505081526020016004820180546116b790615d02565b80601f01602080910402602001604051908101604052809291908181526020018280546116e390615d02565b80156117305780601f1061170557610100808354040283529160200191611730565b820191906000526020600020905b81548152906001019060200180831161171357829003601f168201915b5050505050815260200160058201805461174990615d02565b80601f016020809104026020016040519081016040528092919081815260200182805461177590615d02565b80156117c25780601f10611797576101008083540402835291602001916117c2565b820191906000526020600020905b8154815290600101906020018083116117a557829003601f168201915b505050505081526020016006820180546117db90615d02565b80601f016020809104026020016040519081016040528092919081815260200182805461180790615d02565b80156118545780601f1061182957610100808354040283529160200191611854565b820191906000526020600020905b81548152906001019060200180831161183757829003601f168201915b5050505050815260200160078201805461186d90615d02565b80601f016020809104026020016040519081016040528092919081815260200182805461189990615d02565b80156118e65780601f106118bb576101008083540402835291602001916118e6565b820191906000526020600020905b8154815290600101906020018083116118c957829003601f168201915b505050505081526020016008820180546118ff90615d02565b80601f016020809104026020016040519081016040528092919081815260200182805461192b90615d02565b80156119785780601f1061194d57610100808354040283529160200191611978565b820191906000526020600020905b81548152906001019060200180831161195b57829003601f168201915b5050505050815260200160098201548152602001600a820154815250508152602001906001019061153f565b6119ac614e2f565b6001600160a01b038281166000908152600660209081526040918290208251610120810184528154815260018201549485169281019290925290929091830190600160a01b900460ff166003811115611a0757611a076151a6565b6003811115611a1857611a186151a6565b8152602001600282018054611a2c90615d02565b80601f0160208091040260200160405190810160405280929190818152602001828054611a5890615d02565b8015611aa55780601f10611a7a57610100808354040283529160200191611aa5565b820191906000526020600020905b815481529060010190602001808311611a8857829003601f168201915b50505050508152602001600382018054611abe90615d02565b80601f0160208091040260200160405190810160405280929190818152602001828054611aea90615d02565b8015611b375780601f10611b0c57610100808354040283529160200191611b37565b820191906000526020600020905b815481529060010190602001808311611b1a57829003601f168201915b50505050508152602001600482018054611b5090615d02565b80601f0160208091040260200160405190810160405280929190818152602001828054611b7c90615d02565b8015611bc95780601f10611b9e57610100808354040283529160200191611bc9565b820191906000526020600020905b815481529060010190602001808311611bac57829003601f168201915b5050509183525050600582015460ff1615156020820152600682015460408083019190915280516080810190915260078301805460609093019282908290611c1090615d02565b80601f0160208091040260200160405190810160405280929190818152602001828054611c3c90615d02565b8015611c895780601f10611c5e57610100808354040283529160200191611c89565b820191906000526020600020905b815481529060010190602001808311611c6c57829003601f168201915b50505050508152602001600182018054611ca290615d02565b80601f0160208091040260200160405190810160405280929190818152602001828054611cce90615d02565b8015611d1b5780601f10611cf057610100808354040283529160200191611d1b565b820191906000526020600020905b815481529060010190602001808311611cfe57829003601f168201915b50505050508152602001600282018054611d3490615d02565b80601f0160208091040260200160405190810160405280929190818152602001828054611d6090615d02565b8015611dad5780601f10611d8257610100808354040283529160200191611dad565b820191906000526020600020905b815481529060010190602001808311611d9057829003601f168201915b50505050508152602001600382018054611dc690615d02565b80601f0160208091040260200160405190810160405280929190818152602001828054611df290615d02565b8015611e3f5780601f10611e1457610100808354040283529160200191611e3f565b820191906000526020600020905b815481529060010190602001808311611e2257829003601f168201915b5050509190925250505090525092915050565b6000611e5d33613bbf565b611ec05760405162461bcd60e51b815260206004820152602e60248201527f596f7520617265206e6f7420612070726f64756365722120506c65617365207260448201526d65676973746572206173206f6e6560901b60648201526084016105d6565b3360009081526003602081815260408084208151610140810183528154815260018201546001600160a01b0381169482019490945293909291840191600160a01b900460ff1690811115611f1657611f166151a6565b6003811115611f2757611f276151a6565b8152602001600282018054611f3b90615d02565b80601f0160208091040260200160405190810160405280929190818152602001828054611f6790615d02565b8015611fb45780601f10611f8957610100808354040283529160200191611fb4565b820191906000526020600020905b815481529060010190602001808311611f9757829003601f168201915b50505050508152602001600382018054611fcd90615d02565b80601f0160208091040260200160405190810160405280929190818152602001828054611ff990615d02565b80156120465780601f1061201b57610100808354040283529160200191612046565b820191906000526020600020905b81548152906001019060200180831161202957829003601f168201915b5050505050815260200160048201805461205f90615d02565b80601f016020809104026020016040519081016040528092919081815260200182805461208b90615d02565b80156120d85780601f106120ad576101008083540402835291602001916120d8565b820191906000526020600020905b8154815290600101906020018083116120bb57829003601f168201915b505050505081526020016005820160009054906101000a900460ff1615151515815260200160068201548152602001600782015481526020016008820160405180608001604052908160008201805461213090615d02565b80601f016020809104026020016040519081016040528092919081815260200182805461215c90615d02565b80156121a95780601f1061217e576101008083540402835291602001916121a9565b820191906000526020600020905b81548152906001019060200180831161218c57829003601f168201915b505050505081526020016001820180546121c290615d02565b80601f01602080910402602001604051908101604052809291908181526020018280546121ee90615d02565b801561223b5780601f106122105761010080835404028352916020019161223b565b820191906000526020600020905b81548152906001019060200180831161221e57829003601f168201915b5050505050815260200160028201805461225490615d02565b80601f016020809104026020016040519081016040528092919081815260200182805461228090615d02565b80156122cd5780601f106122a2576101008083540402835291602001916122cd565b820191906000526020600020905b8154815290600101906020018083116122b057829003601f168201915b505050505081526020016003820180546122e690615d02565b80601f016020809104026020016040519081016040528092919081815260200182805461231290615d02565b801561235f5780601f106123345761010080835404028352916020019161235f565b820191906000526020600020905b81548152906001019060200180831161234257829003601f168201915b5050509190925250505090525060c08101519091501561241c5760405162461bcd60e51b815260206004820152606660248201527f596f752068617665206120696e7370656374696f6e2072657175657374204f5060448201527f454e206f7220414343455054454421205761697420612061637469766973742060648201527f7265616c697a6520696e7370656374696f6e206f7220796f752063616e20636c6084820152651bdcd9481a5d60d21b60a482015260c4016105d6565b61242461482f565b5050336000908152600360205260409020600501805460ff1916600190811790915590565b6001600160a01b038116600090815260066020526040812060020180548291829161247390615d02565b91909111949350505050565b612487614f29565b600060045460016124989190615d7e565b604080516080810182528881526020808201899052818301889052606082018790528251610140810184528481523391810191909152929350600192909160009190810184815260208082018f905260408083018f9052606083018e905260006080840181905260a0840181905260c0840181905260e09093018690526002805460018101825593528351600c9093027f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace8101938455918401517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf90920180546001600160a01b039093166001600160a01b03198416811782559185015194955085949290916001600160a81b031990911617600160a01b8360038111156125c2576125c26151a6565b0217905550606082015180516125e2916002840191602090910190614ea5565b50608082015180516125fe916003840191602090910190614ea5565b5060a0820151805161261a916004840191602090910190614ea5565b5060c082015160058201805460ff191691151591909117905560e08201516006820155610100820151600782015561012082015180518051600884019161266691839160200190614ea5565b50602082810151805161267f9260018501920190614ea5565b506040820151805161269b916002840191602090910190614ea5565b50606082015180516126b7916003840191602090910190614ea5565b50503360009081526003602081815260409283902087518155908701516001820180546001600160a01b031981166001600160a01b0390931692831782559489015189985092965091945090926001600160a81b0319161790600160a01b908490811115612727576127276151a6565b021790555060608201518051612747916002840191602090910190614ea5565b5060808201518051612763916003840191602090910190614ea5565b5060a0820151805161277f916004840191602090910190614ea5565b5060c082015160058201805460ff191691151591909117905560e0820151600682015561010082015160078201556101208201518051805160088401916127cb91839160200190614ea5565b5060208281015180516127e49260018501920190614ea5565b5060408201518051612800916002840191602090910190614ea5565b506060820151805161281c916003840191602090910190614ea5565b505060048054935091506000905061102583615d4d565b60008060135460016128459190615d7e565b90506000612854600183615d96565b60408051610160810182528481523360208083018290529282018e9052606082018d9052608082018c905260a082018b905260c082018a905260e082018990526101008201889052600061012083015261014082018490526008868155600980546001600160a01b0319169092179091558d51939450909290916128dd91600a918f0190614ea5565b50606082015180516128f9916003840191602090910190614ea5565b5060808201518051612915916004840191602090910190614ea5565b5060a08201518051612931916005840191602090910190614ea5565b5060c0820151805161294d916006840191602090910190614ea5565b5060e08201518051612969916007840191602090910190614ea5565b506101008201518051612986916008840191602090910190614ea5565b5061012082015160098083019190915561014090920151600a918201556014805460018101825560009190915260088054600b9092027fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ec810192835593547fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ed850180546001600160a01b0319166001600160a01b039092169190911790558254909391927fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ee9092019190612a5990615d02565b612a64929190614fa1565b506003820181600301908054612a7990615d02565b612a84929190614fa1565b506004820181600401908054612a9990615d02565b612aa4929190614fa1565b506005820181600501908054612ab990615d02565b612ac4929190614fa1565b506006820181600601908054612ad990615d02565b612ae4929190614fa1565b506007820181600701908054612af990615d02565b612b04929190614fa1565b506008820181600801908054612b1990615d02565b612b24929190614fa1565b5060098281015482820155600a9283015491830191909155600084815260156020526040902060088054825591546001820180546001600160a01b0319166001600160a01b03909216919091179055825491929091600283019190612b8890615d02565b612b93929190614fa1565b506003820181600301908054612ba890615d02565b612bb3929190614fa1565b506004820181600401908054612bc890615d02565b612bd3929190614fa1565b506005820181600501908054612be890615d02565b612bf3929190614fa1565b506006820181600601908054612c0890615d02565b612c13929190614fa1565b506007820181600701908054612c2890615d02565b612c33929190614fa1565b506008820181600801908054612c4890615d02565b612c53929190614fa1565b5060098281015490820155600a9182015491015560138054906000612c7783615d4d565b9091555060019b9a5050505050505050505050565b612c94614f29565b6001600160a01b038281166000908152600360208181526040928390208351610140810185528154815260018201549586169281019290925290939092840191600160a01b90910460ff1690811115612cef57612cef6151a6565b6003811115612d0057612d006151a6565b8152602001600282018054612d1490615d02565b80601f0160208091040260200160405190810160405280929190818152602001828054612d4090615d02565b8015612d8d5780601f10612d6257610100808354040283529160200191612d8d565b820191906000526020600020905b815481529060010190602001808311612d7057829003601f168201915b50505050508152602001600382018054612da690615d02565b80601f0160208091040260200160405190810160405280929190818152602001828054612dd290615d02565b8015612e1f5780601f10612df457610100808354040283529160200191612e1f565b820191906000526020600020905b815481529060010190602001808311612e0257829003601f168201915b50505050508152602001600482018054612e3890615d02565b80601f0160208091040260200160405190810160405280929190818152602001828054612e6490615d02565b8015612eb15780601f10612e8657610100808354040283529160200191612eb1565b820191906000526020600020905b815481529060010190602001808311612e9457829003601f168201915b505050505081526020016005820160009054906101000a900460ff16151515158152602001600682015481526020016007820154815260200160088201604051806080016040529081600082018054611c1090615d02565b6000612f1433612449565b612f305760405162461bcd60e51b81526004016105d690615dad565b600083815260196020526040902054839060011115612f915760405162461bcd60e51b815260206004820152601c60248201527f5468697320696e7370656374696f6e20646f6e2774206578697374730000000060448201526064016105d6565b600360008581526019602052604090206001015460ff166003811115612fb957612fb96151a6565b14612fc75760009150613356565b6000848152601960205260409020600201546001600160a01b03163314612ff15760009150613356565b600084815260196020908152604090912084516130169260039092019186019061501c565b506000848152601960209081526040808320600181018054600260ff19909116811791829055835161012081018552835481528086018290526101009092046001600160a01b0390811683860152908301541660608201526003820180548451818702810187019095528085526131379692959394608087019490939084015b82821015613102576000848152602090819020830180546040805182850281018501909152818152928301828280156130ee57602002820191906000526020600020905b8154815260200190600101908083116130da575b505050505081526020019060010190613096565b505050508152602001600482015481526020016005820154815260200160068201548152602001600782015481525050614ac3565b60008581526019602052604090206004015561315284614aec565b60008481526019602052604090206007015460178054859290811061317957613179615d68565b9060005260206000209060080201600301908051906020019061319d92919061501c565b50600084815260196020908152604091829020825161012081019093528054835260018101546132b3939283019060ff1660038111156131df576131df6151a6565b60038111156131f0576131f06151a6565b815260018201546001600160a01b0361010090910481166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919060009084015b828210156131025760008481526020908190208301805460408051828502810185019091528181529283018282801561329f57602002820191906000526020600020905b81548152602001906001019080831161328b575b505050505081526020019060010190613247565b6000858152601960205260409020600701546017805490919081106132da576132da615d68565b9060005260206000209060080201600401819055506002601760196000878152602001908152602001600020600701548154811061331a5761331a615d68565b906000526020600020906008020160010160006101000a81548160ff0219169083600381111561334c5761334c6151a6565b0217905550600191505b5092915050565b600061336833612449565b6133845760405162461bcd60e51b81526004016105d690615dad565b6000828152601960205260409020548290600111156133e55760405162461bcd60e51b815260206004820152601c60248201527f5468697320696e7370656374696f6e20646f6e2774206578697374730000000060448201526064016105d6565b600083815260196020908152604080832081516101208101909252805482526001810154919290919083019060ff166003811115613425576134256151a6565b6003811115613436576134366151a6565b815260018201546001600160a01b0361010090910481166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919060009084015b828210156134f9576000848152602090819020830180546040805182850281018501909152818152928301828280156134e557602002820191906000526020600020905b8154815260200190600101908083116134d1575b50505050508152602001906001019061348d565b505050908252506004820154602082015260058201546040820152600682015460608201526007909101546080909101529050600081602001516003811115613544576135446151a6565b14156136cc5760036020828101828152336060850152600087815260199092526040909120835181559051600180830180548695919260ff19909116918490811115613592576135926151a6565b02179055506040820151600182018054610100600160a81b0319166101006001600160a01b039384160217905560608301516002830180546001600160a01b03191691909216179055608082015180516135f691600384019160209091019061501c565b5060a0820151816004015560c0820151816005015560e082015181600601556101008201518160070155905050600360178261010001518154811061363d5761363d615d68565b906000526020600020906008020160010160006101000a81548160ff0219169083600381111561366f5761366f6151a6565b02179055503360178261010001518154811061368d5761368d615d68565b906000526020600020906008020160020160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506001925050610aec565b6000925050610aec565b60606002805480602002602001604051908101604052809291908181526020016000905b82821015610c865760008481526020908190206040805161014081018252600c86029092018054835260018101546001600160a01b03811694840194909452919290830190600160a01b900460ff16600381111561375a5761375a6151a6565b600381111561376b5761376b6151a6565b815260200160028201805461377f90615d02565b80601f01602080910402602001604051908101604052809291908181526020018280546137ab90615d02565b80156137f85780601f106137cd576101008083540402835291602001916137f8565b820191906000526020600020905b8154815290600101906020018083116137db57829003601f168201915b5050505050815260200160038201805461381190615d02565b80601f016020809104026020016040519081016040528092919081815260200182805461383d90615d02565b801561388a5780601f1061385f5761010080835404028352916020019161388a565b820191906000526020600020905b81548152906001019060200180831161386d57829003601f168201915b505050505081526020016004820180546138a390615d02565b80601f01602080910402602001604051908101604052809291908181526020018280546138cf90615d02565b801561391c5780601f106138f15761010080835404028352916020019161391c565b820191906000526020600020905b8154815290600101906020018083116138ff57829003601f168201915b505050505081526020016005820160009054906101000a900460ff1615151515815260200160068201548152602001600782015481526020016008820160405180608001604052908160008201805461397490615d02565b80601f01602080910402602001604051908101604052809291908181526020018280546139a090615d02565b80156139ed5780601f106139c2576101008083540402835291602001916139ed565b820191906000526020600020905b8154815290600101906020018083116139d057829003601f168201915b50505050508152602001600182018054613a0690615d02565b80601f0160208091040260200160405190810160405280929190818152602001828054613a3290615d02565b8015613a7f5780601f10613a5457610100808354040283529160200191613a7f565b820191906000526020600020905b815481529060010190602001808311613a6257829003601f168201915b50505050508152602001600282018054613a9890615d02565b80601f0160208091040260200160405190810160405280929190818152602001828054613ac490615d02565b8015613b115780601f10613ae657610100808354040283529160200191613b11565b820191906000526020600020905b815481529060010190602001808311613af457829003601f168201915b50505050508152602001600382018054613b2a90615d02565b80601f0160208091040260200160405190810160405280929190818152602001828054613b5690615d02565b8015613ba35780601f10613b7857610100808354040283529160200191613ba3565b820191906000526020600020905b815481529060010190602001808311613b8657829003601f168201915b50505050508152505081525050815260200190600101906136fa565b6001600160a01b038116600090815260036020526040812060020180548291829161247390615d02565b60606017805480602002602001604051908101604052809291908181526020016000905b82821015610c86578382906000526020600020906008020160405180610120016040529081600082015481526020016001820160009054906101000a900460ff166003811115613c5f57613c5f6151a6565b6003811115613c7057613c706151a6565b815260018201546001600160a01b0361010090910481166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919060009084015b82821015613d3357600084815260209081902083018054604080518285028101850190915281815292830182828015613d1f57602002820191906000526020600020905b815481526020019060010190808311613d0b575b505050505081526020019060010190613cc7565b50505050815260200160048201548152602001600582015481526020016006820154815260200160078201548152505081526020019060010190613c0d565b60088054600954600a805492936001600160a01b0390921692613d9490615d02565b80601f0160208091040260200160405190810160405280929190818152602001828054613dc090615d02565b8015613e0d5780601f10613de257610100808354040283529160200191613e0d565b820191906000526020600020905b815481529060010190602001808311613df057829003601f168201915b505050505090806003018054613e2290615d02565b80601f0160208091040260200160405190810160405280929190818152602001828054613e4e90615d02565b8015613e9b5780601f10613e7057610100808354040283529160200191613e9b565b820191906000526020600020905b815481529060010190602001808311613e7e57829003601f168201915b505050505090806004018054613eb090615d02565b80601f0160208091040260200160405190810160405280929190818152602001828054613edc90615d02565b8015613f295780601f10613efe57610100808354040283529160200191613f29565b820191906000526020600020905b815481529060010190602001808311613f0c57829003601f168201915b505050505090806005018054613f3e90615d02565b80601f0160208091040260200160405190810160405280929190818152602001828054613f6a90615d02565b8015613fb75780601f10613f8c57610100808354040283529160200191613fb7565b820191906000526020600020905b815481529060010190602001808311613f9a57829003601f168201915b505050505090806006018054613fcc90615d02565b80601f0160208091040260200160405190810160405280929190818152602001828054613ff890615d02565b80156140455780601f1061401a57610100808354040283529160200191614045565b820191906000526020600020905b81548152906001019060200180831161402857829003601f168201915b50505050509080600701805461405a90615d02565b80601f016020809104026020016040519081016040528092919081815260200182805461408690615d02565b80156140d35780601f106140a8576101008083540402835291602001916140d3565b820191906000526020600020905b8154815290600101906020018083116140b657829003601f168201915b5050505050908060080180546140e890615d02565b80601f016020809104026020016040519081016040528092919081815260200182805461411490615d02565b80156141615780601f1061413657610100808354040283529160200191614161565b820191906000526020600020905b81548152906001019060200180831161414457829003601f168201915b50505050509080600901549080600a015490508b565b6141d960408051610120810190915260008082526020820190815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160608152602001600081526020016000815260200160008152602001600081525090565b60008281526019602090815260409182902082516101208101909352805483526001810154909183019060ff166003811115614217576142176151a6565b6003811115614228576142286151a6565b815260018201546001600160a01b0361010090910481166020808401919091526002840154909116604080840191909152600384018054825181850281018501909352808352606090940193919290919060009084015b828210156142eb576000848152602090819020830180546040805182850281018501909152818152928301828280156142d757602002820191906000526020600020905b8154815260200190600101908083116142c3575b50505050508152602001906001019061427f565b5050505081526020016004820154815260200160058201548152602001600682015481526020016007820154815250509050919050565b6143886040518061016001604052806000815260200160006001600160a01b031681526020016060815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160008152602001600081525090565b6000828152601560209081526040918290208251610160810184528154815260018201546001600160a01b03169281019290925260028101805492939192918401916143d390615d02565b80601f01602080910402602001604051908101604052809291908181526020018280546143ff90615d02565b801561444c5780601f106144215761010080835404028352916020019161444c565b820191906000526020600020905b81548152906001019060200180831161442f57829003601f168201915b5050505050815260200160038201805461446590615d02565b80601f016020809104026020016040519081016040528092919081815260200182805461449190615d02565b80156144de5780601f106144b3576101008083540402835291602001916144de565b820191906000526020600020905b8154815290600101906020018083116144c157829003601f168201915b505050505081526020016004820180546144f790615d02565b80601f016020809104026020016040519081016040528092919081815260200182805461452390615d02565b80156145705780601f1061454557610100808354040283529160200191614570565b820191906000526020600020905b81548152906001019060200180831161455357829003601f168201915b5050505050815260200160058201805461458990615d02565b80601f01602080910402602001604051908101604052809291908181526020018280546145b590615d02565b80156146025780601f106145d757610100808354040283529160200191614602565b820191906000526020600020905b8154815290600101906020018083116145e557829003601f168201915b5050505050815260200160068201805461461b90615d02565b80601f016020809104026020016040519081016040528092919081815260200182805461464790615d02565b80156146945780601f1061466957610100808354040283529160200191614694565b820191906000526020600020905b81548152906001019060200180831161467757829003601f168201915b505050505081526020016007820180546146ad90615d02565b80601f01602080910402602001604051908101604052809291908181526020018280546146d990615d02565b80156147265780601f106146fb57610100808354040283529160200191614726565b820191906000526020600020905b81548152906001019060200180831161470957829003601f168201915b5050505050815260200160088201805461473f90615d02565b80601f016020809104026020016040519081016040528092919081815260200182805461476b90615d02565b80156147b85780601f1061478d576101008083540402835291602001916147b8565b820191906000526020600020905b81548152906001019060200180831161479b57829003601f168201915b5050505050815260200160098201548152602001600a820154815250509050919050565b6001600160a01b0382166000908152602081905260409020805482919060ff19166001836003811115614811576148116151a6565b02179055506001805490600061482683615d4d565b91905055505050565b6000601a5460016148409190615d7e565b9050600061484f600183615d96565b905060606000601654426148639190615d7e565b905060006040518061012001604052808681526020016000600381111561488c5761488c6151a6565b815233602080830182905260408301919091526060820186905260006080830181905260a083018690524260c084015260e0909201879052601780546001818101835591909352835160089093027fc624b66cc0138b8fabc209247f72d758e1cf3343756d543badbf24212bed8c158101938455918401517fc624b66cc0138b8fabc209247f72d758e1cf3343756d543badbf24212bed8c1690920180549495508594909160ff199091169083600381111561494a5761494a6151a6565b02179055506040820151600182018054610100600160a81b0319166101006001600160a01b039384160217905560608301516002830180546001600160a01b03191691909216179055608082015180516149ae91600384019160209091019061501c565b5060a0820151600482015560c0820151600582015560e082015160068201556101009091015160079091015560008581526019602090815260409091208251815590820151600180830180548594939260ff1990911690836003811115614a1757614a176151a6565b02179055506040820151600182018054610100600160a81b0319166101006001600160a01b039384160217905560608301516002830180546001600160a01b0319169190921617905560808201518051614a7b91600384019160209091019061501c565b5060a0820151600482015560c0820151600582015560e0820151600682015561010090910151600790910155601a8054906000614ab783615d4d565b91905055505050505050565b608081015160009081614ad582614d74565b9050815181614ae49190615dfc565b949350505050565b600081815260196020908152604080832060018101546002909101546001600160a01b0390811680865260069485905292852060058101805460ff1916905590930180546101009092049093169391929091614b4783615d4d565b90915550506001600160a01b038216600090815260036020526040812060058101805460ff19169055600601805491614b7f83615d4d565b90915550506001600160a01b03821660009081526018602090815260408083208684526019835290832081546001818101845592855292909320835460089093020191825580830154828201805460ff90921692909160ff191690836003811115614bec57614bec6151a6565b021790555060018281015490820180546001600160a01b03610100938490048116909302610100600160a81b031990911617905560028084015490830180546001600160a01b0319169190921617905560038083018054614c509284019190615075565b506004828101549082015560058083015490820155600680830154908201556007918201549101556001600160a01b03811660009081526018602090815260408083208684526019835290832081546001818101845592855292909320835460089093020191825580830154828201805460ff90921692909160ff191690836003811115614ce057614ce06151a6565b021790555060018281015490820180546001600160a01b03610100938490048116909302610100600160a81b031990911617905560028084015490830180546001600160a01b0319169190921617905560038083018054614d449284019190615075565b50600482015481600401556005820154816005015560068201548160060155600782015481600701555050505050565b6040805160a081018252600a815260086020820152600691810191909152600460608201526002608082015260009081805b84518160ff161015614e27576000858260ff1681518110614dc957614dc9615d68565b6020026020010151600181518110614de357614de3615d68565b60200260200101519050838160058110614dff57614dff615d68565b6020020151614e119060ff1684615d7e565b9250508080614e1f90615e1e565b915050614da6565b509392505050565b60408051610120810182526000808252602082018190529091820190815260200160608152602001606081526020016060815260200160001515815260200160008152602001614ea06040518060800160405280606081526020016060815260200160608152602001606081525090565b905290565b828054614eb190615d02565b90600052602060002090601f016020900481019282614ed35760008555614f19565b82601f10614eec57805160ff1916838001178555614f19565b82800160010185558215614f19579182015b82811115614f19578251825591602001919060010190614efe565b50614f259291506150c1565b5090565b6040805161014081018252600080825260208201819052909182019081526020016060815260200160608152602001606081526020016000151581526020016000815260200160008152602001614ea06040518060800160405280606081526020016060815260200160608152602001606081525090565b828054614fad90615d02565b90600052602060002090601f016020900481019282614fcf5760008555614f19565b82601f10614fe05780548555614f19565b82800160010185558215614f1957600052602060002091601f016020900482015b82811115614f19578254825591600101919060010190615001565b828054828255906000526020600020908101928215615069579160200282015b8281111561506957825180516150599184916020909101906150d6565b509160200191906001019061503c565b50614f25929150615110565b8280548282559060005260206000209081019282156150695760005260206000209182015b828111156150695782546150b1908390859061512d565b509160010191906001019061509a565b5b80821115614f2557600081556001016150c2565b828054828255906000526020600020908101928215614f195791602002820182811115614f19578251825591602001919060010190614efe565b80821115614f25576000615124828261516c565b50600101615110565b828054828255906000526020600020908101928215614f1957600052602060002091820182811115614f19578254825591600101919060010190615001565b508054600082559060005260206000209081019061518a91906150c1565b50565b60006020828403121561519f57600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b6004811061518a57634e487b7160e01b600052602160045260246000fd5b6151e3816151bc565b9052565b600082825180855260208086019550808260051b8401018186016000805b8581101561525857868403601f19018a52825180518086529086019086860190845b8181101561524357835183529288019291880191600101615227565b50509a86019a94505091840191600101615205565b509198975050505050505050565b600061012082518452602083015161527d816151bc565b80602086015250604083015161529e60408601826001600160a01b03169052565b5060608301516152b960608601826001600160a01b03169052565b5060808301518160808601526152d1828601826151e7565b91505060a083015160a085015260c083015160c085015260e083015160e08501526101008084015181860152508091505092915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561535d57603f1988860301845261534b858351615266565b9450928501929085019060010161532f565b5092979650505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156153a9576153a961536a565b604052919050565b600082601f8301126153c257600080fd5b813567ffffffffffffffff8111156153dc576153dc61536a565b6153ef601f8201601f1916602001615380565b81815284602083860101111561540457600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600080600060e0888a03121561543c57600080fd5b873567ffffffffffffffff8082111561545457600080fd5b6154608b838c016153b1565b985060208a013591508082111561547657600080fd5b6154828b838c016153b1565b975060408a013591508082111561549857600080fd5b6154a48b838c016153b1565b965060608a01359150808211156154ba57600080fd5b6154c68b838c016153b1565b955060808a01359150808211156154dc57600080fd5b6154e88b838c016153b1565b945060a08a01359150808211156154fe57600080fd5b61550a8b838c016153b1565b935060c08a013591508082111561552057600080fd5b5061552d8a828b016153b1565b91505092959891949750929550565b6000815180845260005b8181101561556257602081850181015186830182015201615546565b81811115615574576000602083870101525b50601f01601f19169290920160200192915050565b600081516080845261559e608085018261553c565b9050602083015184820360208601526155b7828261553c565b915050604083015184820360408601526155d1828261553c565b915050606083015184820360608601526155eb828261553c565b95945050505050565b600061012082518452602083015161561760208601826001600160a01b03169052565b50604083015161562a60408601826151da565b5060608301518160608601526156428286018261553c565b9150506080830151848203608086015261565c828261553c565b91505060a083015184820360a0860152615676828261553c565b91505060c083015161568c60c086018215159052565b5060e083015160e085015261010080840151858303828701526156af8382615589565b9695505050505050565b6020815260006156cc60208301846155f4565b9392505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561535d57603f198886030184526157168583516155f4565b945092850192908501906001016156fa565b600061016082518452602083015161574b60208601826001600160a01b03169052565b5060408301518160408601526157638286018261553c565b9150506060830151848203606086015261577d828261553c565b91505060808301518482036080860152615797828261553c565b91505060a083015184820360a08601526157b1828261553c565b91505060c083015184820360c08601526157cb828261553c565b91505060e083015184820360e08601526157e5828261553c565b9150506101008084015185830382870152615800838261553c565b610120868101519088015261014095860151959096019490945250929392505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561535d57603f19888603018452615866858351615728565b9450928501929085019060010161584a565b60006020828403121561588a57600080fd5b81356001600160a01b03811681146156cc57600080fd5b6060815260006158b4606083018661553c565b82810360208401526158c6818661553c565b905082810360408401526156af818561553c565b602081016158e7836151bc565b91905290565b600061014082518452602083015161591060208601826001600160a01b03169052565b50604083015161592360408601826151da565b50606083015181606086015261593b8286018261553c565b91505060808301518482036080860152615955828261553c565b91505060a083015184820360a086015261596f828261553c565b91505060c083015161598560c086018215159052565b5060e083015160e085015261010080840151818601525061012080840151858303828701526156af8382615589565b6020815260006156cc60208301846158ed565b60a0815260006159da60a083018861553c565b82810360208401526159ec818861553c565b90508281036040840152615a00818761553c565b90508281036060840152615a14818661553c565b90508281036080840152615a28818561553c565b98975050505050505050565b600067ffffffffffffffff821115615a4e57615a4e61536a565b5060051b60200190565b6000806040808486031215615a6c57600080fd5b8335925060208085013567ffffffffffffffff80821115615a8c57600080fd5b818701915087601f830112615aa057600080fd5b8135615ab3615aae82615a34565b615380565b81815260059190911b8301840190848101908a831115615ad257600080fd5b8585015b83811015615b5e57803585811115615aee5760008081fd5b8601603f81018d13615b005760008081fd5b87810135615b10615aae82615a34565b81815260059190911b82018a0190898101908f831115615b305760008081fd5b928b01925b82841015615b4e5783358252928a0192908a0190615b35565b8652505050918601918601615ad6565b50809750505050505050509250929050565b608081526000615b83608083018761553c565b8281036020840152615b95818761553c565b90508281036040840152615ba9818661553c565b90508281036060840152615bbd818561553c565b979650505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561535d57603f19888603018452615c0b8583516158ed565b94509285019290850190600101615bef565b8b81526001600160a01b038b1660208201526000610160806040840152615c468184018d61553c565b90508281036060840152615c5a818c61553c565b90508281036080840152615c6e818b61553c565b905082810360a0840152615c82818a61553c565b905082810360c0840152615c96818961553c565b905082810360e0840152615caa818861553c565b9050828103610100840152615cbf818761553c565b610120840195909552505061014001529998505050505050505050565b6020815260006156cc6020830184615266565b6020815260006156cc6020830184615728565b600181811c90821680615d1657607f821691505b60208210811415610aec57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415615d6157615d61615d37565b5060010190565b634e487b7160e01b600052603260045260246000fd5b60008219821115615d9157615d91615d37565b500190565b600082821015615da857615da8615d37565b500390565b6020808252602f908201527f596f75206d75737420626520616e2061637469766973742120506c656173652060408201526e7265676973746572206173206f6e6560881b606082015260800190565b600082615e1957634e487b7160e01b600052601260045260246000fd5b500490565b600060ff821660ff811415615e3557615e35615d37565b6001019291505056fea264697066735822122082e79bf1cfa1dbd92cef032fc9a8a61d13ebce85de307793db8255c9454840d464736f6c63430008090033",
  "immutableReferences": {},
  "sourceMap": "256:7341:2:-:0;;;440:6;414:32;;256:7341;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "256:7341:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2456:263:1;;;;;;:::i;:::-;;:::i;:::-;;;460:14:13;;453:22;435:41;;423:2;408:18;2456:263:1;;;;;;;;701:26:0;;;;;;;;;633:25:13;;;621:2;606:18;701:26:0;487:177:13;1044:127:2;;;:::i;:::-;;;;;;;:::i;1165:862:0:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2135:103::-;;;:::i;:::-;;;;;;;:::i;943:105:1:-;;;:::i;:::-;;;;;;;:::i;2347:113:0:-;;;;;;:::i;:::-;;:::i;977:153:8:-;1077:45;;;;;;;;;;;;-1:-1:-1;;;1077:45:8;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1077:45:8;;;;;;;;;;;;;;-1:-1:-1;;;1077:45:8;;;;;;;977:153;;;;1077:45;977:153;:::i;351:22::-;;;;;;804:98;;;;;;:::i;:::-;-1:-1:-1;;;;;883:11:8;855:8;883:11;;;;;;;;;;;;;;804:98;;;;;;;;:::i;735:26:1:-;;;;;;1261:497:2;;;:::i;2599:159:0:-;;;;;;:::i;:::-;;:::i;1243:870:4:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1555:736:1:-;;;;;;:::i;:::-;;:::i;2437:122:4:-;;;;;;:::i;:::-;;:::i;2990:250:1:-;3115:117;;;;;;;;;;;;-1:-1:-1;;;3115:117:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3115:117:1;;;;;;;;;;;;;;-1:-1:-1;;;3115:117:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2990:250;;;;3115:117;;;2990:250;:::i;4325:974:2:-;;;;;;:::i;:::-;;:::i;5811:182::-;5934:51;;;;;;;;;;;-1:-1:-1;;;5934:51:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5934:51:2;;;;;;;;;;;;;;-1:-1:-1;;;5934:51:2;;;;;;;;;;;;;;-1:-1:-1;;;5934:51:2;;;;;;;5811:182;;;;5934:51;;;5811:182;:::i;804:26:4:-;;;;;;2423:766:2;;;;;;:::i;:::-;;:::i;2221:103:4:-;;;:::i;:::-;;;;;;;:::i;2698:159::-;;;;;;:::i;:::-;;:::i;5624:110:2:-;;;:::i;704:24:1:-;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;5435:115:2:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2819:107:1:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;6147:113:2:-;;;;;;:::i;:::-;6205:4;6229:15;;;:11;:15;;;;;:18;6251:1;-1:-1:-1;6229:23:2;;6147:113;2456:263:1;2518:4;2498:2;3318:60;;;;;;;;;;;3417:1;3397:14;;;:10;:14;;;;;:17;3389:60;;;;-1:-1:-1;;;3389:60:1;;22588:2:13;3389:60:1;;;22570:21:13;22627:2;22607:18;;;22600:30;22666:28;22646:18;;;22639:56;22712:18;;3389:60:1;22386:350:13;3389:60:1;2535:29:::1;2567:14:::0;;;:10:::1;:14;::::0;;;;;;;2535:46;;::::1;::::0;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;2535:46:1::1;::::0;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;2567:14;;2535:46;;;::::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;2535:46:1;;;-1:-1:-1;;2535:46:1::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;;;;;;-1:-1:-1;2592:14:1;;;:10:::1;:14:::0;;;;;;:25:::1;:27:::0;;2535:46;;-1:-1:-1;2592:25:1;:27:::1;::::0;::::1;:::i;:::-;;;;;;2630:15;2646:13;:19;;;2630:36;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;:47:::1;:36;::::0;;::::1;;:47;:49:::0;;;::::1;::::0;::::1;:::i;:::-;;;;;;2707:4;2700:11;;;3470:1;2456:263:::0;;;;:::o;1044:127:2:-;1152:10;1136:27;;;;:15;:27;;;;;;;;1129:34;;;;;;;;;;;;;;;;;1097:19;;1129:34;;1136:27;;1129:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1129:34:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1129:34:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1044:127;:::o;1165:862:0:-;1427:15;;:::i;:::-;1470:7;1480:14;;1497:1;1480:18;;;;:::i;:::-;1620:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1704:91;;;;;;;;;;1717:10;1704:91;;;;;;;1470:28;;-1:-1:-1;1533:17:0;;1620:42;;1513:17;;1704:91;;;1533:17;1704:91;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1704:91:0;;;;;;;;;;;;;;;;;;;1824:14;:29;;1704:91;1824:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1824:29:0;;;-1:-1:-1;;;;;;1824:29:0;;;;;;;;;;1677:118;;-1:-1:-1;1677:118:0;;1824:29;;;-1:-1:-1;;;;;;1824:29:0;;;;-1:-1:-1;;;1824:29:0;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;1824:29:0;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1824:29:0;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1824:29:0;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1824:29:0;;;;;;;;;-1:-1:-1;;1824:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1824:29:0;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1824:29:0;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1824:29:0;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;1878:10:0;1868:21;;;;:9;:21;;;;;;;;;:32;;;;;;;;;;;;;-1:-1:-1;;;;;;1868:32:0;;-1:-1:-1;;;;;1868:32:0;;;;;;;;;;;;;;-1:-1:-1;1868:21:0;;-1:-1:-1;1868:32:0;;-1:-1:-1;1868:32:0;;-1:-1:-1;;;;;;1868:32:0;;-1:-1:-1;;;1868:32:0;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;1868:32:0;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1868:32:0;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1868:32:0;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1868:32:0;;;;;;;;;-1:-1:-1;;1868:32:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1868:32:0;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1868:32:0;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1868:32:0;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;1915:14:0;:16;;;-1:-1:-1;1915:14:0;-1:-1:-1;1915:14:0;;-1:-1:-1;1915:16:0;;;:::i;:::-;;;;;;1946:29;1954:10;1966:8;1946:7;:29::i;:::-;2011:8;1165:862;-1:-1:-1;;;;;;;;;;;1165:862:0:o;2135:103::-;2179:17;2216:14;2209:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2209:21:0;;;;;;;;;;;;;;;-1:-1:-1;;;2209:21:0;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2209:21:0;;;-1:-1:-1;;2209:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;943:105:1;988:17;1025:15;1018:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1018:22:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2347:113:0;2402:15;;:::i;:::-;-1:-1:-1;;;;;2437:15:0;;;;;;;:9;:15;;;;;;;;;2430:22;;;;;;;;;;;;;;;;;;;;;;;;;;;2437:15;;2430:22;;;-1:-1:-1;;;2430:22:0;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2430:22:0;;;-1:-1:-1;;2430:22:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2430:22:0;;;;-1:-1:-1;;;2430:22:0;;-1:-1:-1;2430:22:0;2347:113;-1:-1:-1;;2347:113:0:o;1261:497:2:-;1305:4;1330:26;1345:10;1330:14;:26::i;:::-;1322:85;;;;-1:-1:-1;;;1322:85:2;;23865:2:13;1322:85:2;;;23847:21:13;23904:2;23884:18;;;23877:30;23943:34;23923:18;;;23916:62;-1:-1:-1;;;23994:18:13;;;23987:44;24048:19;;1322:85:2;23663:410:13;1322:85:2;1455:10;1418:24;1445:21;;;:9;:21;;;;;;;;1418:48;;;;;;;;;;;;;;;-1:-1:-1;;;;;1418:48:2;;;;;;;;;;1445:21;;1418:48;;;;-1:-1:-1;;;1418:48:2;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1418:48:2;;;;-1:-1:-1;;;1418:48:2;;-1:-1:-1;1485:25:2;;;;1418:48;;-1:-1:-1;1485:34:2;1477:149;;;;-1:-1:-1;;;1477:149:2;;24280:2:13;1477:149:2;;;24262:21:13;24319:3;24299:18;;;24292:31;24359:34;24339:18;;;24332:62;24430:34;24410:18;;;24403:62;24502:34;24481:19;;;24474:63;-1:-1:-1;;;24553:19:13;;;24546:37;24600:19;;1477:149:2;24078:547:13;1477:149:2;1647:15;:13;:15::i;:::-;-1:-1:-1;;1683:10:2;1673:21;;;;:9;:21;;;;;:38;;:45;;-1:-1:-1;;1673:45:2;1714:4;1673:45;;;;;;1714:4;1261:497::o;2599:159:0:-;-1:-1:-1;;;;;2694:15:0;;2657:4;2694:15;;;:9;:15;;;;;:20;;2688:34;;2657:4;;;;2688:34;;;:::i;:::-;:38;;;;;2599:159;-1:-1:-1;;;;2599:159:0:o;1243:870:4:-;1505:15;;:::i;:::-;1551:7;1561:14;;1578:1;1561:18;;;;:::i;:::-;1702:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1786:95;;;;;;;;;;1799:10;1786:95;;;;;;;1551:28;;-1:-1:-1;1614:17:4;;1702:42;;1594:17;;1786:95;;;1614:17;1786:95;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1786:95:4;;;;;;;;;;;;;;;;;;;;;;;;;1910:14;:29;;1786:95;1910:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1910:29:4;;;-1:-1:-1;;;;;;1910:29:4;;;;;;;;;;1759:122;;-1:-1:-1;1759:122:4;;1910:29;;;-1:-1:-1;;;;;;1910:29:4;;;;-1:-1:-1;;;1910:29:4;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;1910:29:4;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1910:29:4;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1910:29:4;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1910:29:4;;;;;;;;;-1:-1:-1;;1910:29:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1910:29:4;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1910:29:4;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1910:29:4;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;1964:10:4;1954:21;;;;:9;:21;;;;;;;;;:32;;;;;;;;;;;;;-1:-1:-1;;;;;;1954:32:4;;-1:-1:-1;;;;;1954:32:4;;;;;;;;;;;;;;-1:-1:-1;1954:21:4;;-1:-1:-1;1954:32:4;;-1:-1:-1;1954:32:4;;-1:-1:-1;;;;;;1954:32:4;;;-1:-1:-1;;;1954:32:4;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;1954:32:4;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1954:32:4;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1954:32:4;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1954:32:4;;;;;;;;;-1:-1:-1;;1954:32:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1954:32:4;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1954:32:4;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1954:32:4;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;2001:14:4;:16;;;-1:-1:-1;2001:14:4;-1:-1:-1;2001:14:4;;-1:-1:-1;2001:16:4;;;:::i;1555:736:1:-;1876:4;1893:10;1906:14;;1923:1;1906:18;;;;:::i;:::-;1893:31;-1:-1:-1;1935:10:1;1948:6;1953:1;1893:31;1948:6;:::i;:::-;1986:151;;;;;;;;;;;1999:10;1986:151;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1986:151:1;;;;;;;;;;1975:8;:162;;;;;;-1:-1:-1;;;;;;1975:162:1;;;;;;;;;1935:19;;-1:-1:-1;1986:151:1;;1975:8;;:162;;;;;;;;:::i;:::-;-1:-1:-1;1975:162:1;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1975:162:1;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1975:162:1;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1975:162:1;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1975:162:1;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1975:162:1;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1975:162:1;;;;;;;;;;;;;;;;;;;;;;2158:15;:30;;;;;;;-1:-1:-1;2158:30:1;;;;2179:8;2158:30;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2158:30:1;-1:-1:-1;;;;;2158:30:1;;;;;;;;;;;2179:8;;2158:30;;;;;;;1975:162;2158:30;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;-1:-1:-1;2158:30:1;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2199:14:1;;;:10;:14;;;;;2216:8;2199:25;;;;;;;;;;;-1:-1:-1;;;;;;2199:25:1;-1:-1:-1;;;;;2199:25:1;;;;;;;;;;;2216:8;;2199:14;;:25;;;;2158:30;2199:25;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;-1:-1:-1;2199:25:1;;;;;;;;;;;;;;;;;2235:14;:16;;;-1:-1:-1;2235:16:1;;;:::i;:::-;;;;-1:-1:-1;2279:4:1;;1555:736;-1:-1:-1;;;;;;;;;;;1555:736:1:o;2437:122:4:-;2492:24;;:::i;:::-;-1:-1:-1;;;;;2536:15:4;;;;;;;:9;:15;;;;;;;;;2529:22;;;;;;;;;;;;;;;;;;;;;;;;;;;2536:15;;2529:22;;;-1:-1:-1;;;2529:22:4;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4325:974:2:-;4462:4;7324:26;7339:10;7324:14;:26::i;:::-;7316:86;;;;-1:-1:-1;;;7316:86:2;;;;;;;:::i;:::-;6205:4;6229:15;;;:11;:15;;;;;:18;4440:12;;6251:1;-1:-1:-1;6229:23:2;7497:71:::1;;;::::0;-1:-1:-1;;;7497:71:2;;25378:2:13;7497:71:2::1;::::0;::::1;25360:21:13::0;25417:2;25397:18;;;25390:30;25456;25436:18;;;25429:58;25504:18;;7497:71:2::1;25176:352:13::0;7497:71:2::1;4519:25:::2;4483;::::0;;;:11:::2;:25;::::0;;;;:32:::2;;::::0;::::2;;:61;::::0;::::2;;;;;;:::i;:::-;;4479:79;;4553:5;4546:12;;;;4479:79;4573:25;::::0;;;:11:::2;:25;::::0;;;;:40:::2;;::::0;-1:-1:-1;;;;;4573:40:2::2;4617:10;4573:54;4569:72;;4636:5;4629:12;;;;4569:72;4731:25;::::0;;;:11:::2;:25;::::0;;;;;;;:37;;::::2;::::0;:30:::2;::::0;;::::2;::::0;:37;::::2;::::0;::::2;:::i;:::-;-1:-1:-1::0;4779:25:2::2;::::0;;;:11:::2;:25;::::0;;;;;;;:32:::2;::::0;::::2;:61:::0;;4814:26:::2;-1:-1:-1::0;;4779:61:2;;::::2;::::0;::::2;::::0;;;;4890:39;;::::2;::::0;::::2;::::0;;;;;;;;::::2;::::0;;;::::2;::::0;;::::2;-1:-1:-1::0;;;;;4890:39:2;;::::2;::::0;;;;;;::::2;::::0;::::2;::::0;;;;::::2;::::0;::::2;::::0;;;;;;::::2;::::0;;;;;;;;;;::::2;::::0;;;4779:25;;4890:39;;;;;;4779:25;4890:39;::::2;;;;;;;;;::::0;;;::::2;::::0;;;;;::::2;::::0;;::::2;::::0;;;;::::2;::::0;;;;;;;;;;;;::::2;::::0;;;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;:12;:39::i;:::-;4851:25;::::0;;;:11:::2;:25;::::0;;;;:36:::2;;:78:::0;4940:36:::2;4863:12:::0;4940:22:::2;:36::i;:::-;5006:25;::::0;;;:11:::2;:25;::::0;;;;:31:::2;;::::0;4989:16:::2;:49:::0;;5046:4;;5006:31;4989:49;::::2;;;;;:::i;:::-;;;;;;;;;;;:54;;:61;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;5137:25:2::2;::::0;;;:11:::2;:25;::::0;;;;;;;;5124:39;;::::2;::::0;::::2;::::0;;;;;;;::::2;::::0;::::2;::::0;::::2;::::0;;;::::2;::::0;::::2;;;::::0;::::2;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;::::0;;::::2;::::0;::::2;::::0;-1:-1:-1;;;;;5124:39:2::2;::::0;;::::2;::::0;::::2;;::::0;;::::2;::::0;;;;::::2;::::0;::::2;::::0;;;::::2;::::0;;;;;;;;::::2;::::0;::::2;::::0;;;;;;::::2;::::0;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5124:39:2;::::2;;;;;;;;;::::0;;;::::2;::::0;;;;;::::2;::::0;;::::2;::::0;;;;::::2;::::0;;;;;;;;;;;;::::2;::::0;;;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5078:25;::::0;;;:11:::2;:25;::::0;;;;:31:::2;;::::0;5061:16:::2;:49:::0;;:16;;5078:31;5061:49;::::2;;;;;:::i;:::-;;;;;;;;;;;:60;;:102;;;;5233:26;5174:16;5191:11;:25;5203:12;5191:25;;;;;;;;;;;:31;;;5174:49;;;;;;;;:::i;:::-;;;;;;;;;;;:56;;;:85;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;5287:4;5280:11;;7579:1;7413::::1;4325:974:::0;;;;:::o;2423:766::-;2537:4;7324:26;7339:10;7324:14;:26::i;:::-;7316:86;;;;-1:-1:-1;;;7316:86:2;;;;;;;:::i;:::-;6205:4;6229:15;;;:11;:15;;;;;:18;2515:12;;6251:1;-1:-1:-1;6229:23:2;7497:71:::1;;;::::0;-1:-1:-1;;;7497:71:2;;25378:2:13;7497:71:2::1;::::0;::::1;25360:21:13::0;25417:2;25397:18;;;25390:30;25456;25436:18;;;25429:58;25504:18;;7497:71:2::1;25176:352:13::0;7497:71:2::1;2554:28:::2;2585:25:::0;;;:11:::2;:25;::::0;;;;;;;2554:56;;::::2;::::0;::::2;::::0;;;;;;;::::2;::::0;::::2;::::0;;;2585:25;;2554:56;;::::2;::::0;::::2;;;::::0;::::2;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;::::0;;::::2;::::0;::::2;::::0;-1:-1:-1;;;;;2554:56:2::2;::::0;;::::2;::::0;::::2;;::::0;;::::2;::::0;;;;::::2;::::0;::::2;::::0;;;::::2;::::0;;;;;;;;::::2;::::0;::::2;::::0;;;;;;::::2;::::0;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2554:56:2;::::2;;;;;;;;;::::0;;;::::2;::::0;;;;;::::2;::::0;;::::2;::::0;;;;::::2;::::0;;;;;;;;;;;;::::2;::::0;;;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;2554:56:2;;;-1:-1:-1;2554:56:2::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;;;;::::2;::::0;::::2;::::0;;;;;::::2;::::0;;::::2;::::0;;;;;;;-1:-1:-1;;2625:10:2::2;:17;;;:42;;;;;;;;:::i;:::-;;2621:561;;;2750:25;2730:17;::::0;;::::2;:45:::0;;;2818:10:::2;2790:25;::::0;::::2;:38:::0;-1:-1:-1;2843:25:2;;;:11:::2;:25:::0;;;;;;;:38;;;;;;::::2;::::0;;::::2;::::0;;2730:17;;2843:38;;-1:-1:-1;;2843:38:2;;::::2;::::0;;;;::::2;;;;;;:::i;:::-;;;::::0;;-1:-1:-1;2843:38:2::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;-1:-1:-1;;;;;;2843:38:2::2;;-1:-1:-1::0;;;;;2843:38:2;;::::2;;;::::0;;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;-1:-1:-1;;;;;;2843:38:2::2;::::0;;;::::2;;::::0;;::::2;::::0;::::2;::::0;;;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2986:25;2942:16;2959:10;:16;;;2942:34;;;;;;;;:::i;:::-;;;;;;;;;;;:41;;;:69;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;3078:10;3026:16;3043:10;:16;;;3026:34;;;;;;;;:::i;:::-;;;;;;;;;;;:49;;;:62;;;;;-1:-1:-1::0;;;;;3026:62:2::2;;;;;-1:-1:-1::0;;;;;3026:62:2::2;;;;;;3112:4;3105:11;;;;;2621:561;3165:5;3158:12;;;;;2221:103:4::0;2265:17;2302:14;2295:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2295:21:4;;;;;;;;;;;;;;;-1:-1:-1;;;2295:21:4;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2698:159;-1:-1:-1;;;;;2793:15:4;;2756:4;2793:15;;;:9;:15;;;;;:20;;2787:34;;2756:4;;;;2787:34;;;:::i;5624:110:2:-;5671:19;5710:16;5703:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5703:23:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5703:23:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;704:24:1;;;;;;;;;;;-1:-1:-1;;;;;704:24:1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5435:115:2:-;5490:17;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5490:17:2;5527:15;;;;:11;:15;;;;;;;;;5520:22;;;;;;;;;;;;;;;;5527:15;;5520:22;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5520:22:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5520:22:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5435:115;;;:::o;2819:107:1:-;2869:15;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2869:15:1;2904:14;;;;:10;:14;;;;;;;;;2897:21;;;;;;;;;;;;;;;-1:-1:-1;;;;;2897:21:1;;;;;;;;;;;;;;;2904:14;;2897:21;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2819:107;;;:::o;537:123:8:-;-1:-1:-1;;;;;607:11:8;;:5;:11;;;;;;;;;;:22;;621:8;;607:11;-1:-1:-1;;607:22:8;;621:8;607:22;;;;;;;;:::i;:::-;;;;;-1:-1:-1;640:10:8;:12;;;:10;:12;;;:::i;:::-;;;;;;537:123;;:::o;1778:468:2:-;1822:7;1832:16;;1851:1;1832:20;;;;:::i;:::-;1822:30;-1:-1:-1;1863:10:2;1876:6;1881:1;1822:30;1876:6;:::i;:::-;1863:19;;1893:20;1924:14;1959:18;;1941:15;:36;;;;:::i;:::-;1924:53;;1988:28;2019:107;;;;;;;;2030:2;2019:107;;;;2034:21;2019:107;;;;;;;;:::i;:::-;;;2057:10;2019:107;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2019:107:2;;;;;;;;;;;;2103:15;2019:107;;;;;;;;;;;2137:16;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1988:138;;-1:-1:-1;1988:138:2;;2137:33;;-1:-1:-1;;2137:33:2;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;2137:33:2;;;;;;;;;-1:-1:-1;;;;;;2137:33:2;;-1:-1:-1;;;;;2137:33:2;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2137:33:2;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2137:33:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2181:15:2;;;:11;:15;;;;;;;;:28;;;;;;;;;;;;;;2199:10;;2181:15;:28;-1:-1:-1;;2181:28:2;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;2181:28:2;;;;;;;;;-1:-1:-1;;;;;;2181:28:2;;-1:-1:-1;;;;;2181:28:2;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2181:28:2;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2181:28:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2220:16;:18;;;-1:-1:-1;2220:18:2;;;:::i;:::-;;;;;;1811:435;;;;;1778:468::o;3401:214::-;3515:15;;;;3475:4;;;3557:12;3515:15;3557:6;:12::i;:::-;3543:26;;3596:4;:11;3587:6;:20;;;;:::i;:::-;3580:27;3401:214;-1:-1:-1;;;;3401:214:2:o;6454:788::-;6525:22;6550:25;;;:11;:25;;;;;;;;:40;;;;6626;;;;;-1:-1:-1;;;;;6626:40:2;;;6770:25;;;:9;:25;;;;;;;:42;;;:50;;-1:-1:-1;;6770:50:2;;;6831:42;;;:44;;6550:40;;;;;;;;6626;;6831:44;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;6974:25:2;;7019:5;6974:25;;;:9;:25;;;;;:42;;;:50;;-1:-1:-1;;6974:50:2;;;7035:39;;:41;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;7097:31:2;;;;;;:15;:31;;;;;;;;7134:25;;;:11;:25;;;;;7097:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7097:63:2;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;7097:63:2;;;;;;;;;;-1:-1:-1;;;;;7097:63:2;;;;;;;;;;-1:-1:-1;;;;;;7097:63:2;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7097:63:2;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7097:63:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7171:31:2;;-1:-1:-1;7171:31:2;;;:15;:31;;;;;;;;7208:25;;;:11;:25;;;;;7171:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7171:63:2;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;7171:63:2;;;;;;;;;;-1:-1:-1;;;;;7171:63:2;;;;;;;;;;-1:-1:-1;;;;;;7171:63:2;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7171:63:2;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6514:728;;6454:788;:::o;3696:334::-;3773:44;;;;;;;;3802:2;3773:44;;3806:1;3773:44;;;;3809:1;3773:44;;;;;;;3812:1;3773:44;;;;3815:1;3773:44;;;;3756:4;;;;3854:143;3876:4;:11;3872:1;:15;;;3854:143;;;3909:13;3925:4;3930:1;3925:7;;;;;;;;;;:::i;:::-;;;;;;;3933:1;3925:10;;;;;;;;:::i;:::-;;;;;;;3909:26;;3960:9;3970:8;3960:19;;;;;;;:::i;:::-;;;;;3950:29;;;;;;:::i;:::-;;;3894:103;3889:3;;;;;:::i;:::-;;;;3854:143;;;-1:-1:-1;4016:6:2;3696:334;-1:-1:-1;;;3696:334:2:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;14:180:13:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:13;;14:180;-1:-1:-1;14:180:13:o;669:127::-;730:10;725:3;721:20;718:1;711:31;761:4;758:1;751:15;785:4;782:1;775:15;801:218;890:1;883:5;880:12;870:143;;935:10;930:3;926:20;923:1;916:31;970:4;967:1;960:15;998:4;995:1;988:15;1024:146;1092:45;1131:5;1092:45;:::i;:::-;1146:18;;1024:146::o;1284:1058::-;1347:3;1378;1410:5;1404:12;1437:6;1432:3;1425:19;1463:4;1492:2;1487:3;1483:12;1476:19;;1548:2;1538:6;1535:1;1531:14;1524:5;1520:26;1516:35;1585:2;1578:5;1574:14;1606:1;1627;1637:679;1653:6;1648:3;1645:15;1637:679;;;1722:16;;;-1:-1:-1;;1718:30:13;1706:43;;1772:13;;1844:9;;1866:22;;;1952:11;;;;1910:13;;;;1987:1;2001:209;2017:8;2012:3;2009:17;2001:209;;;2094:15;;2080:30;;2179:17;;;;2136:14;;;;2045:1;2036:11;2001:209;;;-1:-1:-1;;2294:12:13;;;;2231:5;-1:-1:-1;;2259:15:13;;;;1679:1;1670:11;1637:679;;;-1:-1:-1;2332:4:13;;1284:1058;-1:-1:-1;;;;;;;;1284:1058:13:o;2347:954::-;2400:3;2428:6;2461:5;2455:12;2450:3;2443:25;2514:4;2507:5;2503:16;2497:23;2529:52;2568:12;2529:52;:::i;:::-;2613:12;2606:4;2601:3;2597:14;2590:36;;2674:4;2667:5;2663:16;2657:23;2689:50;2733:4;2728:3;2724:14;2708;-1:-1:-1;;;;;1241:31:13;1229:44;;1175:104;2689:50;;2787:4;2780:5;2776:16;2770:23;2802:50;2846:4;2841:3;2837:14;2821;-1:-1:-1;;;;;1241:31:13;1229:44;;1175:104;2802:50;;2900:4;2893:5;2889:16;2883:23;2938:2;2931:4;2926:3;2922:14;2915:26;2962:68;3026:2;3021:3;3017:12;3001:14;2962:68;:::i;:::-;2950:80;;;3079:4;3072:5;3068:16;3062:23;3055:4;3050:3;3046:14;3039:47;3135:4;3128:5;3124:16;3118:23;3111:4;3106:3;3102:14;3095:47;3191:4;3184:5;3180:16;3174:23;3167:4;3162:3;3158:14;3151:47;3217:6;3270:2;3263:5;3259:14;3253:21;3248:2;3243:3;3239:12;3232:43;;3291:4;3284:11;;;2347:954;;;;:::o;3306:848::-;3502:4;3531:2;3571;3560:9;3556:18;3601:2;3590:9;3583:21;3624:6;3659;3653:13;3690:6;3682;3675:22;3728:2;3717:9;3713:18;3706:25;;3790:2;3780:6;3777:1;3773:14;3762:9;3758:30;3754:39;3740:53;;3828:2;3820:6;3816:15;3849:1;3859:266;3873:6;3870:1;3867:13;3859:266;;;3966:2;3962:7;3950:9;3942:6;3938:22;3934:36;3929:3;3922:49;3994:51;4038:6;4029;4023:13;3994:51;:::i;:::-;3984:61;-1:-1:-1;4103:12:13;;;;4068:15;;;;3895:1;3888:9;3859:266;;;-1:-1:-1;4142:6:13;;3306:848;-1:-1:-1;;;;;;;3306:848:13:o;4159:127::-;4220:10;4215:3;4211:20;4208:1;4201:31;4251:4;4248:1;4241:15;4275:4;4272:1;4265:15;4291:275;4362:2;4356:9;4427:2;4408:13;;-1:-1:-1;;4404:27:13;4392:40;;4462:18;4447:34;;4483:22;;;4444:62;4441:88;;;4509:18;;:::i;:::-;4545:2;4538:22;4291:275;;-1:-1:-1;4291:275:13:o;4571:531::-;4614:5;4667:3;4660:4;4652:6;4648:17;4644:27;4634:55;;4685:1;4682;4675:12;4634:55;4721:6;4708:20;4747:18;4743:2;4740:26;4737:52;;;4769:18;;:::i;:::-;4813:55;4856:2;4837:13;;-1:-1:-1;;4833:27:13;4862:4;4829:38;4813:55;:::i;:::-;4893:2;4884:7;4877:19;4939:3;4932:4;4927:2;4919:6;4915:15;4911:26;4908:35;4905:55;;;4956:1;4953;4946:12;4905:55;5021:2;5014:4;5006:6;5002:17;4995:4;4986:7;4982:18;4969:55;5069:1;5044:16;;;5062:4;5040:27;5033:38;;;;5048:7;4571:531;-1:-1:-1;;;4571:531:13:o;5107:1547::-;5290:6;5298;5306;5314;5322;5330;5338;5391:3;5379:9;5370:7;5366:23;5362:33;5359:53;;;5408:1;5405;5398:12;5359:53;5448:9;5435:23;5477:18;5518:2;5510:6;5507:14;5504:34;;;5534:1;5531;5524:12;5504:34;5557:50;5599:7;5590:6;5579:9;5575:22;5557:50;:::i;:::-;5547:60;;5660:2;5649:9;5645:18;5632:32;5616:48;;5689:2;5679:8;5676:16;5673:36;;;5705:1;5702;5695:12;5673:36;5728:52;5772:7;5761:8;5750:9;5746:24;5728:52;:::i;:::-;5718:62;;5833:2;5822:9;5818:18;5805:32;5789:48;;5862:2;5852:8;5849:16;5846:36;;;5878:1;5875;5868:12;5846:36;5901:52;5945:7;5934:8;5923:9;5919:24;5901:52;:::i;:::-;5891:62;;6006:2;5995:9;5991:18;5978:32;5962:48;;6035:2;6025:8;6022:16;6019:36;;;6051:1;6048;6041:12;6019:36;6074:52;6118:7;6107:8;6096:9;6092:24;6074:52;:::i;:::-;6064:62;;6179:3;6168:9;6164:19;6151:33;6135:49;;6209:2;6199:8;6196:16;6193:36;;;6225:1;6222;6215:12;6193:36;6248:52;6292:7;6281:8;6270:9;6266:24;6248:52;:::i;:::-;6238:62;;6353:3;6342:9;6338:19;6325:33;6309:49;;6383:2;6373:8;6370:16;6367:36;;;6399:1;6396;6389:12;6367:36;6422:52;6466:7;6455:8;6444:9;6440:24;6422:52;:::i;:::-;6412:62;;6527:3;6516:9;6512:19;6499:33;6483:49;;6557:2;6547:8;6544:16;6541:36;;;6573:1;6570;6563:12;6541:36;;6596:52;6640:7;6629:8;6618:9;6614:24;6596:52;:::i;:::-;6586:62;;;5107:1547;;;;;;;;;;:::o;6659:472::-;6701:3;6739:5;6733:12;6766:6;6761:3;6754:19;6791:1;6801:162;6815:6;6812:1;6809:13;6801:162;;;6877:4;6933:13;;;6929:22;;6923:29;6905:11;;;6901:20;;6894:59;6830:12;6801:162;;;6981:6;6978:1;6975:13;6972:87;;;7047:1;7040:4;7031:6;7026:3;7022:16;7018:27;7011:38;6972:87;-1:-1:-1;7113:2:13;7092:15;-1:-1:-1;;7088:29:13;7079:39;;;;7120:4;7075:50;;6659:472;-1:-1:-1;;6659:472:13:o;7136:698::-;7194:3;7238:5;7232:12;7265:4;7260:3;7253:17;7291:47;7332:4;7327:3;7323:14;7309:12;7291:47;:::i;:::-;7279:59;;7386:4;7379:5;7375:16;7369:23;7434:3;7428:4;7424:14;7417:4;7412:3;7408:14;7401:38;7462:39;7496:4;7480:14;7462:39;:::i;:::-;7448:53;;;7549:4;7542:5;7538:16;7532:23;7599:3;7591:6;7587:16;7580:4;7575:3;7571:14;7564:40;7627:41;7661:6;7645:14;7627:41;:::i;:::-;7613:55;;;7716:4;7709:5;7705:16;7699:23;7766:3;7758:6;7754:16;7747:4;7742:3;7738:14;7731:40;7787:41;7821:6;7805:14;7787:41;:::i;:::-;7780:48;7136:698;-1:-1:-1;;;;;7136:698:13:o;7839:1211::-;7890:3;7918:6;7951:5;7945:12;7940:3;7933:25;8004:4;7997:5;7993:16;7987:23;8019:48;8061:4;8056:3;8052:14;8038:12;-1:-1:-1;;;;;1241:31:13;1229:44;;1175:104;8019:48;;8115:4;8108:5;8104:16;8098:23;8130:64;8188:4;8183:3;8179:14;8163;8130:64;:::i;:::-;;8242:4;8235:5;8231:16;8225:23;8280:2;8273:4;8268:3;8264:14;8257:26;8304:47;8347:2;8342:3;8338:12;8322:14;8304:47;:::i;:::-;8292:59;;;8399:4;8392:5;8388:16;8382:23;8447:3;8441:4;8437:14;8430:4;8425:3;8421:14;8414:38;8475:39;8509:4;8493:14;8475:39;:::i;:::-;8461:53;;;8562:4;8555:5;8551:16;8545:23;8612:3;8604:6;8600:16;8593:4;8588:3;8584:14;8577:40;8640:41;8674:6;8658:14;8640:41;:::i;:::-;8626:55;;;8729:4;8722:5;8718:16;8712:23;8744:47;8785:4;8780:3;8776:14;8760;269:13;262:21;250:34;;199:91;8744:47;;8840:4;8833:5;8829:16;8823:23;8816:4;8811:3;8807:14;8800:47;8866:6;8920:2;8913:5;8909:14;8903:21;8966:3;8958:6;8954:16;8949:2;8944:3;8940:12;8933:38;8987:57;9037:6;9021:14;8987:57;:::i;:::-;8980:64;7839:1211;-1:-1:-1;;;;;;7839:1211:13:o;9055:257::-;9232:2;9221:9;9214:21;9195:4;9252:54;9302:2;9291:9;9287:18;9279:6;9252:54;:::i;:::-;9244:62;9055:257;-1:-1:-1;;;9055:257:13:o;9317:840::-;9507:4;9536:2;9576;9565:9;9561:18;9606:2;9595:9;9588:21;9629:6;9664;9658:13;9695:6;9687;9680:22;9733:2;9722:9;9718:18;9711:25;;9795:2;9785:6;9782:1;9778:14;9767:9;9763:30;9759:39;9745:53;;9833:2;9825:6;9821:15;9854:1;9864:264;9878:6;9875:1;9872:13;9864:264;;;9971:2;9967:7;9955:9;9947:6;9943:22;9939:36;9934:3;9927:49;9999;10041:6;10032;10026:13;9999:49;:::i;:::-;9989:59;-1:-1:-1;10106:12:13;;;;10071:15;;;;9900:1;9893:9;9864:264;;10162:1586;10213:3;10241:6;10274:5;10268:12;10263:3;10256:25;10327:4;10320:5;10316:16;10310:23;10342:48;10384:4;10379:3;10375:14;10361:12;-1:-1:-1;;;;;1241:31:13;1229:44;;1175:104;10342:48;;10438:4;10431:5;10427:16;10421:23;10476:2;10469:4;10464:3;10460:14;10453:26;10500:47;10543:2;10538:3;10534:12;10518:14;10500:47;:::i;:::-;10488:59;;;10595:4;10588:5;10584:16;10578:23;10643:3;10637:4;10633:14;10626:4;10621:3;10617:14;10610:38;10671:39;10705:4;10689:14;10671:39;:::i;:::-;10657:53;;;10758:4;10751:5;10747:16;10741:23;10808:3;10800:6;10796:16;10789:4;10784:3;10780:14;10773:40;10836:41;10870:6;10854:14;10836:41;:::i;:::-;10822:55;;;10925:4;10918:5;10914:16;10908:23;10975:3;10967:6;10963:16;10956:4;10951:3;10947:14;10940:40;11003:41;11037:6;11021:14;11003:41;:::i;:::-;10989:55;;;11092:4;11085:5;11081:16;11075:23;11142:3;11134:6;11130:16;11123:4;11118:3;11114:14;11107:40;11170:41;11204:6;11188:14;11170:41;:::i;:::-;11156:55;;;11259:4;11252:5;11248:16;11242:23;11309:3;11301:6;11297:16;11290:4;11285:3;11281:14;11274:40;11337:41;11371:6;11355:14;11337:41;:::i;:::-;11323:55;;;11397:6;11451:2;11444:5;11440:14;11434:21;11497:3;11489:6;11485:16;11480:2;11475:3;11471:12;11464:38;11525:41;11559:6;11543:14;11525:41;:::i;:::-;11585:6;11627:14;;;11621:21;11607:12;;;11600:43;11662:6;11704:14;;;11698:21;11684:12;;;;11677:43;;;;-1:-1:-1;11511:55:13;;10162:1586;-1:-1:-1;;;10162:1586:13:o;11753:842::-;11945:4;11974:2;12014;12003:9;11999:18;12044:2;12033:9;12026:21;12067:6;12102;12096:13;12133:6;12125;12118:22;12171:2;12160:9;12156:18;12149:25;;12233:2;12223:6;12220:1;12216:14;12205:9;12201:30;12197:39;12183:53;;12271:2;12263:6;12259:15;12292:1;12302:264;12316:6;12313:1;12310:13;12302:264;;;12409:2;12405:7;12393:9;12385:6;12381:22;12377:36;12372:3;12365:49;12437;12479:6;12470;12464:13;12437:49;:::i;:::-;12427:59;-1:-1:-1;12544:12:13;;;;12509:15;;;;12338:1;12331:9;12302:264;;12600:286;12659:6;12712:2;12700:9;12691:7;12687:23;12683:32;12680:52;;;12728:1;12725;12718:12;12680:52;12754:23;;-1:-1:-1;;;;;12806:31:13;;12796:42;;12786:70;;12852:1;12849;12842:12;12891:546;13136:2;13125:9;13118:21;13099:4;13162:45;13203:2;13192:9;13188:18;13180:6;13162:45;:::i;:::-;13255:9;13247:6;13243:22;13238:2;13227:9;13223:18;13216:50;13289:33;13315:6;13307;13289:33;:::i;:::-;13275:47;;13370:9;13362:6;13358:22;13353:2;13342:9;13338:18;13331:50;13398:33;13424:6;13416;13398:33;:::i;13442:243::-;13587:2;13572:18;;13599:46;13638:6;13599:46;:::i;:::-;13654:25;;;13442:243;:::o;13690:1288::-;13741:3;13769:6;13802:5;13796:12;13791:3;13784:25;13855:4;13848:5;13844:16;13838:23;13870:48;13912:4;13907:3;13903:14;13889:12;-1:-1:-1;;;;;1241:31:13;1229:44;;1175:104;13870:48;;13966:4;13959:5;13955:16;13949:23;13981:64;14039:4;14034:3;14030:14;14014;13981:64;:::i;:::-;;14093:4;14086:5;14082:16;14076:23;14131:2;14124:4;14119:3;14115:14;14108:26;14155:47;14198:2;14193:3;14189:12;14173:14;14155:47;:::i;:::-;14143:59;;;14250:4;14243:5;14239:16;14233:23;14298:3;14292:4;14288:14;14281:4;14276:3;14272:14;14265:38;14326:39;14360:4;14344:14;14326:39;:::i;:::-;14312:53;;;14413:4;14406:5;14402:16;14396:23;14463:3;14455:6;14451:16;14444:4;14439:3;14435:14;14428:40;14491:41;14525:6;14509:14;14491:41;:::i;:::-;14477:55;;;14580:4;14573:5;14569:16;14563:23;14595:47;14636:4;14631:3;14627:14;14611;269:13;262:21;250:34;;199:91;14595:47;;14691:4;14684:5;14680:16;14674:23;14667:4;14662:3;14658:14;14651:47;14717:6;14770:2;14763:5;14759:14;14753:21;14748:2;14743:3;14739:12;14732:43;;14794:6;14848:2;14841:5;14837:14;14831:21;14894:3;14886:6;14882:16;14877:2;14872:3;14868:12;14861:38;14915:57;14965:6;14949:14;14915:57;:::i;14983:261::-;15164:2;15153:9;15146:21;15127:4;15184:54;15234:2;15223:9;15219:18;15211:6;15184:54;:::i;15249:875::-;15590:3;15579:9;15572:22;15553:4;15617:46;15658:3;15647:9;15643:19;15635:6;15617:46;:::i;:::-;15711:9;15703:6;15699:22;15694:2;15683:9;15679:18;15672:50;15745:33;15771:6;15763;15745:33;:::i;:::-;15731:47;;15826:9;15818:6;15814:22;15809:2;15798:9;15794:18;15787:50;15860:33;15886:6;15878;15860:33;:::i;:::-;15846:47;;15941:9;15933:6;15929:22;15924:2;15913:9;15909:18;15902:50;15975:33;16001:6;15993;15975:33;:::i;:::-;15961:47;;16057:9;16049:6;16045:22;16039:3;16028:9;16024:19;16017:51;16085:33;16111:6;16103;16085:33;:::i;:::-;16077:41;15249:875;-1:-1:-1;;;;;;;;15249:875:13:o;16129:193::-;16199:4;16232:18;16224:6;16221:30;16218:56;;;16254:18;;:::i;:::-;-1:-1:-1;16299:1:13;16295:14;16311:4;16291:25;;16129:193::o;16327:2023::-;16445:6;16453;16484:2;16527;16515:9;16506:7;16502:23;16498:32;16495:52;;;16543:1;16540;16533:12;16495:52;16579:9;16566:23;16556:33;;16608:2;16661;16650:9;16646:18;16633:32;16684:18;16725:2;16717:6;16714:14;16711:34;;;16741:1;16738;16731:12;16711:34;16779:6;16768:9;16764:22;16754:32;;16824:7;16817:4;16813:2;16809:13;16805:27;16795:55;;16846:1;16843;16836:12;16795:55;16882:2;16869:16;16905:70;16921:53;16971:2;16921:53;:::i;:::-;16905:70;:::i;:::-;17009:15;;;17091:1;17087:10;;;;17079:19;;17075:28;;;17040:12;;;;17115:19;;;17112:39;;;17147:1;17144;17137:12;17112:39;17179:2;17175;17171:11;17191:1129;17207:6;17202:3;17199:15;17191:1129;;;17293:3;17280:17;17329:2;17316:11;17313:19;17310:109;;;17373:1;17402:2;17398;17391:14;17310:109;17442:20;;17497:2;17489:11;;17485:25;-1:-1:-1;17475:123:13;;17552:1;17581:2;17577;17570:14;17475:123;17642:2;17638;17634:11;17621:25;17672:70;17688:53;17738:2;17688:53;:::i;17672:70::-;17786:17;;;17884:1;17880:10;;;;17872:19;;17868:28;;;17825:14;;;;17912:21;;;17909:114;;;17975:1;18005:3;18000;17993:16;17909:114;18049:11;;;;18073:174;18091:8;18084:5;18081:19;18073:174;;;18173:19;;18159:34;;18112:14;;;;18219;;;;18073:174;;;18260:18;;-1:-1:-1;;;18298:12:13;;;;17224;;17191:1129;;;17195:3;18339:5;18329:15;;;;;;;;;16327:2023;;;;;:::o;18355:711::-;18648:3;18637:9;18630:22;18611:4;18675:46;18716:3;18705:9;18701:19;18693:6;18675:46;:::i;:::-;18769:9;18761:6;18757:22;18752:2;18741:9;18737:18;18730:50;18803:33;18829:6;18821;18803:33;:::i;:::-;18789:47;;18884:9;18876:6;18872:22;18867:2;18856:9;18852:18;18845:50;18918:33;18944:6;18936;18918:33;:::i;:::-;18904:47;;18999:9;18991:6;18987:22;18982:2;18971:9;18967:18;18960:50;19027:33;19053:6;19045;19027:33;:::i;:::-;19019:41;18355:711;-1:-1:-1;;;;;;;18355:711:13:o;19071:844::-;19265:4;19294:2;19334;19323:9;19319:18;19364:2;19353:9;19346:21;19387:6;19422;19416:13;19453:6;19445;19438:22;19491:2;19480:9;19476:18;19469:25;;19553:2;19543:6;19540:1;19536:14;19525:9;19521:30;19517:39;19503:53;;19591:2;19583:6;19579:15;19612:1;19622:264;19636:6;19633:1;19630:13;19622:264;;;19729:2;19725:7;19713:9;19705:6;19701:22;19697:36;19692:3;19685:49;19757;19799:6;19790;19784:13;19757:49;:::i;:::-;19747:59;-1:-1:-1;19864:12:13;;;;19829:15;;;;19658:1;19651:9;19622:264;;19920:1525;20474:25;;;-1:-1:-1;;;;;1241:31:13;;20550:2;20535:18;;1229:44;20433:4;20462:3;20590:2;20585;20574:9;20570:18;20563:30;20616:45;20657:2;20646:9;20642:18;20634:6;20616:45;:::i;:::-;20602:59;;20709:9;20701:6;20697:22;20692:2;20681:9;20677:18;20670:50;20743:33;20769:6;20761;20743:33;:::i;:::-;20729:47;;20825:9;20817:6;20813:22;20807:3;20796:9;20792:19;20785:51;20859:33;20885:6;20877;20859:33;:::i;:::-;20845:47;;20941:9;20933:6;20929:22;20923:3;20912:9;20908:19;20901:51;20975:33;21001:6;20993;20975:33;:::i;:::-;20961:47;;21057:9;21049:6;21045:22;21039:3;21028:9;21024:19;21017:51;21091:33;21117:6;21109;21091:33;:::i;:::-;21077:47;;21173:9;21165:6;21161:22;21155:3;21144:9;21140:19;21133:51;21207:33;21233:6;21225;21207:33;:::i;:::-;21193:47;;21289:9;21281:6;21277:22;21271:3;21260:9;21256:19;21249:51;21317:33;21343:6;21335;21317:33;:::i;:::-;21381:3;21366:19;;21359:35;;;;-1:-1:-1;;21425:3:13;21410:19;21403:36;21309:41;19920:1525;-1:-1:-1;;;;;;;;;19920:1525:13:o;21450:265::-;21633:2;21622:9;21615:21;21596:4;21653:56;21705:2;21694:9;21690:18;21682:6;21653:56;:::i;21720:259::-;21899:2;21888:9;21881:21;21862:4;21919:54;21969:2;21958:9;21954:18;21946:6;21919:54;:::i;22741:380::-;22820:1;22816:12;;;;22863;;;22884:61;;22938:4;22930:6;22926:17;22916:27;;22884:61;22991:2;22983:6;22980:14;22960:18;22957:38;22954:161;;;23037:10;23032:3;23028:20;23025:1;23018:31;23072:4;23069:1;23062:15;23100:4;23097:1;23090:15;23126:127;23187:10;23182:3;23178:20;23175:1;23168:31;23218:4;23215:1;23208:15;23242:4;23239:1;23232:15;23258:135;23297:3;-1:-1:-1;;23318:17:13;;23315:43;;;23338:18;;:::i;:::-;-1:-1:-1;23385:1:13;23374:13;;23258:135::o;23398:127::-;23459:10;23454:3;23450:20;23447:1;23440:31;23490:4;23487:1;23480:15;23514:4;23511:1;23504:15;23530:128;23570:3;23601:1;23597:6;23594:1;23591:13;23588:39;;;23607:18;;:::i;:::-;-1:-1:-1;23643:9:13;;23530:128::o;24630:125::-;24670:4;24698:1;24695;24692:8;24689:34;;;24703:18;;:::i;:::-;-1:-1:-1;24740:9:13;;24630:125::o;24760:411::-;24962:2;24944:21;;;25001:2;24981:18;;;24974:30;25040:34;25035:2;25020:18;;25013:62;-1:-1:-1;;;25106:2:13;25091:18;;25084:45;25161:3;25146:19;;24760:411::o;25533:217::-;25573:1;25599;25589:132;;25643:10;25638:3;25634:20;25631:1;25624:31;25678:4;25675:1;25668:15;25706:4;25703:1;25696:15;25589:132;-1:-1:-1;25735:9:13;;25533:217::o;25755:175::-;25792:3;25836:4;25829:5;25825:16;25865:4;25856:7;25853:17;25850:43;;;25873:18;;:::i;:::-;25922:1;25909:15;;25755:175;-1:-1:-1;;25755:175:13:o",
  "source": "pragma solidity >=0.5.0 <=0.9.0;\r\n// SPDX-License-Identifier: GPL-3.0-or-later\r\n\r\nimport './ProducerContract.sol';\r\nimport './ActivistContract.sol';\r\nimport './CategoryContract.sol';\r\n\r\n\r\n/**\r\n* @title InspectionContract\r\n* @dev Inpection action core\r\n*/\r\ncontract InspectionContract is ProducerContract, ActivistContract, CategoryContract {\r\n    enum InspectionStatus { OPEN, EXPIRED, INSPECTED, ACCEPTED } \r\n    uint inspactionExpireIn = 604800; // Seven days\r\n    \r\n    struct Inspection {\r\n        uint id;\r\n        InspectionStatus status;\r\n        address producerWallet;\r\n        address activistWallet;\r\n        uint[][] isas;\r\n        uint isaAverage;\r\n        uint expiresIn;\r\n        uint createdAt;\r\n        uint index;\r\n    }\r\n    \r\n    Inspection[] inspectionsArray;\r\n    mapping(address => Inspection[]) userInspections;\r\n    mapping(uint256 => Inspection) inspections;\r\n    uint256 inspectionsCount;\r\n    \r\n    /**\r\n   * @dev Allows the current user producer/activist get all yours inspections with status INSPECTED\r\n   */\r\n    function getInspectionsHistory() public view returns(Inspection[] memory) {\r\n        return userInspections[msg.sender];\r\n    }\r\n\r\n  /**\r\n   * @dev Allows the current user (producer) request a inspection.\r\n   */\r\n    function requestInspection() public returns(bool) {\r\n        require(producerExists(msg.sender), \"You are not a producer! Please register as one\");\r\n        Producer memory producer = producers[msg.sender];\r\n        require(producer.recentInspection == false, \"You have a inspection request OPEN or ACCEPTED! Wait a activist realize inspection or you can close it\");\r\n        \r\n        createRequest();\r\n        producers[msg.sender].recentInspection = true;\r\n        \r\n        return true;\r\n    }  \r\n    \r\n    \r\n    function createRequest() internal{\r\n        uint id = inspectionsCount + 1;\r\n        uint index = id - 1;\r\n        uint[][] memory isas;\r\n        uint expiresIn = block.timestamp + inspactionExpireIn;\r\n        Inspection memory inspection = Inspection(id, InspectionStatus.OPEN, msg.sender, msg.sender, isas,  0, expiresIn,  block.timestamp, index);\r\n        inspectionsArray.push(inspection);\r\n        inspections[id] = inspection;\r\n        inspectionsCount++;\r\n    }\r\n    \r\n    /**\r\n   * @dev Allows the current user (activist) accept a inspection.\r\n   * @param inspectionId The id of the inspection that the activist want accept.\r\n   */\r\n    function acceptInspection(uint inspectionId) public requireActivist requireInspectionExists(inspectionId) returns(bool) {\r\n        Inspection memory inspection = inspections[inspectionId];\r\n        if (inspection.status == InspectionStatus.OPEN) {\r\n            // Updated inspection in mapping\r\n            inspection.status = InspectionStatus.ACCEPTED;\r\n            inspection.activistWallet = msg.sender;\r\n            inspections[inspectionId] = inspection;\r\n\r\n            // Updated inspection in array\r\n            inspectionsArray[inspection.index].status = InspectionStatus.ACCEPTED;\r\n            inspectionsArray[inspection.index].activistWallet = msg.sender;\r\n\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }  \r\n    \r\n    /**\r\n   * @dev Calculate the ISA of the inspection based in the category and the ISA level of the category\r\n   * @param inspection Receive the inspected inspection with your isas levels\r\n   */\r\n    function calculateIsa(Inspection memory inspection) internal pure returns(uint){ \r\n        uint[][] memory isas = inspection.isas;\r\n\r\n        uint isaSum = sumIsa(isas);\r\n        return isaSum / isas.length;\r\n    }\r\n\r\n    /**\r\n   * @dev Sum the ISA\r\n   * @param isas The isas values\r\n   */\r\n    function sumIsa(uint[][] memory isas) internal pure returns(uint) {\r\n        uint8[5] memory isasValue = [10, 8, 6, 4, 2];\r\n        uint isaSum = 0;\r\n        for (uint8 i = 0; i < isas.length; i++) {\r\n            uint isaIndex = isas[i][1];\r\n            isaSum += isasValue[isaIndex];      \r\n        }\r\n\r\n        return isaSum;\r\n    }\r\n    \r\n    /**\r\n     * @dev Allow a activist realize a inspection and mark as INSPECTED\r\n     * @param inspectionId The id of the inspection to be realized\r\n     * @param isas The uint[][] of categoryId and isaIndex. Ex: isas = [ [categoryId, isaIndex], [categoryId, isaIndex] ]\r\n     */ \r\n    function realizeInspection(uint inspectionId, uint[][] memory isas) public requireActivist requireInspectionExists(inspectionId) returns(bool) {\r\n        if (inspections[inspectionId].status != InspectionStatus.ACCEPTED) return false;\r\n        if (inspections[inspectionId].activistWallet != msg.sender) return false;\r\n\r\n        // TODO\r\n        // add result calculateIsa in a variable\r\n        \r\n        inspections[inspectionId].isas = isas;\r\n        inspections[inspectionId].status = InspectionStatus.INSPECTED;\r\n        inspections[inspectionId].isaAverage = calculateIsa(inspections[inspectionId]);\r\n        afterRealizeInspection(inspectionId);\r\n\r\n        inspectionsArray[inspections[inspectionId].index].isas = isas;\r\n        inspectionsArray[inspections[inspectionId].index].isaAverage = calculateIsa(inspections[inspectionId]);\r\n        inspectionsArray[inspections[inspectionId].index].status = InspectionStatus.INSPECTED;\r\n        \r\n        return true;\r\n    }  \r\n    \r\n    /**\r\n   * @dev Returns a inspection by id if that exists.\r\n   * @param id The id of the inspection to return.\r\n   */\r\n    function getInspection(uint256 id) public view returns(Inspection memory) {\r\n        return inspections[id];\r\n    }\r\n    \r\n    /**\r\n   * @dev Returns all requested inspections.\r\n   */\r\n    function getInspections() public view returns (Inspection[] memory) {\r\n        return inspectionsArray;\r\n    }\r\n    \r\n    /**\r\n   * @dev Returns all inpections status string.\r\n   */\r\n    function getInspectionsStatus() public pure returns(string memory, string memory, string memory, string memory) {\r\n        return (\"OPEN\", \"EXPIRED\", \"INSPECTED\", \"ACCEPTED\");\r\n    }\r\n    \r\n    /**\r\n   * @dev Check if an inspections exists in mapping.\r\n   * @param id The id of the inspection that the activist want accept.\r\n   */\r\n    function inspectionExists(uint256 id) public view returns(bool) {\r\n        return inspections[id].id >= 1;\r\n    }\r\n    \r\n    /**\r\n   * @dev Inscrement producer and activist request action and mark both as no recent open requests and inspection\r\n   * @param inspectionId The id of the inspection\r\n   */\r\n    function afterRealizeInspection(uint inspectionId) internal {\r\n        address producerWallet = inspections[inspectionId].producerWallet;\r\n        address activistWallet = inspections[inspectionId].activistWallet;\r\n        \r\n        // Increment actvist inspections and release to carry out new inspections\r\n        activists[activistWallet].recentInspection = false;\r\n        activists[activistWallet].totalInspections++;\r\n        \r\n        // Increment producer requests and release to carry out new requests\r\n        producers[producerWallet].recentInspection = false;\r\n        producers[producerWallet].totalRequests++;\r\n        \r\n        userInspections[producerWallet].push(inspections[inspectionId]);\r\n        userInspections[activistWallet].push(inspections[inspectionId]);\r\n    }\r\n    \r\n    \r\n    // MODIFIERS\r\n    modifier requireActivist() {\r\n        require(activistExists(msg.sender), \"You must be an activist! Please register as one\");\r\n        _;\r\n    }\r\n    \r\n    modifier requireInspectionExists(uint inspectionId) {\r\n        require(inspectionExists(inspectionId), \"This inspection don't exists\");\r\n        _;\r\n    }\r\n    \r\n}\r\n",
  "sourcePath": "C:\\Users\\Breno\\Downloads\\SintropContract\\contracts\\InspectionContract.sol",
  "ast": {
    "absolutePath": "/C/Users/Breno/Downloads/SintropContract/contracts/InspectionContract.sol",
    "exportedSymbols": {
      "ActivistContract": [
        179
      ],
      "CategoryContract": [
        400
      ],
      "InspectionContract": [
        995
      ],
      "ProducerContract": [
        1212
      ],
      "UserContract": [
        1366
      ]
    },
    "id": 996,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 402,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<=",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:2"
      },
      {
        "absolutePath": "/C/Users/Breno/Downloads/SintropContract/contracts/ProducerContract.sol",
        "file": "./ProducerContract.sol",
        "id": 403,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 996,
        "sourceUnit": 1213,
        "src": "82:32:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/Breno/Downloads/SintropContract/contracts/ActivistContract.sol",
        "file": "./ActivistContract.sol",
        "id": 404,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 996,
        "sourceUnit": 180,
        "src": "116:32:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/Breno/Downloads/SintropContract/contracts/CategoryContract.sol",
        "file": "./CategoryContract.sol",
        "id": 405,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 996,
        "sourceUnit": 401,
        "src": "150:32:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 407,
              "name": "ProducerContract",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1212,
              "src": "287:16:2"
            },
            "id": 408,
            "nodeType": "InheritanceSpecifier",
            "src": "287:16:2"
          },
          {
            "baseName": {
              "id": 409,
              "name": "ActivistContract",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 179,
              "src": "305:16:2"
            },
            "id": 410,
            "nodeType": "InheritanceSpecifier",
            "src": "305:16:2"
          },
          {
            "baseName": {
              "id": 411,
              "name": "CategoryContract",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 400,
              "src": "323:16:2"
            },
            "id": 412,
            "nodeType": "InheritanceSpecifier",
            "src": "323:16:2"
          }
        ],
        "canonicalName": "InspectionContract",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 406,
          "nodeType": "StructuredDocumentation",
          "src": "188:66:2",
          "text": " @title InspectionContract\n @dev Inpection action core"
        },
        "fullyImplemented": true,
        "id": 995,
        "linearizedBaseContracts": [
          995,
          400,
          179,
          1212,
          1366
        ],
        "name": "InspectionContract",
        "nameLocation": "265:18:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "InspectionContract.InspectionStatus",
            "id": 417,
            "members": [
              {
                "id": 413,
                "name": "OPEN",
                "nameLocation": "371:4:2",
                "nodeType": "EnumValue",
                "src": "371:4:2"
              },
              {
                "id": 414,
                "name": "EXPIRED",
                "nameLocation": "377:7:2",
                "nodeType": "EnumValue",
                "src": "377:7:2"
              },
              {
                "id": 415,
                "name": "INSPECTED",
                "nameLocation": "386:9:2",
                "nodeType": "EnumValue",
                "src": "386:9:2"
              },
              {
                "id": 416,
                "name": "ACCEPTED",
                "nameLocation": "397:8:2",
                "nodeType": "EnumValue",
                "src": "397:8:2"
              }
            ],
            "name": "InspectionStatus",
            "nameLocation": "352:16:2",
            "nodeType": "EnumDefinition",
            "src": "347:60:2"
          },
          {
            "constant": false,
            "id": 420,
            "mutability": "mutable",
            "name": "inspactionExpireIn",
            "nameLocation": "419:18:2",
            "nodeType": "VariableDeclaration",
            "scope": 995,
            "src": "414:32:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 418,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "414:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "363034383030",
              "id": 419,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "440:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_604800_by_1",
                "typeString": "int_const 604800"
              },
              "value": "604800"
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "InspectionContract.Inspection",
            "id": 442,
            "members": [
              {
                "constant": false,
                "id": 422,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "507:2:2",
                "nodeType": "VariableDeclaration",
                "scope": 442,
                "src": "502:7:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 421,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "502:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 425,
                "mutability": "mutable",
                "name": "status",
                "nameLocation": "537:6:2",
                "nodeType": "VariableDeclaration",
                "scope": 442,
                "src": "520:23:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_InspectionStatus_$417",
                  "typeString": "enum InspectionContract.InspectionStatus"
                },
                "typeName": {
                  "id": 424,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 423,
                    "name": "InspectionStatus",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 417,
                    "src": "520:16:2"
                  },
                  "referencedDeclaration": 417,
                  "src": "520:16:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_InspectionStatus_$417",
                    "typeString": "enum InspectionContract.InspectionStatus"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 427,
                "mutability": "mutable",
                "name": "producerWallet",
                "nameLocation": "562:14:2",
                "nodeType": "VariableDeclaration",
                "scope": 442,
                "src": "554:22:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 426,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "554:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 429,
                "mutability": "mutable",
                "name": "activistWallet",
                "nameLocation": "595:14:2",
                "nodeType": "VariableDeclaration",
                "scope": 442,
                "src": "587:22:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 428,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "587:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 433,
                "mutability": "mutable",
                "name": "isas",
                "nameLocation": "629:4:2",
                "nodeType": "VariableDeclaration",
                "scope": 442,
                "src": "620:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                  "typeString": "uint256[][]"
                },
                "typeName": {
                  "baseType": {
                    "baseType": {
                      "id": 430,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "620:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 431,
                    "nodeType": "ArrayTypeName",
                    "src": "620:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "id": 432,
                  "nodeType": "ArrayTypeName",
                  "src": "620:8:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                    "typeString": "uint256[][]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 435,
                "mutability": "mutable",
                "name": "isaAverage",
                "nameLocation": "649:10:2",
                "nodeType": "VariableDeclaration",
                "scope": 442,
                "src": "644:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 434,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "644:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 437,
                "mutability": "mutable",
                "name": "expiresIn",
                "nameLocation": "675:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 442,
                "src": "670:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 436,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "670:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 439,
                "mutability": "mutable",
                "name": "createdAt",
                "nameLocation": "700:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 442,
                "src": "695:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 438,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "695:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 441,
                "mutability": "mutable",
                "name": "index",
                "nameLocation": "725:5:2",
                "nodeType": "VariableDeclaration",
                "scope": 442,
                "src": "720:10:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 440,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "720:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Inspection",
            "nameLocation": "480:10:2",
            "nodeType": "StructDefinition",
            "scope": 995,
            "src": "473:265:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 446,
            "mutability": "mutable",
            "name": "inspectionsArray",
            "nameLocation": "763:16:2",
            "nodeType": "VariableDeclaration",
            "scope": 995,
            "src": "750:29:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Inspection_$442_storage_$dyn_storage",
              "typeString": "struct InspectionContract.Inspection[]"
            },
            "typeName": {
              "baseType": {
                "id": 444,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 443,
                  "name": "Inspection",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 442,
                  "src": "750:10:2"
                },
                "referencedDeclaration": 442,
                "src": "750:10:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Inspection_$442_storage_ptr",
                  "typeString": "struct InspectionContract.Inspection"
                }
              },
              "id": 445,
              "nodeType": "ArrayTypeName",
              "src": "750:12:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Inspection_$442_storage_$dyn_storage_ptr",
                "typeString": "struct InspectionContract.Inspection[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 452,
            "mutability": "mutable",
            "name": "userInspections",
            "nameLocation": "819:15:2",
            "nodeType": "VariableDeclaration",
            "scope": 995,
            "src": "786:48:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Inspection_$442_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct InspectionContract.Inspection[])"
            },
            "typeName": {
              "id": 451,
              "keyType": {
                "id": 447,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "794:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "786:32:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Inspection_$442_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct InspectionContract.Inspection[])"
              },
              "valueType": {
                "baseType": {
                  "id": 449,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 448,
                    "name": "Inspection",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 442,
                    "src": "805:10:2"
                  },
                  "referencedDeclaration": 442,
                  "src": "805:10:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Inspection_$442_storage_ptr",
                    "typeString": "struct InspectionContract.Inspection"
                  }
                },
                "id": 450,
                "nodeType": "ArrayTypeName",
                "src": "805:12:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Inspection_$442_storage_$dyn_storage_ptr",
                  "typeString": "struct InspectionContract.Inspection[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 457,
            "mutability": "mutable",
            "name": "inspections",
            "nameLocation": "872:11:2",
            "nodeType": "VariableDeclaration",
            "scope": 995,
            "src": "841:42:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$442_storage_$",
              "typeString": "mapping(uint256 => struct InspectionContract.Inspection)"
            },
            "typeName": {
              "id": 456,
              "keyType": {
                "id": 453,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "849:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "841:30:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$442_storage_$",
                "typeString": "mapping(uint256 => struct InspectionContract.Inspection)"
              },
              "valueType": {
                "id": 455,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 454,
                  "name": "Inspection",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 442,
                  "src": "860:10:2"
                },
                "referencedDeclaration": 442,
                "src": "860:10:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Inspection_$442_storage_ptr",
                  "typeString": "struct InspectionContract.Inspection"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 459,
            "mutability": "mutable",
            "name": "inspectionsCount",
            "nameLocation": "898:16:2",
            "nodeType": "VariableDeclaration",
            "scope": 995,
            "src": "890:24:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 458,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "890:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 472,
              "nodeType": "Block",
              "src": "1118:53:2",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 467,
                      "name": "userInspections",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 452,
                      "src": "1136:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Inspection_$442_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct InspectionContract.Inspection storage ref[] storage ref)"
                      }
                    },
                    "id": 470,
                    "indexExpression": {
                      "expression": {
                        "id": 468,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1152:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 469,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1152:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1136:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Inspection_$442_storage_$dyn_storage",
                      "typeString": "struct InspectionContract.Inspection storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 466,
                  "id": 471,
                  "nodeType": "Return",
                  "src": "1129:34:2"
                }
              ]
            },
            "documentation": {
              "id": 460,
              "nodeType": "StructuredDocumentation",
              "src": "927:111:2",
              "text": " @dev Allows the current user producer/activist get all yours inspections with status INSPECTED"
            },
            "functionSelector": "0bbec3c2",
            "id": 473,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInspectionsHistory",
            "nameLocation": "1053:21:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 461,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1074:2:2"
            },
            "returnParameters": {
              "id": 466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 465,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 473,
                  "src": "1097:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Inspection_$442_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct InspectionContract.Inspection[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 463,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 462,
                        "name": "Inspection",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 442,
                        "src": "1097:10:2"
                      },
                      "referencedDeclaration": 442,
                      "src": "1097:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$442_storage_ptr",
                        "typeString": "struct InspectionContract.Inspection"
                      }
                    },
                    "id": 464,
                    "nodeType": "ArrayTypeName",
                    "src": "1097:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Inspection_$442_storage_$dyn_storage_ptr",
                      "typeString": "struct InspectionContract.Inspection[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1096:21:2"
            },
            "scope": 995,
            "src": "1044:127:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 516,
              "nodeType": "Block",
              "src": "1311:447:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 481,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1345:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 482,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1345:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 480,
                          "name": "producerExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1211,
                          "src": "1330:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1330:26:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520617265206e6f7420612070726f64756365722120506c65617365207265676973746572206173206f6e65",
                        "id": 484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1358:48:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dbb08f64851b685a0f36294d305e2db5057008a52567e5bdec9c2160a57b7398",
                          "typeString": "literal_string \"You are not a producer! Please register as one\""
                        },
                        "value": "You are not a producer! Please register as one"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dbb08f64851b685a0f36294d305e2db5057008a52567e5bdec9c2160a57b7398",
                          "typeString": "literal_string \"You are not a producer! Please register as one\""
                        }
                      ],
                      "id": 479,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1322:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1322:85:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 486,
                  "nodeType": "ExpressionStatement",
                  "src": "1322:85:2"
                },
                {
                  "assignments": [
                    489
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 489,
                      "mutability": "mutable",
                      "name": "producer",
                      "nameLocation": "1434:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 516,
                      "src": "1418:24:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Producer_$1057_memory_ptr",
                        "typeString": "struct ProducerContract.Producer"
                      },
                      "typeName": {
                        "id": 488,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 487,
                          "name": "Producer",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1057,
                          "src": "1418:8:2"
                        },
                        "referencedDeclaration": 1057,
                        "src": "1418:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Producer_$1057_storage_ptr",
                          "typeString": "struct ProducerContract.Producer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 494,
                  "initialValue": {
                    "baseExpression": {
                      "id": 490,
                      "name": "producers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1075,
                      "src": "1445:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Producer_$1057_storage_$",
                        "typeString": "mapping(address => struct ProducerContract.Producer storage ref)"
                      }
                    },
                    "id": 493,
                    "indexExpression": {
                      "expression": {
                        "id": 491,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1455:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1455:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1445:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Producer_$1057_storage",
                      "typeString": "struct ProducerContract.Producer storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1418:48:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 496,
                            "name": "producer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 489,
                            "src": "1485:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Producer_$1057_memory_ptr",
                              "typeString": "struct ProducerContract.Producer memory"
                            }
                          },
                          "id": 497,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "recentInspection",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1049,
                          "src": "1485:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1514:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "1485:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752068617665206120696e7370656374696f6e2072657175657374204f50454e206f722041434345505445442120576169742061206163746976697374207265616c697a6520696e7370656374696f6e206f7220796f752063616e20636c6f7365206974",
                        "id": 500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1521:104:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6c06c4f9d658f6d0bee949be33756e3bdf523e4cfb9cc40af70a6abee2364d7d",
                          "typeString": "literal_string \"You have a inspection request OPEN or ACCEPTED! Wait a activist realize inspection or you can close it\""
                        },
                        "value": "You have a inspection request OPEN or ACCEPTED! Wait a activist realize inspection or you can close it"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6c06c4f9d658f6d0bee949be33756e3bdf523e4cfb9cc40af70a6abee2364d7d",
                          "typeString": "literal_string \"You have a inspection request OPEN or ACCEPTED! Wait a activist realize inspection or you can close it\""
                        }
                      ],
                      "id": 495,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1477:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1477:149:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 502,
                  "nodeType": "ExpressionStatement",
                  "src": "1477:149:2"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 503,
                      "name": "createRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 581,
                      "src": "1647:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1647:15:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 505,
                  "nodeType": "ExpressionStatement",
                  "src": "1647:15:2"
                },
                {
                  "expression": {
                    "id": 512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 506,
                          "name": "producers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1075,
                          "src": "1673:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Producer_$1057_storage_$",
                            "typeString": "mapping(address => struct ProducerContract.Producer storage ref)"
                          }
                        },
                        "id": 509,
                        "indexExpression": {
                          "expression": {
                            "id": 507,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1683:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1683:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1673:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Producer_$1057_storage",
                          "typeString": "struct ProducerContract.Producer storage ref"
                        }
                      },
                      "id": 510,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "recentInspection",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1049,
                      "src": "1673:38:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 511,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1714:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1673:45:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 513,
                  "nodeType": "ExpressionStatement",
                  "src": "1673:45:2"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1746:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 478,
                  "id": 515,
                  "nodeType": "Return",
                  "src": "1739:11:2"
                }
              ]
            },
            "documentation": {
              "id": 474,
              "nodeType": "StructuredDocumentation",
              "src": "1177:78:2",
              "text": " @dev Allows the current user (producer) request a inspection."
            },
            "functionSelector": "86ae2fb1",
            "id": 517,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestInspection",
            "nameLocation": "1270:17:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 475,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1287:2:2"
            },
            "returnParameters": {
              "id": 478,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 477,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 517,
                  "src": "1305:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 476,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1305:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1304:6:2"
            },
            "scope": 995,
            "src": "1261:497:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 580,
              "nodeType": "Block",
              "src": "1811:435:2",
              "statements": [
                {
                  "assignments": [
                    521
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 521,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "1827:2:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 580,
                      "src": "1822:7:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 520,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1822:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 525,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 522,
                      "name": "inspectionsCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 459,
                      "src": "1832:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 523,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1851:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1832:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1822:30:2"
                },
                {
                  "assignments": [
                    527
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 527,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "1868:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 580,
                      "src": "1863:10:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 526,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1863:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 531,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 528,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 521,
                      "src": "1876:2:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 529,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1881:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1876:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1863:19:2"
                },
                {
                  "assignments": [
                    537
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 537,
                      "mutability": "mutable",
                      "name": "isas",
                      "nameLocation": "1909:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 580,
                      "src": "1893:20:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                        "typeString": "uint256[][]"
                      },
                      "typeName": {
                        "baseType": {
                          "baseType": {
                            "id": 534,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "1893:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 535,
                          "nodeType": "ArrayTypeName",
                          "src": "1893:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "id": 536,
                        "nodeType": "ArrayTypeName",
                        "src": "1893:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                          "typeString": "uint256[][]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 538,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1893:20:2"
                },
                {
                  "assignments": [
                    540
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 540,
                      "mutability": "mutable",
                      "name": "expiresIn",
                      "nameLocation": "1929:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 580,
                      "src": "1924:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 539,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1924:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 545,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 541,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "1941:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 542,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1941:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 543,
                      "name": "inspactionExpireIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 420,
                      "src": "1959:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1941:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1924:53:2"
                },
                {
                  "assignments": [
                    548
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 548,
                      "mutability": "mutable",
                      "name": "inspection",
                      "nameLocation": "2006:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 580,
                      "src": "1988:28:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$442_memory_ptr",
                        "typeString": "struct InspectionContract.Inspection"
                      },
                      "typeName": {
                        "id": 547,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 546,
                          "name": "Inspection",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 442,
                          "src": "1988:10:2"
                        },
                        "referencedDeclaration": 442,
                        "src": "1988:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$442_storage_ptr",
                          "typeString": "struct InspectionContract.Inspection"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 564,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 550,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 521,
                        "src": "2030:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 551,
                          "name": "InspectionStatus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 417,
                          "src": "2034:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_InspectionStatus_$417_$",
                            "typeString": "type(enum InspectionContract.InspectionStatus)"
                          }
                        },
                        "id": 552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "OPEN",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 413,
                        "src": "2034:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_InspectionStatus_$417",
                          "typeString": "enum InspectionContract.InspectionStatus"
                        }
                      },
                      {
                        "expression": {
                          "id": 553,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2057:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2057:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 555,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2069:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2069:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 557,
                        "name": "isas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 537,
                        "src": "2081:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2088:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 559,
                        "name": "expiresIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 540,
                        "src": "2091:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 560,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "2103:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "2103:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 562,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 527,
                        "src": "2120:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_InspectionStatus_$417",
                          "typeString": "enum InspectionContract.InspectionStatus"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 549,
                      "name": "Inspection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 442,
                      "src": "2019:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Inspection_$442_storage_ptr_$",
                        "typeString": "type(struct InspectionContract.Inspection storage pointer)"
                      }
                    },
                    "id": 563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2019:107:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$442_memory_ptr",
                      "typeString": "struct InspectionContract.Inspection memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1988:138:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 568,
                        "name": "inspection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 548,
                        "src": "2159:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$442_memory_ptr",
                          "typeString": "struct InspectionContract.Inspection memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Inspection_$442_memory_ptr",
                          "typeString": "struct InspectionContract.Inspection memory"
                        }
                      ],
                      "expression": {
                        "id": 565,
                        "name": "inspectionsArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 446,
                        "src": "2137:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Inspection_$442_storage_$dyn_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref[] storage ref"
                        }
                      },
                      "id": 567,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2137:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Inspection_$442_storage_$dyn_storage_ptr_$_t_struct$_Inspection_$442_storage_$returns$__$bound_to$_t_array$_t_struct$_Inspection_$442_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct InspectionContract.Inspection storage ref[] storage pointer,struct InspectionContract.Inspection storage ref)"
                      }
                    },
                    "id": 569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2137:33:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 570,
                  "nodeType": "ExpressionStatement",
                  "src": "2137:33:2"
                },
                {
                  "expression": {
                    "id": 575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 571,
                        "name": "inspections",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 457,
                        "src": "2181:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$442_storage_$",
                          "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                        }
                      },
                      "id": 573,
                      "indexExpression": {
                        "id": 572,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 521,
                        "src": "2193:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2181:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$442_storage",
                        "typeString": "struct InspectionContract.Inspection storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 574,
                      "name": "inspection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 548,
                      "src": "2199:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$442_memory_ptr",
                        "typeString": "struct InspectionContract.Inspection memory"
                      }
                    },
                    "src": "2181:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$442_storage",
                      "typeString": "struct InspectionContract.Inspection storage ref"
                    }
                  },
                  "id": 576,
                  "nodeType": "ExpressionStatement",
                  "src": "2181:28:2"
                },
                {
                  "expression": {
                    "id": 578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "2220:18:2",
                    "subExpression": {
                      "id": 577,
                      "name": "inspectionsCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 459,
                      "src": "2220:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 579,
                  "nodeType": "ExpressionStatement",
                  "src": "2220:18:2"
                }
              ]
            },
            "id": 581,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createRequest",
            "nameLocation": "1787:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 518,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1800:2:2"
            },
            "returnParameters": {
              "id": 519,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1811:0:2"
            },
            "scope": 995,
            "src": "1778:468:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 651,
              "nodeType": "Block",
              "src": "2543:646:2",
              "statements": [
                {
                  "assignments": [
                    596
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 596,
                      "mutability": "mutable",
                      "name": "inspection",
                      "nameLocation": "2572:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 651,
                      "src": "2554:28:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$442_memory_ptr",
                        "typeString": "struct InspectionContract.Inspection"
                      },
                      "typeName": {
                        "id": 595,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 594,
                          "name": "Inspection",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 442,
                          "src": "2554:10:2"
                        },
                        "referencedDeclaration": 442,
                        "src": "2554:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$442_storage_ptr",
                          "typeString": "struct InspectionContract.Inspection"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 600,
                  "initialValue": {
                    "baseExpression": {
                      "id": 597,
                      "name": "inspections",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 457,
                      "src": "2585:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$442_storage_$",
                        "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                      }
                    },
                    "id": 599,
                    "indexExpression": {
                      "id": 598,
                      "name": "inspectionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 584,
                      "src": "2597:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2585:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$442_storage",
                      "typeString": "struct InspectionContract.Inspection storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2554:56:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_InspectionStatus_$417",
                      "typeString": "enum InspectionContract.InspectionStatus"
                    },
                    "id": 605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 601,
                        "name": "inspection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 596,
                        "src": "2625:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$442_memory_ptr",
                          "typeString": "struct InspectionContract.Inspection memory"
                        }
                      },
                      "id": 602,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 425,
                      "src": "2625:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_InspectionStatus_$417",
                        "typeString": "enum InspectionContract.InspectionStatus"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 603,
                        "name": "InspectionStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 417,
                        "src": "2646:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_InspectionStatus_$417_$",
                          "typeString": "type(enum InspectionContract.InspectionStatus)"
                        }
                      },
                      "id": 604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "OPEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 413,
                      "src": "2646:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_InspectionStatus_$417",
                        "typeString": "enum InspectionContract.InspectionStatus"
                      }
                    },
                    "src": "2625:42:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 649,
                    "nodeType": "Block",
                    "src": "3143:39:2",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3165:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 593,
                        "id": 648,
                        "nodeType": "Return",
                        "src": "3158:12:2"
                      }
                    ]
                  },
                  "id": 650,
                  "nodeType": "IfStatement",
                  "src": "2621:561:2",
                  "trueBody": {
                    "id": 646,
                    "nodeType": "Block",
                    "src": "2669:459:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 606,
                              "name": "inspection",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 596,
                              "src": "2730:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Inspection_$442_memory_ptr",
                                "typeString": "struct InspectionContract.Inspection memory"
                              }
                            },
                            "id": 608,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 425,
                            "src": "2730:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_InspectionStatus_$417",
                              "typeString": "enum InspectionContract.InspectionStatus"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 609,
                              "name": "InspectionStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 417,
                              "src": "2750:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_InspectionStatus_$417_$",
                                "typeString": "type(enum InspectionContract.InspectionStatus)"
                              }
                            },
                            "id": 610,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ACCEPTED",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 416,
                            "src": "2750:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_InspectionStatus_$417",
                              "typeString": "enum InspectionContract.InspectionStatus"
                            }
                          },
                          "src": "2730:45:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_InspectionStatus_$417",
                            "typeString": "enum InspectionContract.InspectionStatus"
                          }
                        },
                        "id": 612,
                        "nodeType": "ExpressionStatement",
                        "src": "2730:45:2"
                      },
                      {
                        "expression": {
                          "id": 618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 613,
                              "name": "inspection",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 596,
                              "src": "2790:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Inspection_$442_memory_ptr",
                                "typeString": "struct InspectionContract.Inspection memory"
                              }
                            },
                            "id": 615,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "activistWallet",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 429,
                            "src": "2790:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 616,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2818:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 617,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2818:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2790:38:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 619,
                        "nodeType": "ExpressionStatement",
                        "src": "2790:38:2"
                      },
                      {
                        "expression": {
                          "id": 624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 620,
                              "name": "inspections",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 457,
                              "src": "2843:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$442_storage_$",
                                "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                              }
                            },
                            "id": 622,
                            "indexExpression": {
                              "id": 621,
                              "name": "inspectionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 584,
                              "src": "2855:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2843:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Inspection_$442_storage",
                              "typeString": "struct InspectionContract.Inspection storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 623,
                            "name": "inspection",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 596,
                            "src": "2871:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Inspection_$442_memory_ptr",
                              "typeString": "struct InspectionContract.Inspection memory"
                            }
                          },
                          "src": "2843:38:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Inspection_$442_storage",
                            "typeString": "struct InspectionContract.Inspection storage ref"
                          }
                        },
                        "id": 625,
                        "nodeType": "ExpressionStatement",
                        "src": "2843:38:2"
                      },
                      {
                        "expression": {
                          "id": 633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 626,
                                "name": "inspectionsArray",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 446,
                                "src": "2942:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Inspection_$442_storage_$dyn_storage",
                                  "typeString": "struct InspectionContract.Inspection storage ref[] storage ref"
                                }
                              },
                              "id": 629,
                              "indexExpression": {
                                "expression": {
                                  "id": 627,
                                  "name": "inspection",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 596,
                                  "src": "2959:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Inspection_$442_memory_ptr",
                                    "typeString": "struct InspectionContract.Inspection memory"
                                  }
                                },
                                "id": 628,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "index",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 441,
                                "src": "2959:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2942:34:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Inspection_$442_storage",
                                "typeString": "struct InspectionContract.Inspection storage ref"
                              }
                            },
                            "id": 630,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 425,
                            "src": "2942:41:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_InspectionStatus_$417",
                              "typeString": "enum InspectionContract.InspectionStatus"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 631,
                              "name": "InspectionStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 417,
                              "src": "2986:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_InspectionStatus_$417_$",
                                "typeString": "type(enum InspectionContract.InspectionStatus)"
                              }
                            },
                            "id": 632,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ACCEPTED",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 416,
                            "src": "2986:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_InspectionStatus_$417",
                              "typeString": "enum InspectionContract.InspectionStatus"
                            }
                          },
                          "src": "2942:69:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_InspectionStatus_$417",
                            "typeString": "enum InspectionContract.InspectionStatus"
                          }
                        },
                        "id": 634,
                        "nodeType": "ExpressionStatement",
                        "src": "2942:69:2"
                      },
                      {
                        "expression": {
                          "id": 642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 635,
                                "name": "inspectionsArray",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 446,
                                "src": "3026:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Inspection_$442_storage_$dyn_storage",
                                  "typeString": "struct InspectionContract.Inspection storage ref[] storage ref"
                                }
                              },
                              "id": 638,
                              "indexExpression": {
                                "expression": {
                                  "id": 636,
                                  "name": "inspection",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 596,
                                  "src": "3043:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Inspection_$442_memory_ptr",
                                    "typeString": "struct InspectionContract.Inspection memory"
                                  }
                                },
                                "id": 637,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "index",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 441,
                                "src": "3043:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3026:34:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Inspection_$442_storage",
                                "typeString": "struct InspectionContract.Inspection storage ref"
                              }
                            },
                            "id": 639,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "activistWallet",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 429,
                            "src": "3026:49:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 640,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3078:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 641,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3078:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3026:62:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 643,
                        "nodeType": "ExpressionStatement",
                        "src": "3026:62:2"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3112:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 593,
                        "id": 645,
                        "nodeType": "Return",
                        "src": "3105:11:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 582,
              "nodeType": "StructuredDocumentation",
              "src": "2258:159:2",
              "text": " @dev Allows the current user (activist) accept a inspection.\n @param inspectionId The id of the inspection that the activist want accept."
            },
            "functionSelector": "e7857502",
            "id": 652,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 587,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 586,
                  "name": "requireActivist",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 981,
                  "src": "2475:15:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2475:15:2"
              },
              {
                "arguments": [
                  {
                    "id": 589,
                    "name": "inspectionId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 584,
                    "src": "2515:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 590,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 588,
                  "name": "requireInspectionExists",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 994,
                  "src": "2491:23:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2491:37:2"
              }
            ],
            "name": "acceptInspection",
            "nameLocation": "2432:16:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 585,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 584,
                  "mutability": "mutable",
                  "name": "inspectionId",
                  "nameLocation": "2454:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 652,
                  "src": "2449:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 583,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2449:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2448:19:2"
            },
            "returnParameters": {
              "id": 593,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 592,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 652,
                  "src": "2537:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 591,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2537:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2536:6:2"
            },
            "scope": 995,
            "src": "2423:766:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 681,
              "nodeType": "Block",
              "src": "3480:135:2",
              "statements": [
                {
                  "assignments": [
                    666
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 666,
                      "mutability": "mutable",
                      "name": "isas",
                      "nameLocation": "3508:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 681,
                      "src": "3492:20:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                        "typeString": "uint256[][]"
                      },
                      "typeName": {
                        "baseType": {
                          "baseType": {
                            "id": 663,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "3492:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 664,
                          "nodeType": "ArrayTypeName",
                          "src": "3492:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "id": 665,
                        "nodeType": "ArrayTypeName",
                        "src": "3492:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                          "typeString": "uint256[][]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 669,
                  "initialValue": {
                    "expression": {
                      "id": 667,
                      "name": "inspection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 656,
                      "src": "3515:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$442_memory_ptr",
                        "typeString": "struct InspectionContract.Inspection memory"
                      }
                    },
                    "id": 668,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "isas",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 433,
                    "src": "3515:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                      "typeString": "uint256[] memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3492:38:2"
                },
                {
                  "assignments": [
                    671
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 671,
                      "mutability": "mutable",
                      "name": "isaSum",
                      "nameLocation": "3548:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 681,
                      "src": "3543:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 670,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3543:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 675,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 673,
                        "name": "isas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 666,
                        "src": "3564:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        }
                      ],
                      "id": 672,
                      "name": "sumIsa",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 739,
                      "src": "3557:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint256[] memory[] memory) pure returns (uint256)"
                      }
                    },
                    "id": 674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3557:12:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3543:26:2"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 676,
                      "name": "isaSum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 671,
                      "src": "3587:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "expression": {
                        "id": 677,
                        "name": "isas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 666,
                        "src": "3596:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        }
                      },
                      "id": 678,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3596:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3587:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 660,
                  "id": 680,
                  "nodeType": "Return",
                  "src": "3580:27:2"
                }
              ]
            },
            "documentation": {
              "id": 653,
              "nodeType": "StructuredDocumentation",
              "src": "3203:192:2",
              "text": " @dev Calculate the ISA of the inspection based in the category and the ISA level of the category\n @param inspection Receive the inspected inspection with your isas levels"
            },
            "id": 682,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateIsa",
            "nameLocation": "3410:12:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 657,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 656,
                  "mutability": "mutable",
                  "name": "inspection",
                  "nameLocation": "3441:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 682,
                  "src": "3423:28:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Inspection_$442_memory_ptr",
                    "typeString": "struct InspectionContract.Inspection"
                  },
                  "typeName": {
                    "id": 655,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 654,
                      "name": "Inspection",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 442,
                      "src": "3423:10:2"
                    },
                    "referencedDeclaration": 442,
                    "src": "3423:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$442_storage_ptr",
                      "typeString": "struct InspectionContract.Inspection"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3422:30:2"
            },
            "returnParameters": {
              "id": 660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 659,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 682,
                  "src": "3475:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 658,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3475:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3474:6:2"
            },
            "scope": 995,
            "src": "3401:214:2",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 738,
              "nodeType": "Block",
              "src": "3762:268:2",
              "statements": [
                {
                  "assignments": [
                    697
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 697,
                      "mutability": "mutable",
                      "name": "isasValue",
                      "nameLocation": "3789:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 738,
                      "src": "3773:25:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
                        "typeString": "uint8[5]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 695,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3773:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 696,
                        "length": {
                          "hexValue": "35",
                          "id": 694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3779:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "3773:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$5_storage_ptr",
                          "typeString": "uint8[5]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 704,
                  "initialValue": {
                    "components": [
                      {
                        "hexValue": "3130",
                        "id": 698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3802:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "38",
                        "id": 699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3806:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_8_by_1",
                          "typeString": "int_const 8"
                        },
                        "value": "8"
                      },
                      {
                        "hexValue": "36",
                        "id": 700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3809:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      },
                      {
                        "hexValue": "34",
                        "id": 701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3812:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      },
                      {
                        "hexValue": "32",
                        "id": 702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3815:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "id": 703,
                    "isConstant": false,
                    "isInlineArray": true,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3801:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
                      "typeString": "uint8[5] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3773:44:2"
                },
                {
                  "assignments": [
                    706
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 706,
                      "mutability": "mutable",
                      "name": "isaSum",
                      "nameLocation": "3833:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 738,
                      "src": "3828:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 705,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3828:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 708,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3842:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3828:15:2"
                },
                {
                  "body": {
                    "id": 734,
                    "nodeType": "Block",
                    "src": "3894:103:2",
                    "statements": [
                      {
                        "assignments": [
                          721
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 721,
                            "mutability": "mutable",
                            "name": "isaIndex",
                            "nameLocation": "3914:8:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 734,
                            "src": "3909:13:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 720,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "3909:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 727,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 722,
                              "name": "isas",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 687,
                              "src": "3925:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                                "typeString": "uint256[] memory[] memory"
                              }
                            },
                            "id": 724,
                            "indexExpression": {
                              "id": 723,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 710,
                              "src": "3930:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3925:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 726,
                          "indexExpression": {
                            "hexValue": "31",
                            "id": 725,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3933:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3925:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3909:26:2"
                      },
                      {
                        "expression": {
                          "id": 732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 728,
                            "name": "isaSum",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 706,
                            "src": "3950:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 729,
                              "name": "isasValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 697,
                              "src": "3960:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
                                "typeString": "uint8[5] memory"
                              }
                            },
                            "id": 731,
                            "indexExpression": {
                              "id": 730,
                              "name": "isaIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 721,
                              "src": "3970:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3960:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "3950:29:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 733,
                        "nodeType": "ExpressionStatement",
                        "src": "3950:29:2"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 713,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 710,
                      "src": "3872:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 714,
                        "name": "isas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 687,
                        "src": "3876:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        }
                      },
                      "id": 715,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3876:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3872:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 735,
                  "initializationExpression": {
                    "assignments": [
                      710
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 710,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3865:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 735,
                        "src": "3859:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 709,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3859:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 712,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 711,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3869:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3859:11:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3889:3:2",
                      "subExpression": {
                        "id": 717,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 710,
                        "src": "3889:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 719,
                    "nodeType": "ExpressionStatement",
                    "src": "3889:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "3854:143:2"
                },
                {
                  "expression": {
                    "id": 736,
                    "name": "isaSum",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 706,
                    "src": "4016:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 691,
                  "id": 737,
                  "nodeType": "Return",
                  "src": "4009:13:2"
                }
              ]
            },
            "documentation": {
              "id": 683,
              "nodeType": "StructuredDocumentation",
              "src": "3623:67:2",
              "text": " @dev Sum the ISA\n @param isas The isas values"
            },
            "id": 739,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sumIsa",
            "nameLocation": "3705:6:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 688,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 687,
                  "mutability": "mutable",
                  "name": "isas",
                  "nameLocation": "3728:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 739,
                  "src": "3712:20:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                    "typeString": "uint256[][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 684,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3712:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 685,
                      "nodeType": "ArrayTypeName",
                      "src": "3712:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      }
                    },
                    "id": 686,
                    "nodeType": "ArrayTypeName",
                    "src": "3712:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                      "typeString": "uint256[][]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3711:22:2"
            },
            "returnParameters": {
              "id": 691,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 690,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 739,
                  "src": "3756:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 689,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3756:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3755:6:2"
            },
            "scope": 995,
            "src": "3696:334:2",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 843,
              "nodeType": "Block",
              "src": "4468:831:2",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_InspectionStatus_$417",
                      "typeString": "enum InspectionContract.InspectionStatus"
                    },
                    "id": 762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 756,
                          "name": "inspections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 457,
                          "src": "4483:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$442_storage_$",
                            "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                          }
                        },
                        "id": 758,
                        "indexExpression": {
                          "id": 757,
                          "name": "inspectionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 742,
                          "src": "4495:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4483:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$442_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      },
                      "id": 759,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 425,
                      "src": "4483:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_InspectionStatus_$417",
                        "typeString": "enum InspectionContract.InspectionStatus"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 760,
                        "name": "InspectionStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 417,
                        "src": "4519:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_InspectionStatus_$417_$",
                          "typeString": "type(enum InspectionContract.InspectionStatus)"
                        }
                      },
                      "id": 761,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ACCEPTED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 416,
                      "src": "4519:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_InspectionStatus_$417",
                        "typeString": "enum InspectionContract.InspectionStatus"
                      }
                    },
                    "src": "4483:61:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 765,
                  "nodeType": "IfStatement",
                  "src": "4479:79:2",
                  "trueBody": {
                    "expression": {
                      "hexValue": "66616c7365",
                      "id": 763,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4553:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "functionReturnParameters": 755,
                    "id": 764,
                    "nodeType": "Return",
                    "src": "4546:12:2"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 766,
                          "name": "inspections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 457,
                          "src": "4573:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$442_storage_$",
                            "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                          }
                        },
                        "id": 768,
                        "indexExpression": {
                          "id": 767,
                          "name": "inspectionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 742,
                          "src": "4585:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4573:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$442_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      },
                      "id": 769,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "activistWallet",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 429,
                      "src": "4573:40:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 770,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "4617:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4617:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4573:54:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 775,
                  "nodeType": "IfStatement",
                  "src": "4569:72:2",
                  "trueBody": {
                    "expression": {
                      "hexValue": "66616c7365",
                      "id": 773,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4636:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "functionReturnParameters": 755,
                    "id": 774,
                    "nodeType": "Return",
                    "src": "4629:12:2"
                  }
                },
                {
                  "expression": {
                    "id": 781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 776,
                          "name": "inspections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 457,
                          "src": "4731:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$442_storage_$",
                            "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                          }
                        },
                        "id": 778,
                        "indexExpression": {
                          "id": 777,
                          "name": "inspectionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 742,
                          "src": "4743:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4731:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$442_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      },
                      "id": 779,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isas",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 433,
                      "src": "4731:30:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage",
                        "typeString": "uint256[] storage ref[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 780,
                      "name": "isas",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 746,
                      "src": "4764:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                        "typeString": "uint256[] memory[] memory"
                      }
                    },
                    "src": "4731:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage",
                      "typeString": "uint256[] storage ref[] storage ref"
                    }
                  },
                  "id": 782,
                  "nodeType": "ExpressionStatement",
                  "src": "4731:37:2"
                },
                {
                  "expression": {
                    "id": 789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 783,
                          "name": "inspections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 457,
                          "src": "4779:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$442_storage_$",
                            "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                          }
                        },
                        "id": 785,
                        "indexExpression": {
                          "id": 784,
                          "name": "inspectionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 742,
                          "src": "4791:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4779:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$442_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      },
                      "id": 786,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 425,
                      "src": "4779:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_InspectionStatus_$417",
                        "typeString": "enum InspectionContract.InspectionStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 787,
                        "name": "InspectionStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 417,
                        "src": "4814:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_InspectionStatus_$417_$",
                          "typeString": "type(enum InspectionContract.InspectionStatus)"
                        }
                      },
                      "id": 788,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "INSPECTED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 415,
                      "src": "4814:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_InspectionStatus_$417",
                        "typeString": "enum InspectionContract.InspectionStatus"
                      }
                    },
                    "src": "4779:61:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_InspectionStatus_$417",
                      "typeString": "enum InspectionContract.InspectionStatus"
                    }
                  },
                  "id": 790,
                  "nodeType": "ExpressionStatement",
                  "src": "4779:61:2"
                },
                {
                  "expression": {
                    "id": 800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 791,
                          "name": "inspections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 457,
                          "src": "4851:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$442_storage_$",
                            "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                          }
                        },
                        "id": 793,
                        "indexExpression": {
                          "id": 792,
                          "name": "inspectionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 742,
                          "src": "4863:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4851:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$442_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      },
                      "id": 794,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isaAverage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 435,
                      "src": "4851:36:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 796,
                            "name": "inspections",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 457,
                            "src": "4903:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$442_storage_$",
                              "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                            }
                          },
                          "id": 798,
                          "indexExpression": {
                            "id": 797,
                            "name": "inspectionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 742,
                            "src": "4915:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4903:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Inspection_$442_storage",
                            "typeString": "struct InspectionContract.Inspection storage ref"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Inspection_$442_storage",
                            "typeString": "struct InspectionContract.Inspection storage ref"
                          }
                        ],
                        "id": 795,
                        "name": "calculateIsa",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 682,
                        "src": "4890:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_struct$_Inspection_$442_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (struct InspectionContract.Inspection memory) pure returns (uint256)"
                        }
                      },
                      "id": 799,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4890:39:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4851:78:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 801,
                  "nodeType": "ExpressionStatement",
                  "src": "4851:78:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 803,
                        "name": "inspectionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 742,
                        "src": "4963:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 802,
                      "name": "afterRealizeInspection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 969,
                      "src": "4940:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4940:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 805,
                  "nodeType": "ExpressionStatement",
                  "src": "4940:36:2"
                },
                {
                  "expression": {
                    "id": 814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 806,
                          "name": "inspectionsArray",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 446,
                          "src": "4989:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Inspection_$442_storage_$dyn_storage",
                            "typeString": "struct InspectionContract.Inspection storage ref[] storage ref"
                          }
                        },
                        "id": 811,
                        "indexExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 807,
                              "name": "inspections",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 457,
                              "src": "5006:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$442_storage_$",
                                "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                              }
                            },
                            "id": 809,
                            "indexExpression": {
                              "id": 808,
                              "name": "inspectionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 742,
                              "src": "5018:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5006:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Inspection_$442_storage",
                              "typeString": "struct InspectionContract.Inspection storage ref"
                            }
                          },
                          "id": 810,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "index",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 441,
                          "src": "5006:31:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4989:49:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$442_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      },
                      "id": 812,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isas",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 433,
                      "src": "4989:54:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage",
                        "typeString": "uint256[] storage ref[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 813,
                      "name": "isas",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 746,
                      "src": "5046:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                        "typeString": "uint256[] memory[] memory"
                      }
                    },
                    "src": "4989:61:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage",
                      "typeString": "uint256[] storage ref[] storage ref"
                    }
                  },
                  "id": 815,
                  "nodeType": "ExpressionStatement",
                  "src": "4989:61:2"
                },
                {
                  "expression": {
                    "id": 828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 816,
                          "name": "inspectionsArray",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 446,
                          "src": "5061:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Inspection_$442_storage_$dyn_storage",
                            "typeString": "struct InspectionContract.Inspection storage ref[] storage ref"
                          }
                        },
                        "id": 821,
                        "indexExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 817,
                              "name": "inspections",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 457,
                              "src": "5078:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$442_storage_$",
                                "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                              }
                            },
                            "id": 819,
                            "indexExpression": {
                              "id": 818,
                              "name": "inspectionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 742,
                              "src": "5090:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5078:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Inspection_$442_storage",
                              "typeString": "struct InspectionContract.Inspection storage ref"
                            }
                          },
                          "id": 820,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "index",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 441,
                          "src": "5078:31:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5061:49:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$442_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      },
                      "id": 822,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isaAverage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 435,
                      "src": "5061:60:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 824,
                            "name": "inspections",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 457,
                            "src": "5137:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$442_storage_$",
                              "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                            }
                          },
                          "id": 826,
                          "indexExpression": {
                            "id": 825,
                            "name": "inspectionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 742,
                            "src": "5149:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5137:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Inspection_$442_storage",
                            "typeString": "struct InspectionContract.Inspection storage ref"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Inspection_$442_storage",
                            "typeString": "struct InspectionContract.Inspection storage ref"
                          }
                        ],
                        "id": 823,
                        "name": "calculateIsa",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 682,
                        "src": "5124:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_struct$_Inspection_$442_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (struct InspectionContract.Inspection memory) pure returns (uint256)"
                        }
                      },
                      "id": 827,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5124:39:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5061:102:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 829,
                  "nodeType": "ExpressionStatement",
                  "src": "5061:102:2"
                },
                {
                  "expression": {
                    "id": 839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 830,
                          "name": "inspectionsArray",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 446,
                          "src": "5174:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Inspection_$442_storage_$dyn_storage",
                            "typeString": "struct InspectionContract.Inspection storage ref[] storage ref"
                          }
                        },
                        "id": 835,
                        "indexExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 831,
                              "name": "inspections",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 457,
                              "src": "5191:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$442_storage_$",
                                "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                              }
                            },
                            "id": 833,
                            "indexExpression": {
                              "id": 832,
                              "name": "inspectionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 742,
                              "src": "5203:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5191:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Inspection_$442_storage",
                              "typeString": "struct InspectionContract.Inspection storage ref"
                            }
                          },
                          "id": 834,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "index",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 441,
                          "src": "5191:31:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5174:49:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$442_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      },
                      "id": 836,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 425,
                      "src": "5174:56:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_InspectionStatus_$417",
                        "typeString": "enum InspectionContract.InspectionStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 837,
                        "name": "InspectionStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 417,
                        "src": "5233:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_InspectionStatus_$417_$",
                          "typeString": "type(enum InspectionContract.InspectionStatus)"
                        }
                      },
                      "id": 838,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "INSPECTED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 415,
                      "src": "5233:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_InspectionStatus_$417",
                        "typeString": "enum InspectionContract.InspectionStatus"
                      }
                    },
                    "src": "5174:85:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_InspectionStatus_$417",
                      "typeString": "enum InspectionContract.InspectionStatus"
                    }
                  },
                  "id": 840,
                  "nodeType": "ExpressionStatement",
                  "src": "5174:85:2"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5287:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 755,
                  "id": 842,
                  "nodeType": "Return",
                  "src": "5280:11:2"
                }
              ]
            },
            "documentation": {
              "id": 740,
              "nodeType": "StructuredDocumentation",
              "src": "4042:276:2",
              "text": " @dev Allow a activist realize a inspection and mark as INSPECTED\n @param inspectionId The id of the inspection to be realized\n @param isas The uint[][] of categoryId and isaIndex. Ex: isas = [ [categoryId, isaIndex], [categoryId, isaIndex] ]"
            },
            "functionSelector": "b92bd2d9",
            "id": 844,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 749,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 748,
                  "name": "requireActivist",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 981,
                  "src": "4400:15:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "4400:15:2"
              },
              {
                "arguments": [
                  {
                    "id": 751,
                    "name": "inspectionId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 742,
                    "src": "4440:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 752,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 750,
                  "name": "requireInspectionExists",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 994,
                  "src": "4416:23:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "4416:37:2"
              }
            ],
            "name": "realizeInspection",
            "nameLocation": "4334:17:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 747,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 742,
                  "mutability": "mutable",
                  "name": "inspectionId",
                  "nameLocation": "4357:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 844,
                  "src": "4352:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 741,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4352:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 746,
                  "mutability": "mutable",
                  "name": "isas",
                  "nameLocation": "4387:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 844,
                  "src": "4371:20:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                    "typeString": "uint256[][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 743,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4371:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 744,
                      "nodeType": "ArrayTypeName",
                      "src": "4371:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      }
                    },
                    "id": 745,
                    "nodeType": "ArrayTypeName",
                    "src": "4371:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                      "typeString": "uint256[][]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4351:41:2"
            },
            "returnParameters": {
              "id": 755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 754,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 844,
                  "src": "4462:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 753,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4462:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4461:6:2"
            },
            "scope": 995,
            "src": "4325:974:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 857,
              "nodeType": "Block",
              "src": "5509:41:2",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 853,
                      "name": "inspections",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 457,
                      "src": "5527:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$442_storage_$",
                        "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                      }
                    },
                    "id": 855,
                    "indexExpression": {
                      "id": 854,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 847,
                      "src": "5539:2:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5527:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$442_storage",
                      "typeString": "struct InspectionContract.Inspection storage ref"
                    }
                  },
                  "functionReturnParameters": 852,
                  "id": 856,
                  "nodeType": "Return",
                  "src": "5520:22:2"
                }
              ]
            },
            "documentation": {
              "id": 845,
              "nodeType": "StructuredDocumentation",
              "src": "5313:116:2",
              "text": " @dev Returns a inspection by id if that exists.\n @param id The id of the inspection to return."
            },
            "functionSelector": "f2836670",
            "id": 858,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInspection",
            "nameLocation": "5444:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 848,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 847,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "5466:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 858,
                  "src": "5458:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 846,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5458:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5457:12:2"
            },
            "returnParameters": {
              "id": 852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 851,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 858,
                  "src": "5490:17:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Inspection_$442_memory_ptr",
                    "typeString": "struct InspectionContract.Inspection"
                  },
                  "typeName": {
                    "id": 850,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 849,
                      "name": "Inspection",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 442,
                      "src": "5490:10:2"
                    },
                    "referencedDeclaration": 442,
                    "src": "5490:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$442_storage_ptr",
                      "typeString": "struct InspectionContract.Inspection"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5489:19:2"
            },
            "scope": 995,
            "src": "5435:115:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 868,
              "nodeType": "Block",
              "src": "5692:42:2",
              "statements": [
                {
                  "expression": {
                    "id": 866,
                    "name": "inspectionsArray",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 446,
                    "src": "5710:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Inspection_$442_storage_$dyn_storage",
                      "typeString": "struct InspectionContract.Inspection storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 865,
                  "id": 867,
                  "nodeType": "Return",
                  "src": "5703:23:2"
                }
              ]
            },
            "documentation": {
              "id": 859,
              "nodeType": "StructuredDocumentation",
              "src": "5562:56:2",
              "text": " @dev Returns all requested inspections."
            },
            "functionSelector": "ee699fc1",
            "id": 869,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInspections",
            "nameLocation": "5633:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 860,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5647:2:2"
            },
            "returnParameters": {
              "id": 865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 864,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 869,
                  "src": "5671:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Inspection_$442_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct InspectionContract.Inspection[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 862,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 861,
                        "name": "Inspection",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 442,
                        "src": "5671:10:2"
                      },
                      "referencedDeclaration": 442,
                      "src": "5671:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$442_storage_ptr",
                        "typeString": "struct InspectionContract.Inspection"
                      }
                    },
                    "id": 863,
                    "nodeType": "ArrayTypeName",
                    "src": "5671:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Inspection_$442_storage_$dyn_storage_ptr",
                      "typeString": "struct InspectionContract.Inspection[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5670:21:2"
            },
            "scope": 995,
            "src": "5624:110:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 887,
              "nodeType": "Block",
              "src": "5923:70:2",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "4f50454e",
                        "id": 881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5942:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f76fe33b8a0ebf7aa05740f479d10138c7c15bdc75b10e047cc15be2be15e5b4",
                          "typeString": "literal_string \"OPEN\""
                        },
                        "value": "OPEN"
                      },
                      {
                        "hexValue": "45585049524544",
                        "id": 882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5950:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd725cfb5ba01ea5dc5a7159cf41eaa54c28dc001805ce2361d3c894e7c2f72a",
                          "typeString": "literal_string \"EXPIRED\""
                        },
                        "value": "EXPIRED"
                      },
                      {
                        "hexValue": "494e53504543544544",
                        "id": 883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5961:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee5396ce4732a0f90688f3919520a56ad5e5581ce25fa727e167ca44cbd5926f",
                          "typeString": "literal_string \"INSPECTED\""
                        },
                        "value": "INSPECTED"
                      },
                      {
                        "hexValue": "4143434550544544",
                        "id": 884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5974:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_66a524c81cf8e657f1147e56f41f83002f6210ee7ae7b08d255f786088ae96f7",
                          "typeString": "literal_string \"ACCEPTED\""
                        },
                        "value": "ACCEPTED"
                      }
                    ],
                    "id": 885,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5941:44:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_stringliteral_f76fe33b8a0ebf7aa05740f479d10138c7c15bdc75b10e047cc15be2be15e5b4_$_t_stringliteral_bd725cfb5ba01ea5dc5a7159cf41eaa54c28dc001805ce2361d3c894e7c2f72a_$_t_stringliteral_ee5396ce4732a0f90688f3919520a56ad5e5581ce25fa727e167ca44cbd5926f_$_t_stringliteral_66a524c81cf8e657f1147e56f41f83002f6210ee7ae7b08d255f786088ae96f7_$",
                      "typeString": "tuple(literal_string \"OPEN\",literal_string \"EXPIRED\",literal_string \"INSPECTED\",literal_string \"ACCEPTED\")"
                    }
                  },
                  "functionReturnParameters": 880,
                  "id": 886,
                  "nodeType": "Return",
                  "src": "5934:51:2"
                }
              ]
            },
            "documentation": {
              "id": 870,
              "nodeType": "StructuredDocumentation",
              "src": "5746:59:2",
              "text": " @dev Returns all inpections status string."
            },
            "functionSelector": "dd6850c6",
            "id": 888,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInspectionsStatus",
            "nameLocation": "5820:20:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 871,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5840:2:2"
            },
            "returnParameters": {
              "id": 880,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 873,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 888,
                  "src": "5863:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 872,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5863:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 875,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 888,
                  "src": "5878:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 874,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5878:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 877,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 888,
                  "src": "5893:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 876,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5893:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 879,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 888,
                  "src": "5908:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 878,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5908:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5862:60:2"
            },
            "scope": 995,
            "src": "5811:182:2",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 903,
              "nodeType": "Block",
              "src": "6211:49:2",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 896,
                          "name": "inspections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 457,
                          "src": "6229:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$442_storage_$",
                            "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                          }
                        },
                        "id": 898,
                        "indexExpression": {
                          "id": 897,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 891,
                          "src": "6241:2:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6229:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$442_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      },
                      "id": 899,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 422,
                      "src": "6229:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 900,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6251:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "6229:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 895,
                  "id": 902,
                  "nodeType": "Return",
                  "src": "6222:30:2"
                }
              ]
            },
            "documentation": {
              "id": 889,
              "nodeType": "StructuredDocumentation",
              "src": "6005:136:2",
              "text": " @dev Check if an inspections exists in mapping.\n @param id The id of the inspection that the activist want accept."
            },
            "functionSelector": "fe5a4fa4",
            "id": 904,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "inspectionExists",
            "nameLocation": "6156:16:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 892,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 891,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "6181:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 904,
                  "src": "6173:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 890,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6173:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6172:12:2"
            },
            "returnParameters": {
              "id": 895,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 894,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 904,
                  "src": "6205:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 893,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6205:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6204:6:2"
            },
            "scope": 995,
            "src": "6147:113:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 968,
              "nodeType": "Block",
              "src": "6514:728:2",
              "statements": [
                {
                  "assignments": [
                    911
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 911,
                      "mutability": "mutable",
                      "name": "producerWallet",
                      "nameLocation": "6533:14:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 968,
                      "src": "6525:22:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 910,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6525:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 916,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 912,
                        "name": "inspections",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 457,
                        "src": "6550:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$442_storage_$",
                          "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                        }
                      },
                      "id": 914,
                      "indexExpression": {
                        "id": 913,
                        "name": "inspectionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 907,
                        "src": "6562:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6550:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$442_storage",
                        "typeString": "struct InspectionContract.Inspection storage ref"
                      }
                    },
                    "id": 915,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "producerWallet",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 427,
                    "src": "6550:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6525:65:2"
                },
                {
                  "assignments": [
                    918
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 918,
                      "mutability": "mutable",
                      "name": "activistWallet",
                      "nameLocation": "6609:14:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 968,
                      "src": "6601:22:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 917,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6601:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 923,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 919,
                        "name": "inspections",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 457,
                        "src": "6626:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$442_storage_$",
                          "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                        }
                      },
                      "id": 921,
                      "indexExpression": {
                        "id": 920,
                        "name": "inspectionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 907,
                        "src": "6638:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6626:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$442_storage",
                        "typeString": "struct InspectionContract.Inspection storage ref"
                      }
                    },
                    "id": 922,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "activistWallet",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 429,
                    "src": "6626:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6601:65:2"
                },
                {
                  "expression": {
                    "id": 929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 924,
                          "name": "activists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "6770:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Activist_$25_storage_$",
                            "typeString": "mapping(address => struct ActivistContract.Activist storage ref)"
                          }
                        },
                        "id": 926,
                        "indexExpression": {
                          "id": 925,
                          "name": "activistWallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 918,
                          "src": "6780:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6770:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Activist_$25_storage",
                          "typeString": "struct ActivistContract.Activist storage ref"
                        }
                      },
                      "id": 927,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "recentInspection",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19,
                      "src": "6770:42:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 928,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6815:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "6770:50:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 930,
                  "nodeType": "ExpressionStatement",
                  "src": "6770:50:2"
                },
                {
                  "expression": {
                    "id": 935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "6831:44:2",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 931,
                          "name": "activists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "6831:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Activist_$25_storage_$",
                            "typeString": "mapping(address => struct ActivistContract.Activist storage ref)"
                          }
                        },
                        "id": 933,
                        "indexExpression": {
                          "id": 932,
                          "name": "activistWallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 918,
                          "src": "6841:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6831:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Activist_$25_storage",
                          "typeString": "struct ActivistContract.Activist storage ref"
                        }
                      },
                      "id": 934,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalInspections",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "6831:42:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 936,
                  "nodeType": "ExpressionStatement",
                  "src": "6831:44:2"
                },
                {
                  "expression": {
                    "id": 942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 937,
                          "name": "producers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1075,
                          "src": "6974:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Producer_$1057_storage_$",
                            "typeString": "mapping(address => struct ProducerContract.Producer storage ref)"
                          }
                        },
                        "id": 939,
                        "indexExpression": {
                          "id": 938,
                          "name": "producerWallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 911,
                          "src": "6984:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6974:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Producer_$1057_storage",
                          "typeString": "struct ProducerContract.Producer storage ref"
                        }
                      },
                      "id": 940,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "recentInspection",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1049,
                      "src": "6974:42:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 941,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7019:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "6974:50:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 943,
                  "nodeType": "ExpressionStatement",
                  "src": "6974:50:2"
                },
                {
                  "expression": {
                    "id": 948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "7035:41:2",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 944,
                          "name": "producers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1075,
                          "src": "7035:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Producer_$1057_storage_$",
                            "typeString": "mapping(address => struct ProducerContract.Producer storage ref)"
                          }
                        },
                        "id": 946,
                        "indexExpression": {
                          "id": 945,
                          "name": "producerWallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 911,
                          "src": "7045:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7035:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Producer_$1057_storage",
                          "typeString": "struct ProducerContract.Producer storage ref"
                        }
                      },
                      "id": 947,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalRequests",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1051,
                      "src": "7035:39:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 949,
                  "nodeType": "ExpressionStatement",
                  "src": "7035:41:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 954,
                          "name": "inspections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 457,
                          "src": "7134:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$442_storage_$",
                            "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                          }
                        },
                        "id": 956,
                        "indexExpression": {
                          "id": 955,
                          "name": "inspectionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 907,
                          "src": "7146:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7134:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$442_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Inspection_$442_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 950,
                          "name": "userInspections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 452,
                          "src": "7097:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Inspection_$442_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct InspectionContract.Inspection storage ref[] storage ref)"
                          }
                        },
                        "id": 952,
                        "indexExpression": {
                          "id": 951,
                          "name": "producerWallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 911,
                          "src": "7113:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7097:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Inspection_$442_storage_$dyn_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref[] storage ref"
                        }
                      },
                      "id": 953,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "7097:36:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Inspection_$442_storage_$dyn_storage_ptr_$_t_struct$_Inspection_$442_storage_$returns$__$bound_to$_t_array$_t_struct$_Inspection_$442_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct InspectionContract.Inspection storage ref[] storage pointer,struct InspectionContract.Inspection storage ref)"
                      }
                    },
                    "id": 957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7097:63:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 958,
                  "nodeType": "ExpressionStatement",
                  "src": "7097:63:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 963,
                          "name": "inspections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 457,
                          "src": "7208:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$442_storage_$",
                            "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                          }
                        },
                        "id": 965,
                        "indexExpression": {
                          "id": 964,
                          "name": "inspectionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 907,
                          "src": "7220:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7208:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$442_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Inspection_$442_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 959,
                          "name": "userInspections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 452,
                          "src": "7171:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Inspection_$442_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct InspectionContract.Inspection storage ref[] storage ref)"
                          }
                        },
                        "id": 961,
                        "indexExpression": {
                          "id": 960,
                          "name": "activistWallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 918,
                          "src": "7187:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7171:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Inspection_$442_storage_$dyn_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref[] storage ref"
                        }
                      },
                      "id": 962,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "7171:36:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Inspection_$442_storage_$dyn_storage_ptr_$_t_struct$_Inspection_$442_storage_$returns$__$bound_to$_t_array$_t_struct$_Inspection_$442_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct InspectionContract.Inspection storage ref[] storage pointer,struct InspectionContract.Inspection storage ref)"
                      }
                    },
                    "id": 966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7171:63:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 967,
                  "nodeType": "ExpressionStatement",
                  "src": "7171:63:2"
                }
              ]
            },
            "documentation": {
              "id": 905,
              "nodeType": "StructuredDocumentation",
              "src": "6272:176:2",
              "text": " @dev Inscrement producer and activist request action and mark both as no recent open requests and inspection\n @param inspectionId The id of the inspection"
            },
            "id": 969,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "afterRealizeInspection",
            "nameLocation": "6463:22:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 908,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 907,
                  "mutability": "mutable",
                  "name": "inspectionId",
                  "nameLocation": "6491:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 969,
                  "src": "6486:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 906,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6486:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6485:19:2"
            },
            "returnParameters": {
              "id": 909,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6514:0:2"
            },
            "scope": 995,
            "src": "6454:788:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 980,
              "nodeType": "Block",
              "src": "7305:117:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 973,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "7339:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 974,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7339:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 972,
                          "name": "activistExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 178,
                          "src": "7324:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7324:26:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206d75737420626520616e2061637469766973742120506c65617365207265676973746572206173206f6e65",
                        "id": 976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7352:49:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7bbfd9faa9484f9e64abeb985fc471aa16487b87a888d85c1e82273be1ee2169",
                          "typeString": "literal_string \"You must be an activist! Please register as one\""
                        },
                        "value": "You must be an activist! Please register as one"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7bbfd9faa9484f9e64abeb985fc471aa16487b87a888d85c1e82273be1ee2169",
                          "typeString": "literal_string \"You must be an activist! Please register as one\""
                        }
                      ],
                      "id": 971,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7316:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7316:86:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 978,
                  "nodeType": "ExpressionStatement",
                  "src": "7316:86:2"
                },
                {
                  "id": 979,
                  "nodeType": "PlaceholderStatement",
                  "src": "7413:1:2"
                }
              ]
            },
            "id": 981,
            "name": "requireActivist",
            "nameLocation": "7287:15:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 970,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7302:2:2"
            },
            "src": "7278:144:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 993,
              "nodeType": "Block",
              "src": "7486:102:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 987,
                            "name": "inspectionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 983,
                            "src": "7522:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 986,
                          "name": "inspectionExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 904,
                          "src": "7505:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7505:30:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320696e7370656374696f6e20646f6e277420657869737473",
                        "id": 989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7537:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_27cfb18fb102385a5a6ad3d3f29c4023f127e18857272a0d2d3c2847a7e8e217",
                          "typeString": "literal_string \"This inspection don't exists\""
                        },
                        "value": "This inspection don't exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_27cfb18fb102385a5a6ad3d3f29c4023f127e18857272a0d2d3c2847a7e8e217",
                          "typeString": "literal_string \"This inspection don't exists\""
                        }
                      ],
                      "id": 985,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7497:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7497:71:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 991,
                  "nodeType": "ExpressionStatement",
                  "src": "7497:71:2"
                },
                {
                  "id": 992,
                  "nodeType": "PlaceholderStatement",
                  "src": "7579:1:2"
                }
              ]
            },
            "id": 994,
            "name": "requireInspectionExists",
            "nameLocation": "7443:23:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 984,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 983,
                  "mutability": "mutable",
                  "name": "inspectionId",
                  "nameLocation": "7472:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 994,
                  "src": "7467:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 982,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7467:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7466:19:2"
            },
            "src": "7434:154:2",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 996,
        "src": "256:7341:2",
        "usedErrors": []
      }
    ],
    "src": "0:7599:2"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Breno/Downloads/SintropContract/contracts/InspectionContract.sol",
    "exportedSymbols": {
      "ActivistContract": [
        179
      ],
      "CategoryContract": [
        400
      ],
      "InspectionContract": [
        995
      ],
      "ProducerContract": [
        1212
      ],
      "UserContract": [
        1366
      ]
    },
    "id": 996,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 402,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<=",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:2"
      },
      {
        "absolutePath": "/C/Users/Breno/Downloads/SintropContract/contracts/ProducerContract.sol",
        "file": "./ProducerContract.sol",
        "id": 403,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 996,
        "sourceUnit": 1213,
        "src": "82:32:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/Breno/Downloads/SintropContract/contracts/ActivistContract.sol",
        "file": "./ActivistContract.sol",
        "id": 404,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 996,
        "sourceUnit": 180,
        "src": "116:32:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/Breno/Downloads/SintropContract/contracts/CategoryContract.sol",
        "file": "./CategoryContract.sol",
        "id": 405,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 996,
        "sourceUnit": 401,
        "src": "150:32:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 407,
              "name": "ProducerContract",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1212,
              "src": "287:16:2"
            },
            "id": 408,
            "nodeType": "InheritanceSpecifier",
            "src": "287:16:2"
          },
          {
            "baseName": {
              "id": 409,
              "name": "ActivistContract",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 179,
              "src": "305:16:2"
            },
            "id": 410,
            "nodeType": "InheritanceSpecifier",
            "src": "305:16:2"
          },
          {
            "baseName": {
              "id": 411,
              "name": "CategoryContract",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 400,
              "src": "323:16:2"
            },
            "id": 412,
            "nodeType": "InheritanceSpecifier",
            "src": "323:16:2"
          }
        ],
        "canonicalName": "InspectionContract",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 406,
          "nodeType": "StructuredDocumentation",
          "src": "188:66:2",
          "text": " @title InspectionContract\n @dev Inpection action core"
        },
        "fullyImplemented": true,
        "id": 995,
        "linearizedBaseContracts": [
          995,
          400,
          179,
          1212,
          1366
        ],
        "name": "InspectionContract",
        "nameLocation": "265:18:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "InspectionContract.InspectionStatus",
            "id": 417,
            "members": [
              {
                "id": 413,
                "name": "OPEN",
                "nameLocation": "371:4:2",
                "nodeType": "EnumValue",
                "src": "371:4:2"
              },
              {
                "id": 414,
                "name": "EXPIRED",
                "nameLocation": "377:7:2",
                "nodeType": "EnumValue",
                "src": "377:7:2"
              },
              {
                "id": 415,
                "name": "INSPECTED",
                "nameLocation": "386:9:2",
                "nodeType": "EnumValue",
                "src": "386:9:2"
              },
              {
                "id": 416,
                "name": "ACCEPTED",
                "nameLocation": "397:8:2",
                "nodeType": "EnumValue",
                "src": "397:8:2"
              }
            ],
            "name": "InspectionStatus",
            "nameLocation": "352:16:2",
            "nodeType": "EnumDefinition",
            "src": "347:60:2"
          },
          {
            "constant": false,
            "id": 420,
            "mutability": "mutable",
            "name": "inspactionExpireIn",
            "nameLocation": "419:18:2",
            "nodeType": "VariableDeclaration",
            "scope": 995,
            "src": "414:32:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 418,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "414:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "363034383030",
              "id": 419,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "440:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_604800_by_1",
                "typeString": "int_const 604800"
              },
              "value": "604800"
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "InspectionContract.Inspection",
            "id": 442,
            "members": [
              {
                "constant": false,
                "id": 422,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "507:2:2",
                "nodeType": "VariableDeclaration",
                "scope": 442,
                "src": "502:7:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 421,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "502:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 425,
                "mutability": "mutable",
                "name": "status",
                "nameLocation": "537:6:2",
                "nodeType": "VariableDeclaration",
                "scope": 442,
                "src": "520:23:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_InspectionStatus_$417",
                  "typeString": "enum InspectionContract.InspectionStatus"
                },
                "typeName": {
                  "id": 424,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 423,
                    "name": "InspectionStatus",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 417,
                    "src": "520:16:2"
                  },
                  "referencedDeclaration": 417,
                  "src": "520:16:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_InspectionStatus_$417",
                    "typeString": "enum InspectionContract.InspectionStatus"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 427,
                "mutability": "mutable",
                "name": "producerWallet",
                "nameLocation": "562:14:2",
                "nodeType": "VariableDeclaration",
                "scope": 442,
                "src": "554:22:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 426,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "554:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 429,
                "mutability": "mutable",
                "name": "activistWallet",
                "nameLocation": "595:14:2",
                "nodeType": "VariableDeclaration",
                "scope": 442,
                "src": "587:22:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 428,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "587:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 433,
                "mutability": "mutable",
                "name": "isas",
                "nameLocation": "629:4:2",
                "nodeType": "VariableDeclaration",
                "scope": 442,
                "src": "620:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                  "typeString": "uint256[][]"
                },
                "typeName": {
                  "baseType": {
                    "baseType": {
                      "id": 430,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "620:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 431,
                    "nodeType": "ArrayTypeName",
                    "src": "620:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "id": 432,
                  "nodeType": "ArrayTypeName",
                  "src": "620:8:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                    "typeString": "uint256[][]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 435,
                "mutability": "mutable",
                "name": "isaAverage",
                "nameLocation": "649:10:2",
                "nodeType": "VariableDeclaration",
                "scope": 442,
                "src": "644:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 434,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "644:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 437,
                "mutability": "mutable",
                "name": "expiresIn",
                "nameLocation": "675:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 442,
                "src": "670:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 436,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "670:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 439,
                "mutability": "mutable",
                "name": "createdAt",
                "nameLocation": "700:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 442,
                "src": "695:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 438,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "695:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 441,
                "mutability": "mutable",
                "name": "index",
                "nameLocation": "725:5:2",
                "nodeType": "VariableDeclaration",
                "scope": 442,
                "src": "720:10:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 440,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "720:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Inspection",
            "nameLocation": "480:10:2",
            "nodeType": "StructDefinition",
            "scope": 995,
            "src": "473:265:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 446,
            "mutability": "mutable",
            "name": "inspectionsArray",
            "nameLocation": "763:16:2",
            "nodeType": "VariableDeclaration",
            "scope": 995,
            "src": "750:29:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Inspection_$442_storage_$dyn_storage",
              "typeString": "struct InspectionContract.Inspection[]"
            },
            "typeName": {
              "baseType": {
                "id": 444,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 443,
                  "name": "Inspection",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 442,
                  "src": "750:10:2"
                },
                "referencedDeclaration": 442,
                "src": "750:10:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Inspection_$442_storage_ptr",
                  "typeString": "struct InspectionContract.Inspection"
                }
              },
              "id": 445,
              "nodeType": "ArrayTypeName",
              "src": "750:12:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Inspection_$442_storage_$dyn_storage_ptr",
                "typeString": "struct InspectionContract.Inspection[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 452,
            "mutability": "mutable",
            "name": "userInspections",
            "nameLocation": "819:15:2",
            "nodeType": "VariableDeclaration",
            "scope": 995,
            "src": "786:48:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Inspection_$442_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct InspectionContract.Inspection[])"
            },
            "typeName": {
              "id": 451,
              "keyType": {
                "id": 447,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "794:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "786:32:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Inspection_$442_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct InspectionContract.Inspection[])"
              },
              "valueType": {
                "baseType": {
                  "id": 449,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 448,
                    "name": "Inspection",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 442,
                    "src": "805:10:2"
                  },
                  "referencedDeclaration": 442,
                  "src": "805:10:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Inspection_$442_storage_ptr",
                    "typeString": "struct InspectionContract.Inspection"
                  }
                },
                "id": 450,
                "nodeType": "ArrayTypeName",
                "src": "805:12:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Inspection_$442_storage_$dyn_storage_ptr",
                  "typeString": "struct InspectionContract.Inspection[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 457,
            "mutability": "mutable",
            "name": "inspections",
            "nameLocation": "872:11:2",
            "nodeType": "VariableDeclaration",
            "scope": 995,
            "src": "841:42:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$442_storage_$",
              "typeString": "mapping(uint256 => struct InspectionContract.Inspection)"
            },
            "typeName": {
              "id": 456,
              "keyType": {
                "id": 453,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "849:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "841:30:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$442_storage_$",
                "typeString": "mapping(uint256 => struct InspectionContract.Inspection)"
              },
              "valueType": {
                "id": 455,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 454,
                  "name": "Inspection",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 442,
                  "src": "860:10:2"
                },
                "referencedDeclaration": 442,
                "src": "860:10:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Inspection_$442_storage_ptr",
                  "typeString": "struct InspectionContract.Inspection"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 459,
            "mutability": "mutable",
            "name": "inspectionsCount",
            "nameLocation": "898:16:2",
            "nodeType": "VariableDeclaration",
            "scope": 995,
            "src": "890:24:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 458,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "890:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 472,
              "nodeType": "Block",
              "src": "1118:53:2",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 467,
                      "name": "userInspections",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 452,
                      "src": "1136:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Inspection_$442_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct InspectionContract.Inspection storage ref[] storage ref)"
                      }
                    },
                    "id": 470,
                    "indexExpression": {
                      "expression": {
                        "id": 468,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1152:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 469,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1152:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1136:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Inspection_$442_storage_$dyn_storage",
                      "typeString": "struct InspectionContract.Inspection storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 466,
                  "id": 471,
                  "nodeType": "Return",
                  "src": "1129:34:2"
                }
              ]
            },
            "documentation": {
              "id": 460,
              "nodeType": "StructuredDocumentation",
              "src": "927:111:2",
              "text": " @dev Allows the current user producer/activist get all yours inspections with status INSPECTED"
            },
            "functionSelector": "0bbec3c2",
            "id": 473,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInspectionsHistory",
            "nameLocation": "1053:21:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 461,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1074:2:2"
            },
            "returnParameters": {
              "id": 466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 465,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 473,
                  "src": "1097:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Inspection_$442_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct InspectionContract.Inspection[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 463,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 462,
                        "name": "Inspection",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 442,
                        "src": "1097:10:2"
                      },
                      "referencedDeclaration": 442,
                      "src": "1097:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$442_storage_ptr",
                        "typeString": "struct InspectionContract.Inspection"
                      }
                    },
                    "id": 464,
                    "nodeType": "ArrayTypeName",
                    "src": "1097:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Inspection_$442_storage_$dyn_storage_ptr",
                      "typeString": "struct InspectionContract.Inspection[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1096:21:2"
            },
            "scope": 995,
            "src": "1044:127:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 516,
              "nodeType": "Block",
              "src": "1311:447:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 481,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1345:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 482,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1345:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 480,
                          "name": "producerExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1211,
                          "src": "1330:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1330:26:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520617265206e6f7420612070726f64756365722120506c65617365207265676973746572206173206f6e65",
                        "id": 484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1358:48:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dbb08f64851b685a0f36294d305e2db5057008a52567e5bdec9c2160a57b7398",
                          "typeString": "literal_string \"You are not a producer! Please register as one\""
                        },
                        "value": "You are not a producer! Please register as one"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dbb08f64851b685a0f36294d305e2db5057008a52567e5bdec9c2160a57b7398",
                          "typeString": "literal_string \"You are not a producer! Please register as one\""
                        }
                      ],
                      "id": 479,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1322:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1322:85:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 486,
                  "nodeType": "ExpressionStatement",
                  "src": "1322:85:2"
                },
                {
                  "assignments": [
                    489
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 489,
                      "mutability": "mutable",
                      "name": "producer",
                      "nameLocation": "1434:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 516,
                      "src": "1418:24:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Producer_$1057_memory_ptr",
                        "typeString": "struct ProducerContract.Producer"
                      },
                      "typeName": {
                        "id": 488,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 487,
                          "name": "Producer",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1057,
                          "src": "1418:8:2"
                        },
                        "referencedDeclaration": 1057,
                        "src": "1418:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Producer_$1057_storage_ptr",
                          "typeString": "struct ProducerContract.Producer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 494,
                  "initialValue": {
                    "baseExpression": {
                      "id": 490,
                      "name": "producers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1075,
                      "src": "1445:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Producer_$1057_storage_$",
                        "typeString": "mapping(address => struct ProducerContract.Producer storage ref)"
                      }
                    },
                    "id": 493,
                    "indexExpression": {
                      "expression": {
                        "id": 491,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1455:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1455:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1445:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Producer_$1057_storage",
                      "typeString": "struct ProducerContract.Producer storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1418:48:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 496,
                            "name": "producer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 489,
                            "src": "1485:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Producer_$1057_memory_ptr",
                              "typeString": "struct ProducerContract.Producer memory"
                            }
                          },
                          "id": 497,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "recentInspection",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1049,
                          "src": "1485:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1514:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "1485:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752068617665206120696e7370656374696f6e2072657175657374204f50454e206f722041434345505445442120576169742061206163746976697374207265616c697a6520696e7370656374696f6e206f7220796f752063616e20636c6f7365206974",
                        "id": 500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1521:104:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6c06c4f9d658f6d0bee949be33756e3bdf523e4cfb9cc40af70a6abee2364d7d",
                          "typeString": "literal_string \"You have a inspection request OPEN or ACCEPTED! Wait a activist realize inspection or you can close it\""
                        },
                        "value": "You have a inspection request OPEN or ACCEPTED! Wait a activist realize inspection or you can close it"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6c06c4f9d658f6d0bee949be33756e3bdf523e4cfb9cc40af70a6abee2364d7d",
                          "typeString": "literal_string \"You have a inspection request OPEN or ACCEPTED! Wait a activist realize inspection or you can close it\""
                        }
                      ],
                      "id": 495,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1477:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1477:149:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 502,
                  "nodeType": "ExpressionStatement",
                  "src": "1477:149:2"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 503,
                      "name": "createRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 581,
                      "src": "1647:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1647:15:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 505,
                  "nodeType": "ExpressionStatement",
                  "src": "1647:15:2"
                },
                {
                  "expression": {
                    "id": 512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 506,
                          "name": "producers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1075,
                          "src": "1673:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Producer_$1057_storage_$",
                            "typeString": "mapping(address => struct ProducerContract.Producer storage ref)"
                          }
                        },
                        "id": 509,
                        "indexExpression": {
                          "expression": {
                            "id": 507,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1683:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1683:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1673:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Producer_$1057_storage",
                          "typeString": "struct ProducerContract.Producer storage ref"
                        }
                      },
                      "id": 510,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "recentInspection",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1049,
                      "src": "1673:38:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 511,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1714:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1673:45:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 513,
                  "nodeType": "ExpressionStatement",
                  "src": "1673:45:2"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1746:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 478,
                  "id": 515,
                  "nodeType": "Return",
                  "src": "1739:11:2"
                }
              ]
            },
            "documentation": {
              "id": 474,
              "nodeType": "StructuredDocumentation",
              "src": "1177:78:2",
              "text": " @dev Allows the current user (producer) request a inspection."
            },
            "functionSelector": "86ae2fb1",
            "id": 517,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestInspection",
            "nameLocation": "1270:17:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 475,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1287:2:2"
            },
            "returnParameters": {
              "id": 478,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 477,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 517,
                  "src": "1305:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 476,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1305:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1304:6:2"
            },
            "scope": 995,
            "src": "1261:497:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 580,
              "nodeType": "Block",
              "src": "1811:435:2",
              "statements": [
                {
                  "assignments": [
                    521
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 521,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "1827:2:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 580,
                      "src": "1822:7:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 520,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1822:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 525,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 522,
                      "name": "inspectionsCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 459,
                      "src": "1832:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 523,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1851:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1832:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1822:30:2"
                },
                {
                  "assignments": [
                    527
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 527,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "1868:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 580,
                      "src": "1863:10:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 526,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1863:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 531,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 528,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 521,
                      "src": "1876:2:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 529,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1881:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1876:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1863:19:2"
                },
                {
                  "assignments": [
                    537
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 537,
                      "mutability": "mutable",
                      "name": "isas",
                      "nameLocation": "1909:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 580,
                      "src": "1893:20:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                        "typeString": "uint256[][]"
                      },
                      "typeName": {
                        "baseType": {
                          "baseType": {
                            "id": 534,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "1893:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 535,
                          "nodeType": "ArrayTypeName",
                          "src": "1893:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "id": 536,
                        "nodeType": "ArrayTypeName",
                        "src": "1893:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                          "typeString": "uint256[][]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 538,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1893:20:2"
                },
                {
                  "assignments": [
                    540
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 540,
                      "mutability": "mutable",
                      "name": "expiresIn",
                      "nameLocation": "1929:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 580,
                      "src": "1924:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 539,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1924:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 545,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 541,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "1941:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 542,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1941:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 543,
                      "name": "inspactionExpireIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 420,
                      "src": "1959:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1941:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1924:53:2"
                },
                {
                  "assignments": [
                    548
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 548,
                      "mutability": "mutable",
                      "name": "inspection",
                      "nameLocation": "2006:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 580,
                      "src": "1988:28:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$442_memory_ptr",
                        "typeString": "struct InspectionContract.Inspection"
                      },
                      "typeName": {
                        "id": 547,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 546,
                          "name": "Inspection",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 442,
                          "src": "1988:10:2"
                        },
                        "referencedDeclaration": 442,
                        "src": "1988:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$442_storage_ptr",
                          "typeString": "struct InspectionContract.Inspection"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 564,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 550,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 521,
                        "src": "2030:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 551,
                          "name": "InspectionStatus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 417,
                          "src": "2034:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_InspectionStatus_$417_$",
                            "typeString": "type(enum InspectionContract.InspectionStatus)"
                          }
                        },
                        "id": 552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "OPEN",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 413,
                        "src": "2034:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_InspectionStatus_$417",
                          "typeString": "enum InspectionContract.InspectionStatus"
                        }
                      },
                      {
                        "expression": {
                          "id": 553,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2057:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2057:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 555,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2069:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2069:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 557,
                        "name": "isas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 537,
                        "src": "2081:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2088:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 559,
                        "name": "expiresIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 540,
                        "src": "2091:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 560,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "2103:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "2103:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 562,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 527,
                        "src": "2120:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_InspectionStatus_$417",
                          "typeString": "enum InspectionContract.InspectionStatus"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 549,
                      "name": "Inspection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 442,
                      "src": "2019:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Inspection_$442_storage_ptr_$",
                        "typeString": "type(struct InspectionContract.Inspection storage pointer)"
                      }
                    },
                    "id": 563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2019:107:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$442_memory_ptr",
                      "typeString": "struct InspectionContract.Inspection memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1988:138:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 568,
                        "name": "inspection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 548,
                        "src": "2159:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$442_memory_ptr",
                          "typeString": "struct InspectionContract.Inspection memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Inspection_$442_memory_ptr",
                          "typeString": "struct InspectionContract.Inspection memory"
                        }
                      ],
                      "expression": {
                        "id": 565,
                        "name": "inspectionsArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 446,
                        "src": "2137:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Inspection_$442_storage_$dyn_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref[] storage ref"
                        }
                      },
                      "id": 567,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2137:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Inspection_$442_storage_$dyn_storage_ptr_$_t_struct$_Inspection_$442_storage_$returns$__$bound_to$_t_array$_t_struct$_Inspection_$442_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct InspectionContract.Inspection storage ref[] storage pointer,struct InspectionContract.Inspection storage ref)"
                      }
                    },
                    "id": 569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2137:33:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 570,
                  "nodeType": "ExpressionStatement",
                  "src": "2137:33:2"
                },
                {
                  "expression": {
                    "id": 575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 571,
                        "name": "inspections",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 457,
                        "src": "2181:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$442_storage_$",
                          "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                        }
                      },
                      "id": 573,
                      "indexExpression": {
                        "id": 572,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 521,
                        "src": "2193:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2181:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$442_storage",
                        "typeString": "struct InspectionContract.Inspection storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 574,
                      "name": "inspection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 548,
                      "src": "2199:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$442_memory_ptr",
                        "typeString": "struct InspectionContract.Inspection memory"
                      }
                    },
                    "src": "2181:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$442_storage",
                      "typeString": "struct InspectionContract.Inspection storage ref"
                    }
                  },
                  "id": 576,
                  "nodeType": "ExpressionStatement",
                  "src": "2181:28:2"
                },
                {
                  "expression": {
                    "id": 578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "2220:18:2",
                    "subExpression": {
                      "id": 577,
                      "name": "inspectionsCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 459,
                      "src": "2220:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 579,
                  "nodeType": "ExpressionStatement",
                  "src": "2220:18:2"
                }
              ]
            },
            "id": 581,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createRequest",
            "nameLocation": "1787:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 518,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1800:2:2"
            },
            "returnParameters": {
              "id": 519,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1811:0:2"
            },
            "scope": 995,
            "src": "1778:468:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 651,
              "nodeType": "Block",
              "src": "2543:646:2",
              "statements": [
                {
                  "assignments": [
                    596
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 596,
                      "mutability": "mutable",
                      "name": "inspection",
                      "nameLocation": "2572:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 651,
                      "src": "2554:28:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$442_memory_ptr",
                        "typeString": "struct InspectionContract.Inspection"
                      },
                      "typeName": {
                        "id": 595,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 594,
                          "name": "Inspection",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 442,
                          "src": "2554:10:2"
                        },
                        "referencedDeclaration": 442,
                        "src": "2554:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$442_storage_ptr",
                          "typeString": "struct InspectionContract.Inspection"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 600,
                  "initialValue": {
                    "baseExpression": {
                      "id": 597,
                      "name": "inspections",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 457,
                      "src": "2585:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$442_storage_$",
                        "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                      }
                    },
                    "id": 599,
                    "indexExpression": {
                      "id": 598,
                      "name": "inspectionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 584,
                      "src": "2597:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2585:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$442_storage",
                      "typeString": "struct InspectionContract.Inspection storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2554:56:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_InspectionStatus_$417",
                      "typeString": "enum InspectionContract.InspectionStatus"
                    },
                    "id": 605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 601,
                        "name": "inspection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 596,
                        "src": "2625:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$442_memory_ptr",
                          "typeString": "struct InspectionContract.Inspection memory"
                        }
                      },
                      "id": 602,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 425,
                      "src": "2625:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_InspectionStatus_$417",
                        "typeString": "enum InspectionContract.InspectionStatus"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 603,
                        "name": "InspectionStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 417,
                        "src": "2646:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_InspectionStatus_$417_$",
                          "typeString": "type(enum InspectionContract.InspectionStatus)"
                        }
                      },
                      "id": 604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "OPEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 413,
                      "src": "2646:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_InspectionStatus_$417",
                        "typeString": "enum InspectionContract.InspectionStatus"
                      }
                    },
                    "src": "2625:42:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 649,
                    "nodeType": "Block",
                    "src": "3143:39:2",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3165:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 593,
                        "id": 648,
                        "nodeType": "Return",
                        "src": "3158:12:2"
                      }
                    ]
                  },
                  "id": 650,
                  "nodeType": "IfStatement",
                  "src": "2621:561:2",
                  "trueBody": {
                    "id": 646,
                    "nodeType": "Block",
                    "src": "2669:459:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 606,
                              "name": "inspection",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 596,
                              "src": "2730:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Inspection_$442_memory_ptr",
                                "typeString": "struct InspectionContract.Inspection memory"
                              }
                            },
                            "id": 608,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 425,
                            "src": "2730:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_InspectionStatus_$417",
                              "typeString": "enum InspectionContract.InspectionStatus"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 609,
                              "name": "InspectionStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 417,
                              "src": "2750:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_InspectionStatus_$417_$",
                                "typeString": "type(enum InspectionContract.InspectionStatus)"
                              }
                            },
                            "id": 610,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ACCEPTED",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 416,
                            "src": "2750:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_InspectionStatus_$417",
                              "typeString": "enum InspectionContract.InspectionStatus"
                            }
                          },
                          "src": "2730:45:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_InspectionStatus_$417",
                            "typeString": "enum InspectionContract.InspectionStatus"
                          }
                        },
                        "id": 612,
                        "nodeType": "ExpressionStatement",
                        "src": "2730:45:2"
                      },
                      {
                        "expression": {
                          "id": 618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 613,
                              "name": "inspection",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 596,
                              "src": "2790:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Inspection_$442_memory_ptr",
                                "typeString": "struct InspectionContract.Inspection memory"
                              }
                            },
                            "id": 615,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "activistWallet",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 429,
                            "src": "2790:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 616,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2818:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 617,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2818:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2790:38:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 619,
                        "nodeType": "ExpressionStatement",
                        "src": "2790:38:2"
                      },
                      {
                        "expression": {
                          "id": 624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 620,
                              "name": "inspections",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 457,
                              "src": "2843:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$442_storage_$",
                                "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                              }
                            },
                            "id": 622,
                            "indexExpression": {
                              "id": 621,
                              "name": "inspectionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 584,
                              "src": "2855:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2843:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Inspection_$442_storage",
                              "typeString": "struct InspectionContract.Inspection storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 623,
                            "name": "inspection",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 596,
                            "src": "2871:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Inspection_$442_memory_ptr",
                              "typeString": "struct InspectionContract.Inspection memory"
                            }
                          },
                          "src": "2843:38:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Inspection_$442_storage",
                            "typeString": "struct InspectionContract.Inspection storage ref"
                          }
                        },
                        "id": 625,
                        "nodeType": "ExpressionStatement",
                        "src": "2843:38:2"
                      },
                      {
                        "expression": {
                          "id": 633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 626,
                                "name": "inspectionsArray",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 446,
                                "src": "2942:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Inspection_$442_storage_$dyn_storage",
                                  "typeString": "struct InspectionContract.Inspection storage ref[] storage ref"
                                }
                              },
                              "id": 629,
                              "indexExpression": {
                                "expression": {
                                  "id": 627,
                                  "name": "inspection",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 596,
                                  "src": "2959:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Inspection_$442_memory_ptr",
                                    "typeString": "struct InspectionContract.Inspection memory"
                                  }
                                },
                                "id": 628,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "index",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 441,
                                "src": "2959:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2942:34:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Inspection_$442_storage",
                                "typeString": "struct InspectionContract.Inspection storage ref"
                              }
                            },
                            "id": 630,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 425,
                            "src": "2942:41:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_InspectionStatus_$417",
                              "typeString": "enum InspectionContract.InspectionStatus"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 631,
                              "name": "InspectionStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 417,
                              "src": "2986:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_InspectionStatus_$417_$",
                                "typeString": "type(enum InspectionContract.InspectionStatus)"
                              }
                            },
                            "id": 632,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ACCEPTED",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 416,
                            "src": "2986:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_InspectionStatus_$417",
                              "typeString": "enum InspectionContract.InspectionStatus"
                            }
                          },
                          "src": "2942:69:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_InspectionStatus_$417",
                            "typeString": "enum InspectionContract.InspectionStatus"
                          }
                        },
                        "id": 634,
                        "nodeType": "ExpressionStatement",
                        "src": "2942:69:2"
                      },
                      {
                        "expression": {
                          "id": 642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 635,
                                "name": "inspectionsArray",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 446,
                                "src": "3026:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Inspection_$442_storage_$dyn_storage",
                                  "typeString": "struct InspectionContract.Inspection storage ref[] storage ref"
                                }
                              },
                              "id": 638,
                              "indexExpression": {
                                "expression": {
                                  "id": 636,
                                  "name": "inspection",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 596,
                                  "src": "3043:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Inspection_$442_memory_ptr",
                                    "typeString": "struct InspectionContract.Inspection memory"
                                  }
                                },
                                "id": 637,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "index",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 441,
                                "src": "3043:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3026:34:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Inspection_$442_storage",
                                "typeString": "struct InspectionContract.Inspection storage ref"
                              }
                            },
                            "id": 639,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "activistWallet",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 429,
                            "src": "3026:49:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 640,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3078:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 641,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3078:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3026:62:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 643,
                        "nodeType": "ExpressionStatement",
                        "src": "3026:62:2"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3112:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 593,
                        "id": 645,
                        "nodeType": "Return",
                        "src": "3105:11:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 582,
              "nodeType": "StructuredDocumentation",
              "src": "2258:159:2",
              "text": " @dev Allows the current user (activist) accept a inspection.\n @param inspectionId The id of the inspection that the activist want accept."
            },
            "functionSelector": "e7857502",
            "id": 652,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 587,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 586,
                  "name": "requireActivist",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 981,
                  "src": "2475:15:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2475:15:2"
              },
              {
                "arguments": [
                  {
                    "id": 589,
                    "name": "inspectionId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 584,
                    "src": "2515:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 590,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 588,
                  "name": "requireInspectionExists",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 994,
                  "src": "2491:23:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2491:37:2"
              }
            ],
            "name": "acceptInspection",
            "nameLocation": "2432:16:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 585,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 584,
                  "mutability": "mutable",
                  "name": "inspectionId",
                  "nameLocation": "2454:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 652,
                  "src": "2449:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 583,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2449:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2448:19:2"
            },
            "returnParameters": {
              "id": 593,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 592,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 652,
                  "src": "2537:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 591,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2537:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2536:6:2"
            },
            "scope": 995,
            "src": "2423:766:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 681,
              "nodeType": "Block",
              "src": "3480:135:2",
              "statements": [
                {
                  "assignments": [
                    666
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 666,
                      "mutability": "mutable",
                      "name": "isas",
                      "nameLocation": "3508:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 681,
                      "src": "3492:20:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                        "typeString": "uint256[][]"
                      },
                      "typeName": {
                        "baseType": {
                          "baseType": {
                            "id": 663,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "3492:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 664,
                          "nodeType": "ArrayTypeName",
                          "src": "3492:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "id": 665,
                        "nodeType": "ArrayTypeName",
                        "src": "3492:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                          "typeString": "uint256[][]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 669,
                  "initialValue": {
                    "expression": {
                      "id": 667,
                      "name": "inspection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 656,
                      "src": "3515:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$442_memory_ptr",
                        "typeString": "struct InspectionContract.Inspection memory"
                      }
                    },
                    "id": 668,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "isas",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 433,
                    "src": "3515:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                      "typeString": "uint256[] memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3492:38:2"
                },
                {
                  "assignments": [
                    671
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 671,
                      "mutability": "mutable",
                      "name": "isaSum",
                      "nameLocation": "3548:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 681,
                      "src": "3543:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 670,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3543:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 675,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 673,
                        "name": "isas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 666,
                        "src": "3564:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        }
                      ],
                      "id": 672,
                      "name": "sumIsa",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 739,
                      "src": "3557:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint256[] memory[] memory) pure returns (uint256)"
                      }
                    },
                    "id": 674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3557:12:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3543:26:2"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 676,
                      "name": "isaSum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 671,
                      "src": "3587:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "expression": {
                        "id": 677,
                        "name": "isas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 666,
                        "src": "3596:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        }
                      },
                      "id": 678,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3596:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3587:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 660,
                  "id": 680,
                  "nodeType": "Return",
                  "src": "3580:27:2"
                }
              ]
            },
            "documentation": {
              "id": 653,
              "nodeType": "StructuredDocumentation",
              "src": "3203:192:2",
              "text": " @dev Calculate the ISA of the inspection based in the category and the ISA level of the category\n @param inspection Receive the inspected inspection with your isas levels"
            },
            "id": 682,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateIsa",
            "nameLocation": "3410:12:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 657,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 656,
                  "mutability": "mutable",
                  "name": "inspection",
                  "nameLocation": "3441:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 682,
                  "src": "3423:28:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Inspection_$442_memory_ptr",
                    "typeString": "struct InspectionContract.Inspection"
                  },
                  "typeName": {
                    "id": 655,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 654,
                      "name": "Inspection",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 442,
                      "src": "3423:10:2"
                    },
                    "referencedDeclaration": 442,
                    "src": "3423:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$442_storage_ptr",
                      "typeString": "struct InspectionContract.Inspection"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3422:30:2"
            },
            "returnParameters": {
              "id": 660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 659,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 682,
                  "src": "3475:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 658,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3475:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3474:6:2"
            },
            "scope": 995,
            "src": "3401:214:2",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 738,
              "nodeType": "Block",
              "src": "3762:268:2",
              "statements": [
                {
                  "assignments": [
                    697
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 697,
                      "mutability": "mutable",
                      "name": "isasValue",
                      "nameLocation": "3789:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 738,
                      "src": "3773:25:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
                        "typeString": "uint8[5]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 695,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3773:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 696,
                        "length": {
                          "hexValue": "35",
                          "id": 694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3779:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "3773:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$5_storage_ptr",
                          "typeString": "uint8[5]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 704,
                  "initialValue": {
                    "components": [
                      {
                        "hexValue": "3130",
                        "id": 698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3802:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "38",
                        "id": 699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3806:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_8_by_1",
                          "typeString": "int_const 8"
                        },
                        "value": "8"
                      },
                      {
                        "hexValue": "36",
                        "id": 700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3809:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      },
                      {
                        "hexValue": "34",
                        "id": 701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3812:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      },
                      {
                        "hexValue": "32",
                        "id": 702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3815:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "id": 703,
                    "isConstant": false,
                    "isInlineArray": true,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3801:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
                      "typeString": "uint8[5] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3773:44:2"
                },
                {
                  "assignments": [
                    706
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 706,
                      "mutability": "mutable",
                      "name": "isaSum",
                      "nameLocation": "3833:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 738,
                      "src": "3828:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 705,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3828:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 708,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3842:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3828:15:2"
                },
                {
                  "body": {
                    "id": 734,
                    "nodeType": "Block",
                    "src": "3894:103:2",
                    "statements": [
                      {
                        "assignments": [
                          721
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 721,
                            "mutability": "mutable",
                            "name": "isaIndex",
                            "nameLocation": "3914:8:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 734,
                            "src": "3909:13:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 720,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "3909:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 727,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 722,
                              "name": "isas",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 687,
                              "src": "3925:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                                "typeString": "uint256[] memory[] memory"
                              }
                            },
                            "id": 724,
                            "indexExpression": {
                              "id": 723,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 710,
                              "src": "3930:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3925:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 726,
                          "indexExpression": {
                            "hexValue": "31",
                            "id": 725,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3933:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3925:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3909:26:2"
                      },
                      {
                        "expression": {
                          "id": 732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 728,
                            "name": "isaSum",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 706,
                            "src": "3950:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 729,
                              "name": "isasValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 697,
                              "src": "3960:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint8_$5_memory_ptr",
                                "typeString": "uint8[5] memory"
                              }
                            },
                            "id": 731,
                            "indexExpression": {
                              "id": 730,
                              "name": "isaIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 721,
                              "src": "3970:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3960:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "3950:29:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 733,
                        "nodeType": "ExpressionStatement",
                        "src": "3950:29:2"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 713,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 710,
                      "src": "3872:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 714,
                        "name": "isas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 687,
                        "src": "3876:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        }
                      },
                      "id": 715,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3876:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3872:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 735,
                  "initializationExpression": {
                    "assignments": [
                      710
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 710,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3865:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 735,
                        "src": "3859:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 709,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3859:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 712,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 711,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3869:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3859:11:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3889:3:2",
                      "subExpression": {
                        "id": 717,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 710,
                        "src": "3889:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 719,
                    "nodeType": "ExpressionStatement",
                    "src": "3889:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "3854:143:2"
                },
                {
                  "expression": {
                    "id": 736,
                    "name": "isaSum",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 706,
                    "src": "4016:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 691,
                  "id": 737,
                  "nodeType": "Return",
                  "src": "4009:13:2"
                }
              ]
            },
            "documentation": {
              "id": 683,
              "nodeType": "StructuredDocumentation",
              "src": "3623:67:2",
              "text": " @dev Sum the ISA\n @param isas The isas values"
            },
            "id": 739,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sumIsa",
            "nameLocation": "3705:6:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 688,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 687,
                  "mutability": "mutable",
                  "name": "isas",
                  "nameLocation": "3728:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 739,
                  "src": "3712:20:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                    "typeString": "uint256[][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 684,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3712:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 685,
                      "nodeType": "ArrayTypeName",
                      "src": "3712:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      }
                    },
                    "id": 686,
                    "nodeType": "ArrayTypeName",
                    "src": "3712:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                      "typeString": "uint256[][]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3711:22:2"
            },
            "returnParameters": {
              "id": 691,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 690,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 739,
                  "src": "3756:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 689,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3756:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3755:6:2"
            },
            "scope": 995,
            "src": "3696:334:2",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 843,
              "nodeType": "Block",
              "src": "4468:831:2",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_InspectionStatus_$417",
                      "typeString": "enum InspectionContract.InspectionStatus"
                    },
                    "id": 762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 756,
                          "name": "inspections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 457,
                          "src": "4483:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$442_storage_$",
                            "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                          }
                        },
                        "id": 758,
                        "indexExpression": {
                          "id": 757,
                          "name": "inspectionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 742,
                          "src": "4495:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4483:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$442_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      },
                      "id": 759,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 425,
                      "src": "4483:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_InspectionStatus_$417",
                        "typeString": "enum InspectionContract.InspectionStatus"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 760,
                        "name": "InspectionStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 417,
                        "src": "4519:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_InspectionStatus_$417_$",
                          "typeString": "type(enum InspectionContract.InspectionStatus)"
                        }
                      },
                      "id": 761,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ACCEPTED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 416,
                      "src": "4519:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_InspectionStatus_$417",
                        "typeString": "enum InspectionContract.InspectionStatus"
                      }
                    },
                    "src": "4483:61:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 765,
                  "nodeType": "IfStatement",
                  "src": "4479:79:2",
                  "trueBody": {
                    "expression": {
                      "hexValue": "66616c7365",
                      "id": 763,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4553:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "functionReturnParameters": 755,
                    "id": 764,
                    "nodeType": "Return",
                    "src": "4546:12:2"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 766,
                          "name": "inspections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 457,
                          "src": "4573:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$442_storage_$",
                            "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                          }
                        },
                        "id": 768,
                        "indexExpression": {
                          "id": 767,
                          "name": "inspectionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 742,
                          "src": "4585:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4573:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$442_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      },
                      "id": 769,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "activistWallet",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 429,
                      "src": "4573:40:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 770,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "4617:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4617:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4573:54:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 775,
                  "nodeType": "IfStatement",
                  "src": "4569:72:2",
                  "trueBody": {
                    "expression": {
                      "hexValue": "66616c7365",
                      "id": 773,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4636:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "functionReturnParameters": 755,
                    "id": 774,
                    "nodeType": "Return",
                    "src": "4629:12:2"
                  }
                },
                {
                  "expression": {
                    "id": 781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 776,
                          "name": "inspections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 457,
                          "src": "4731:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$442_storage_$",
                            "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                          }
                        },
                        "id": 778,
                        "indexExpression": {
                          "id": 777,
                          "name": "inspectionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 742,
                          "src": "4743:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4731:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$442_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      },
                      "id": 779,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isas",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 433,
                      "src": "4731:30:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage",
                        "typeString": "uint256[] storage ref[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 780,
                      "name": "isas",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 746,
                      "src": "4764:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                        "typeString": "uint256[] memory[] memory"
                      }
                    },
                    "src": "4731:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage",
                      "typeString": "uint256[] storage ref[] storage ref"
                    }
                  },
                  "id": 782,
                  "nodeType": "ExpressionStatement",
                  "src": "4731:37:2"
                },
                {
                  "expression": {
                    "id": 789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 783,
                          "name": "inspections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 457,
                          "src": "4779:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$442_storage_$",
                            "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                          }
                        },
                        "id": 785,
                        "indexExpression": {
                          "id": 784,
                          "name": "inspectionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 742,
                          "src": "4791:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4779:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$442_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      },
                      "id": 786,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 425,
                      "src": "4779:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_InspectionStatus_$417",
                        "typeString": "enum InspectionContract.InspectionStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 787,
                        "name": "InspectionStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 417,
                        "src": "4814:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_InspectionStatus_$417_$",
                          "typeString": "type(enum InspectionContract.InspectionStatus)"
                        }
                      },
                      "id": 788,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "INSPECTED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 415,
                      "src": "4814:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_InspectionStatus_$417",
                        "typeString": "enum InspectionContract.InspectionStatus"
                      }
                    },
                    "src": "4779:61:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_InspectionStatus_$417",
                      "typeString": "enum InspectionContract.InspectionStatus"
                    }
                  },
                  "id": 790,
                  "nodeType": "ExpressionStatement",
                  "src": "4779:61:2"
                },
                {
                  "expression": {
                    "id": 800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 791,
                          "name": "inspections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 457,
                          "src": "4851:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$442_storage_$",
                            "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                          }
                        },
                        "id": 793,
                        "indexExpression": {
                          "id": 792,
                          "name": "inspectionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 742,
                          "src": "4863:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4851:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$442_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      },
                      "id": 794,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isaAverage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 435,
                      "src": "4851:36:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 796,
                            "name": "inspections",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 457,
                            "src": "4903:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$442_storage_$",
                              "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                            }
                          },
                          "id": 798,
                          "indexExpression": {
                            "id": 797,
                            "name": "inspectionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 742,
                            "src": "4915:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4903:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Inspection_$442_storage",
                            "typeString": "struct InspectionContract.Inspection storage ref"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Inspection_$442_storage",
                            "typeString": "struct InspectionContract.Inspection storage ref"
                          }
                        ],
                        "id": 795,
                        "name": "calculateIsa",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 682,
                        "src": "4890:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_struct$_Inspection_$442_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (struct InspectionContract.Inspection memory) pure returns (uint256)"
                        }
                      },
                      "id": 799,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4890:39:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4851:78:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 801,
                  "nodeType": "ExpressionStatement",
                  "src": "4851:78:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 803,
                        "name": "inspectionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 742,
                        "src": "4963:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 802,
                      "name": "afterRealizeInspection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 969,
                      "src": "4940:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4940:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 805,
                  "nodeType": "ExpressionStatement",
                  "src": "4940:36:2"
                },
                {
                  "expression": {
                    "id": 814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 806,
                          "name": "inspectionsArray",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 446,
                          "src": "4989:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Inspection_$442_storage_$dyn_storage",
                            "typeString": "struct InspectionContract.Inspection storage ref[] storage ref"
                          }
                        },
                        "id": 811,
                        "indexExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 807,
                              "name": "inspections",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 457,
                              "src": "5006:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$442_storage_$",
                                "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                              }
                            },
                            "id": 809,
                            "indexExpression": {
                              "id": 808,
                              "name": "inspectionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 742,
                              "src": "5018:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5006:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Inspection_$442_storage",
                              "typeString": "struct InspectionContract.Inspection storage ref"
                            }
                          },
                          "id": 810,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "index",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 441,
                          "src": "5006:31:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4989:49:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$442_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      },
                      "id": 812,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isas",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 433,
                      "src": "4989:54:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage",
                        "typeString": "uint256[] storage ref[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 813,
                      "name": "isas",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 746,
                      "src": "5046:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                        "typeString": "uint256[] memory[] memory"
                      }
                    },
                    "src": "4989:61:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage",
                      "typeString": "uint256[] storage ref[] storage ref"
                    }
                  },
                  "id": 815,
                  "nodeType": "ExpressionStatement",
                  "src": "4989:61:2"
                },
                {
                  "expression": {
                    "id": 828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 816,
                          "name": "inspectionsArray",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 446,
                          "src": "5061:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Inspection_$442_storage_$dyn_storage",
                            "typeString": "struct InspectionContract.Inspection storage ref[] storage ref"
                          }
                        },
                        "id": 821,
                        "indexExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 817,
                              "name": "inspections",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 457,
                              "src": "5078:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$442_storage_$",
                                "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                              }
                            },
                            "id": 819,
                            "indexExpression": {
                              "id": 818,
                              "name": "inspectionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 742,
                              "src": "5090:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5078:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Inspection_$442_storage",
                              "typeString": "struct InspectionContract.Inspection storage ref"
                            }
                          },
                          "id": 820,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "index",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 441,
                          "src": "5078:31:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5061:49:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$442_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      },
                      "id": 822,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isaAverage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 435,
                      "src": "5061:60:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 824,
                            "name": "inspections",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 457,
                            "src": "5137:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$442_storage_$",
                              "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                            }
                          },
                          "id": 826,
                          "indexExpression": {
                            "id": 825,
                            "name": "inspectionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 742,
                            "src": "5149:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5137:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Inspection_$442_storage",
                            "typeString": "struct InspectionContract.Inspection storage ref"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Inspection_$442_storage",
                            "typeString": "struct InspectionContract.Inspection storage ref"
                          }
                        ],
                        "id": 823,
                        "name": "calculateIsa",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 682,
                        "src": "5124:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_struct$_Inspection_$442_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (struct InspectionContract.Inspection memory) pure returns (uint256)"
                        }
                      },
                      "id": 827,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5124:39:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5061:102:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 829,
                  "nodeType": "ExpressionStatement",
                  "src": "5061:102:2"
                },
                {
                  "expression": {
                    "id": 839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 830,
                          "name": "inspectionsArray",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 446,
                          "src": "5174:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Inspection_$442_storage_$dyn_storage",
                            "typeString": "struct InspectionContract.Inspection storage ref[] storage ref"
                          }
                        },
                        "id": 835,
                        "indexExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 831,
                              "name": "inspections",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 457,
                              "src": "5191:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$442_storage_$",
                                "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                              }
                            },
                            "id": 833,
                            "indexExpression": {
                              "id": 832,
                              "name": "inspectionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 742,
                              "src": "5203:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5191:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Inspection_$442_storage",
                              "typeString": "struct InspectionContract.Inspection storage ref"
                            }
                          },
                          "id": 834,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "index",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 441,
                          "src": "5191:31:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5174:49:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$442_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      },
                      "id": 836,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 425,
                      "src": "5174:56:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_InspectionStatus_$417",
                        "typeString": "enum InspectionContract.InspectionStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 837,
                        "name": "InspectionStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 417,
                        "src": "5233:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_InspectionStatus_$417_$",
                          "typeString": "type(enum InspectionContract.InspectionStatus)"
                        }
                      },
                      "id": 838,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "INSPECTED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 415,
                      "src": "5233:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_InspectionStatus_$417",
                        "typeString": "enum InspectionContract.InspectionStatus"
                      }
                    },
                    "src": "5174:85:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_InspectionStatus_$417",
                      "typeString": "enum InspectionContract.InspectionStatus"
                    }
                  },
                  "id": 840,
                  "nodeType": "ExpressionStatement",
                  "src": "5174:85:2"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5287:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 755,
                  "id": 842,
                  "nodeType": "Return",
                  "src": "5280:11:2"
                }
              ]
            },
            "documentation": {
              "id": 740,
              "nodeType": "StructuredDocumentation",
              "src": "4042:276:2",
              "text": " @dev Allow a activist realize a inspection and mark as INSPECTED\n @param inspectionId The id of the inspection to be realized\n @param isas The uint[][] of categoryId and isaIndex. Ex: isas = [ [categoryId, isaIndex], [categoryId, isaIndex] ]"
            },
            "functionSelector": "b92bd2d9",
            "id": 844,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 749,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 748,
                  "name": "requireActivist",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 981,
                  "src": "4400:15:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "4400:15:2"
              },
              {
                "arguments": [
                  {
                    "id": 751,
                    "name": "inspectionId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 742,
                    "src": "4440:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 752,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 750,
                  "name": "requireInspectionExists",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 994,
                  "src": "4416:23:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "4416:37:2"
              }
            ],
            "name": "realizeInspection",
            "nameLocation": "4334:17:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 747,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 742,
                  "mutability": "mutable",
                  "name": "inspectionId",
                  "nameLocation": "4357:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 844,
                  "src": "4352:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 741,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4352:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 746,
                  "mutability": "mutable",
                  "name": "isas",
                  "nameLocation": "4387:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 844,
                  "src": "4371:20:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                    "typeString": "uint256[][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 743,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4371:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 744,
                      "nodeType": "ArrayTypeName",
                      "src": "4371:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      }
                    },
                    "id": 745,
                    "nodeType": "ArrayTypeName",
                    "src": "4371:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                      "typeString": "uint256[][]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4351:41:2"
            },
            "returnParameters": {
              "id": 755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 754,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 844,
                  "src": "4462:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 753,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4462:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4461:6:2"
            },
            "scope": 995,
            "src": "4325:974:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 857,
              "nodeType": "Block",
              "src": "5509:41:2",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 853,
                      "name": "inspections",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 457,
                      "src": "5527:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$442_storage_$",
                        "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                      }
                    },
                    "id": 855,
                    "indexExpression": {
                      "id": 854,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 847,
                      "src": "5539:2:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5527:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$442_storage",
                      "typeString": "struct InspectionContract.Inspection storage ref"
                    }
                  },
                  "functionReturnParameters": 852,
                  "id": 856,
                  "nodeType": "Return",
                  "src": "5520:22:2"
                }
              ]
            },
            "documentation": {
              "id": 845,
              "nodeType": "StructuredDocumentation",
              "src": "5313:116:2",
              "text": " @dev Returns a inspection by id if that exists.\n @param id The id of the inspection to return."
            },
            "functionSelector": "f2836670",
            "id": 858,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInspection",
            "nameLocation": "5444:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 848,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 847,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "5466:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 858,
                  "src": "5458:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 846,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5458:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5457:12:2"
            },
            "returnParameters": {
              "id": 852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 851,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 858,
                  "src": "5490:17:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Inspection_$442_memory_ptr",
                    "typeString": "struct InspectionContract.Inspection"
                  },
                  "typeName": {
                    "id": 850,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 849,
                      "name": "Inspection",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 442,
                      "src": "5490:10:2"
                    },
                    "referencedDeclaration": 442,
                    "src": "5490:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$442_storage_ptr",
                      "typeString": "struct InspectionContract.Inspection"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5489:19:2"
            },
            "scope": 995,
            "src": "5435:115:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 868,
              "nodeType": "Block",
              "src": "5692:42:2",
              "statements": [
                {
                  "expression": {
                    "id": 866,
                    "name": "inspectionsArray",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 446,
                    "src": "5710:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Inspection_$442_storage_$dyn_storage",
                      "typeString": "struct InspectionContract.Inspection storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 865,
                  "id": 867,
                  "nodeType": "Return",
                  "src": "5703:23:2"
                }
              ]
            },
            "documentation": {
              "id": 859,
              "nodeType": "StructuredDocumentation",
              "src": "5562:56:2",
              "text": " @dev Returns all requested inspections."
            },
            "functionSelector": "ee699fc1",
            "id": 869,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInspections",
            "nameLocation": "5633:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 860,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5647:2:2"
            },
            "returnParameters": {
              "id": 865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 864,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 869,
                  "src": "5671:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Inspection_$442_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct InspectionContract.Inspection[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 862,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 861,
                        "name": "Inspection",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 442,
                        "src": "5671:10:2"
                      },
                      "referencedDeclaration": 442,
                      "src": "5671:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$442_storage_ptr",
                        "typeString": "struct InspectionContract.Inspection"
                      }
                    },
                    "id": 863,
                    "nodeType": "ArrayTypeName",
                    "src": "5671:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Inspection_$442_storage_$dyn_storage_ptr",
                      "typeString": "struct InspectionContract.Inspection[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5670:21:2"
            },
            "scope": 995,
            "src": "5624:110:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 887,
              "nodeType": "Block",
              "src": "5923:70:2",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "4f50454e",
                        "id": 881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5942:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f76fe33b8a0ebf7aa05740f479d10138c7c15bdc75b10e047cc15be2be15e5b4",
                          "typeString": "literal_string \"OPEN\""
                        },
                        "value": "OPEN"
                      },
                      {
                        "hexValue": "45585049524544",
                        "id": 882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5950:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd725cfb5ba01ea5dc5a7159cf41eaa54c28dc001805ce2361d3c894e7c2f72a",
                          "typeString": "literal_string \"EXPIRED\""
                        },
                        "value": "EXPIRED"
                      },
                      {
                        "hexValue": "494e53504543544544",
                        "id": 883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5961:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee5396ce4732a0f90688f3919520a56ad5e5581ce25fa727e167ca44cbd5926f",
                          "typeString": "literal_string \"INSPECTED\""
                        },
                        "value": "INSPECTED"
                      },
                      {
                        "hexValue": "4143434550544544",
                        "id": 884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5974:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_66a524c81cf8e657f1147e56f41f83002f6210ee7ae7b08d255f786088ae96f7",
                          "typeString": "literal_string \"ACCEPTED\""
                        },
                        "value": "ACCEPTED"
                      }
                    ],
                    "id": 885,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5941:44:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_stringliteral_f76fe33b8a0ebf7aa05740f479d10138c7c15bdc75b10e047cc15be2be15e5b4_$_t_stringliteral_bd725cfb5ba01ea5dc5a7159cf41eaa54c28dc001805ce2361d3c894e7c2f72a_$_t_stringliteral_ee5396ce4732a0f90688f3919520a56ad5e5581ce25fa727e167ca44cbd5926f_$_t_stringliteral_66a524c81cf8e657f1147e56f41f83002f6210ee7ae7b08d255f786088ae96f7_$",
                      "typeString": "tuple(literal_string \"OPEN\",literal_string \"EXPIRED\",literal_string \"INSPECTED\",literal_string \"ACCEPTED\")"
                    }
                  },
                  "functionReturnParameters": 880,
                  "id": 886,
                  "nodeType": "Return",
                  "src": "5934:51:2"
                }
              ]
            },
            "documentation": {
              "id": 870,
              "nodeType": "StructuredDocumentation",
              "src": "5746:59:2",
              "text": " @dev Returns all inpections status string."
            },
            "functionSelector": "dd6850c6",
            "id": 888,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInspectionsStatus",
            "nameLocation": "5820:20:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 871,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5840:2:2"
            },
            "returnParameters": {
              "id": 880,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 873,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 888,
                  "src": "5863:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 872,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5863:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 875,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 888,
                  "src": "5878:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 874,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5878:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 877,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 888,
                  "src": "5893:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 876,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5893:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 879,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 888,
                  "src": "5908:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 878,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5908:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5862:60:2"
            },
            "scope": 995,
            "src": "5811:182:2",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 903,
              "nodeType": "Block",
              "src": "6211:49:2",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 896,
                          "name": "inspections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 457,
                          "src": "6229:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$442_storage_$",
                            "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                          }
                        },
                        "id": 898,
                        "indexExpression": {
                          "id": 897,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 891,
                          "src": "6241:2:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6229:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$442_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      },
                      "id": 899,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 422,
                      "src": "6229:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 900,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6251:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "6229:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 895,
                  "id": 902,
                  "nodeType": "Return",
                  "src": "6222:30:2"
                }
              ]
            },
            "documentation": {
              "id": 889,
              "nodeType": "StructuredDocumentation",
              "src": "6005:136:2",
              "text": " @dev Check if an inspections exists in mapping.\n @param id The id of the inspection that the activist want accept."
            },
            "functionSelector": "fe5a4fa4",
            "id": 904,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "inspectionExists",
            "nameLocation": "6156:16:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 892,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 891,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "6181:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 904,
                  "src": "6173:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 890,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6173:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6172:12:2"
            },
            "returnParameters": {
              "id": 895,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 894,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 904,
                  "src": "6205:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 893,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6205:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6204:6:2"
            },
            "scope": 995,
            "src": "6147:113:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 968,
              "nodeType": "Block",
              "src": "6514:728:2",
              "statements": [
                {
                  "assignments": [
                    911
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 911,
                      "mutability": "mutable",
                      "name": "producerWallet",
                      "nameLocation": "6533:14:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 968,
                      "src": "6525:22:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 910,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6525:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 916,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 912,
                        "name": "inspections",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 457,
                        "src": "6550:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$442_storage_$",
                          "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                        }
                      },
                      "id": 914,
                      "indexExpression": {
                        "id": 913,
                        "name": "inspectionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 907,
                        "src": "6562:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6550:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$442_storage",
                        "typeString": "struct InspectionContract.Inspection storage ref"
                      }
                    },
                    "id": 915,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "producerWallet",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 427,
                    "src": "6550:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6525:65:2"
                },
                {
                  "assignments": [
                    918
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 918,
                      "mutability": "mutable",
                      "name": "activistWallet",
                      "nameLocation": "6609:14:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 968,
                      "src": "6601:22:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 917,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6601:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 923,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 919,
                        "name": "inspections",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 457,
                        "src": "6626:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$442_storage_$",
                          "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                        }
                      },
                      "id": 921,
                      "indexExpression": {
                        "id": 920,
                        "name": "inspectionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 907,
                        "src": "6638:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6626:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$442_storage",
                        "typeString": "struct InspectionContract.Inspection storage ref"
                      }
                    },
                    "id": 922,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "activistWallet",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 429,
                    "src": "6626:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6601:65:2"
                },
                {
                  "expression": {
                    "id": 929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 924,
                          "name": "activists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "6770:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Activist_$25_storage_$",
                            "typeString": "mapping(address => struct ActivistContract.Activist storage ref)"
                          }
                        },
                        "id": 926,
                        "indexExpression": {
                          "id": 925,
                          "name": "activistWallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 918,
                          "src": "6780:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6770:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Activist_$25_storage",
                          "typeString": "struct ActivistContract.Activist storage ref"
                        }
                      },
                      "id": 927,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "recentInspection",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19,
                      "src": "6770:42:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 928,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6815:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "6770:50:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 930,
                  "nodeType": "ExpressionStatement",
                  "src": "6770:50:2"
                },
                {
                  "expression": {
                    "id": 935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "6831:44:2",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 931,
                          "name": "activists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "6831:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Activist_$25_storage_$",
                            "typeString": "mapping(address => struct ActivistContract.Activist storage ref)"
                          }
                        },
                        "id": 933,
                        "indexExpression": {
                          "id": 932,
                          "name": "activistWallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 918,
                          "src": "6841:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6831:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Activist_$25_storage",
                          "typeString": "struct ActivistContract.Activist storage ref"
                        }
                      },
                      "id": 934,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalInspections",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "6831:42:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 936,
                  "nodeType": "ExpressionStatement",
                  "src": "6831:44:2"
                },
                {
                  "expression": {
                    "id": 942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 937,
                          "name": "producers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1075,
                          "src": "6974:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Producer_$1057_storage_$",
                            "typeString": "mapping(address => struct ProducerContract.Producer storage ref)"
                          }
                        },
                        "id": 939,
                        "indexExpression": {
                          "id": 938,
                          "name": "producerWallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 911,
                          "src": "6984:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6974:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Producer_$1057_storage",
                          "typeString": "struct ProducerContract.Producer storage ref"
                        }
                      },
                      "id": 940,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "recentInspection",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1049,
                      "src": "6974:42:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 941,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7019:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "6974:50:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 943,
                  "nodeType": "ExpressionStatement",
                  "src": "6974:50:2"
                },
                {
                  "expression": {
                    "id": 948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "7035:41:2",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 944,
                          "name": "producers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1075,
                          "src": "7035:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Producer_$1057_storage_$",
                            "typeString": "mapping(address => struct ProducerContract.Producer storage ref)"
                          }
                        },
                        "id": 946,
                        "indexExpression": {
                          "id": 945,
                          "name": "producerWallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 911,
                          "src": "7045:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7035:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Producer_$1057_storage",
                          "typeString": "struct ProducerContract.Producer storage ref"
                        }
                      },
                      "id": 947,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalRequests",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1051,
                      "src": "7035:39:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 949,
                  "nodeType": "ExpressionStatement",
                  "src": "7035:41:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 954,
                          "name": "inspections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 457,
                          "src": "7134:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$442_storage_$",
                            "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                          }
                        },
                        "id": 956,
                        "indexExpression": {
                          "id": 955,
                          "name": "inspectionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 907,
                          "src": "7146:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7134:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$442_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Inspection_$442_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 950,
                          "name": "userInspections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 452,
                          "src": "7097:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Inspection_$442_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct InspectionContract.Inspection storage ref[] storage ref)"
                          }
                        },
                        "id": 952,
                        "indexExpression": {
                          "id": 951,
                          "name": "producerWallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 911,
                          "src": "7113:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7097:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Inspection_$442_storage_$dyn_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref[] storage ref"
                        }
                      },
                      "id": 953,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "7097:36:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Inspection_$442_storage_$dyn_storage_ptr_$_t_struct$_Inspection_$442_storage_$returns$__$bound_to$_t_array$_t_struct$_Inspection_$442_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct InspectionContract.Inspection storage ref[] storage pointer,struct InspectionContract.Inspection storage ref)"
                      }
                    },
                    "id": 957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7097:63:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 958,
                  "nodeType": "ExpressionStatement",
                  "src": "7097:63:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 963,
                          "name": "inspections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 457,
                          "src": "7208:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$442_storage_$",
                            "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                          }
                        },
                        "id": 965,
                        "indexExpression": {
                          "id": 964,
                          "name": "inspectionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 907,
                          "src": "7220:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7208:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$442_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Inspection_$442_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 959,
                          "name": "userInspections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 452,
                          "src": "7171:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Inspection_$442_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct InspectionContract.Inspection storage ref[] storage ref)"
                          }
                        },
                        "id": 961,
                        "indexExpression": {
                          "id": 960,
                          "name": "activistWallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 918,
                          "src": "7187:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7171:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Inspection_$442_storage_$dyn_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref[] storage ref"
                        }
                      },
                      "id": 962,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "7171:36:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Inspection_$442_storage_$dyn_storage_ptr_$_t_struct$_Inspection_$442_storage_$returns$__$bound_to$_t_array$_t_struct$_Inspection_$442_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct InspectionContract.Inspection storage ref[] storage pointer,struct InspectionContract.Inspection storage ref)"
                      }
                    },
                    "id": 966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7171:63:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 967,
                  "nodeType": "ExpressionStatement",
                  "src": "7171:63:2"
                }
              ]
            },
            "documentation": {
              "id": 905,
              "nodeType": "StructuredDocumentation",
              "src": "6272:176:2",
              "text": " @dev Inscrement producer and activist request action and mark both as no recent open requests and inspection\n @param inspectionId The id of the inspection"
            },
            "id": 969,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "afterRealizeInspection",
            "nameLocation": "6463:22:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 908,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 907,
                  "mutability": "mutable",
                  "name": "inspectionId",
                  "nameLocation": "6491:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 969,
                  "src": "6486:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 906,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6486:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6485:19:2"
            },
            "returnParameters": {
              "id": 909,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6514:0:2"
            },
            "scope": 995,
            "src": "6454:788:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 980,
              "nodeType": "Block",
              "src": "7305:117:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 973,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "7339:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 974,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7339:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 972,
                          "name": "activistExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 178,
                          "src": "7324:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7324:26:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206d75737420626520616e2061637469766973742120506c65617365207265676973746572206173206f6e65",
                        "id": 976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7352:49:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7bbfd9faa9484f9e64abeb985fc471aa16487b87a888d85c1e82273be1ee2169",
                          "typeString": "literal_string \"You must be an activist! Please register as one\""
                        },
                        "value": "You must be an activist! Please register as one"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7bbfd9faa9484f9e64abeb985fc471aa16487b87a888d85c1e82273be1ee2169",
                          "typeString": "literal_string \"You must be an activist! Please register as one\""
                        }
                      ],
                      "id": 971,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7316:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7316:86:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 978,
                  "nodeType": "ExpressionStatement",
                  "src": "7316:86:2"
                },
                {
                  "id": 979,
                  "nodeType": "PlaceholderStatement",
                  "src": "7413:1:2"
                }
              ]
            },
            "id": 981,
            "name": "requireActivist",
            "nameLocation": "7287:15:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 970,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7302:2:2"
            },
            "src": "7278:144:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 993,
              "nodeType": "Block",
              "src": "7486:102:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 987,
                            "name": "inspectionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 983,
                            "src": "7522:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 986,
                          "name": "inspectionExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 904,
                          "src": "7505:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7505:30:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320696e7370656374696f6e20646f6e277420657869737473",
                        "id": 989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7537:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_27cfb18fb102385a5a6ad3d3f29c4023f127e18857272a0d2d3c2847a7e8e217",
                          "typeString": "literal_string \"This inspection don't exists\""
                        },
                        "value": "This inspection don't exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_27cfb18fb102385a5a6ad3d3f29c4023f127e18857272a0d2d3c2847a7e8e217",
                          "typeString": "literal_string \"This inspection don't exists\""
                        }
                      ],
                      "id": 985,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7497:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7497:71:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 991,
                  "nodeType": "ExpressionStatement",
                  "src": "7497:71:2"
                },
                {
                  "id": 992,
                  "nodeType": "PlaceholderStatement",
                  "src": "7579:1:2"
                }
              ]
            },
            "id": 994,
            "name": "requireInspectionExists",
            "nameLocation": "7443:23:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 984,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 983,
                  "mutability": "mutable",
                  "name": "inspectionId",
                  "nameLocation": "7472:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 994,
                  "src": "7467:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 982,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7467:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7466:19:2"
            },
            "src": "7434:154:2",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 996,
        "src": "256:7341:2",
        "usedErrors": []
      }
    ],
    "src": "0:7599:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2021-11-29T16:47:04.271Z",
  "devdoc": {
    "details": "Inpection action core",
    "kind": "dev",
    "methods": {
      "acceptInspection(uint256)": {
        "details": "Allows the current user (activist) accept a inspection.",
        "params": {
          "inspectionId": "The id of the inspection that the activist want accept."
        }
      },
      "activistExists(address)": {
        "details": "Check if a specific activist exists",
        "returns": {
          "_0": "a bool that represent if a activist exists or not"
        }
      },
      "addActivist(string,string,string,string,string,string,string)": {
        "details": "Allow a new register of activist",
        "params": {
          "cep": "the cep of the activist",
          "city": "the of the activist",
          "country": "the country where the activist is",
          "document": "the document of activist",
          "documentType": "the document type type of activist. CPF/CNPJ",
          "name": "the name of the activist",
          "state": "the state of the activist"
        },
        "returns": {
          "_0": "a Activist"
        }
      },
      "addCategory(string,string,string,string,string,string,string)": {
        "details": "add a new category",
        "params": {
          "description": "the description of category",
          "name": "the name of category",
          "neutro": "the description text to this metric",
          "partiallyNotSustainable": "the description text to this metric",
          "partiallySustainable": "the description text to this metric",
          "totallyNotSustainable": "the description text to this metric",
          "totallySustainable": "the description text to this metric"
        },
        "returns": {
          "_0": "bool"
        }
      },
      "addProducer(string,string,string,string,string,string,string)": {
        "details": "Allow a new register of producer",
        "params": {
          "cep": "the cep of the producer",
          "city": "the of the producer",
          "country": "the country where the producer is",
          "document": "the document of producer",
          "documentType": "the document type type of producer. CPF/CNPJ",
          "name": "the name of the producer",
          "state": "the state of the producer"
        }
      },
      "getActivist(address)": {
        "details": "Return a specific activist",
        "params": {
          "addr": "the address of the activist."
        }
      },
      "getActivists()": {
        "details": "Returns all registered activists",
        "returns": {
          "_0": "Activist struct array"
        }
      },
      "getCategories()": {
        "details": "Returns all added categories",
        "returns": {
          "_0": "category struc array"
        }
      },
      "getCategory(uint256)": {
        "details": "get a specific category",
        "params": {
          "id": "the id of a category"
        }
      },
      "getInspection(uint256)": {
        "details": "Returns a inspection by id if that exists.",
        "params": {
          "id": "The id of the inspection to return."
        }
      },
      "getInspections()": {
        "details": "Returns all requested inspections."
      },
      "getInspectionsHistory()": {
        "details": "Allows the current user producer/activist get all yours inspections with status INSPECTED"
      },
      "getInspectionsStatus()": {
        "details": "Returns all inpections status string."
      },
      "getIsas()": {
        "details": "Returns all isas string."
      },
      "getProducer(address)": {
        "details": "Return a specific producer",
        "params": {
          "addr": "the address of the producer."
        }
      },
      "getProducers()": {
        "details": "Returns all registered producers",
        "returns": {
          "_0": "Producer struct array"
        }
      },
      "getUser(address)": {
        "details": "Returns the user type if the user is registered",
        "params": {
          "addr": "the user address that want check if exists"
        }
      },
      "getUserTypes()": {
        "details": "Returns the enum UserType of the system"
      },
      "inspectionExists(uint256)": {
        "details": "Check if an inspections exists in mapping.",
        "params": {
          "id": "The id of the inspection that the activist want accept."
        }
      },
      "producerExists(address)": {
        "details": "Check if a specific producer exists",
        "returns": {
          "_0": "a bool that represent if a producer exists or not"
        }
      },
      "realizeInspection(uint256,uint256[][])": {
        "details": "Allow a activist realize a inspection and mark as INSPECTED",
        "params": {
          "inspectionId": "The id of the inspection to be realized",
          "isas": "The uint[][] of categoryId and isaIndex. Ex: isas = [ [categoryId, isaIndex], [categoryId, isaIndex] ]"
        }
      },
      "requestInspection()": {
        "details": "Allows the current user (producer) request a inspection."
      },
      "vote(uint256)": {
        "details": "Allow a user vote in a category",
        "params": {
          "id": "the id of a category that receives a vote."
        },
        "returns": {
          "_0": "category struc array"
        }
      }
    },
    "title": "InspectionContract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}