{
  "contractName": "InspectionContract",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "activistExists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "activistsCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "document",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "documentType",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "country",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "state",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "city",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "cep",
          "type": "string"
        }
      ],
      "name": "addActivist",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "activistWallet",
              "type": "address"
            },
            {
              "internalType": "enum UserContract.UserType",
              "name": "userType",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "document",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "documentType",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "recentInspection",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "totalInspections",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "country",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "state",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "city",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "cep",
                  "type": "string"
                }
              ],
              "internalType": "struct ActivistContract.ActivistAddress",
              "name": "activistAddress",
              "type": "tuple"
            }
          ],
          "internalType": "struct ActivistContract.Activist",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "totallySustainable",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "partiallySustainable",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "neutro",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "partiallyNotSustainable",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "totallyNotSustainable",
          "type": "string"
        }
      ],
      "name": "addCategory",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "document",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "documentType",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "country",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "state",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "city",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "cep",
          "type": "string"
        }
      ],
      "name": "addProducer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "category",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "createdBy",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "totallySustainable",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "partiallySustainable",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "neutro",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "partiallyNotSustainable",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "totallyNotSustainable",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "votesCount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "categoryCounts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "getActivist",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "activistWallet",
              "type": "address"
            },
            {
              "internalType": "enum UserContract.UserType",
              "name": "userType",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "document",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "documentType",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "recentInspection",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "totalInspections",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "country",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "state",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "city",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "cep",
                  "type": "string"
                }
              ],
              "internalType": "struct ActivistContract.ActivistAddress",
              "name": "activistAddress",
              "type": "tuple"
            }
          ],
          "internalType": "struct ActivistContract.Activist",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getActivists",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "activistWallet",
              "type": "address"
            },
            {
              "internalType": "enum UserContract.UserType",
              "name": "userType",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "document",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "documentType",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "recentInspection",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "totalInspections",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "country",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "state",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "city",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "cep",
                  "type": "string"
                }
              ],
              "internalType": "struct ActivistContract.ActivistAddress",
              "name": "activistAddress",
              "type": "tuple"
            }
          ],
          "internalType": "struct ActivistContract.Activist[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCategories",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "createdBy",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "totallySustainable",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "partiallySustainable",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "neutro",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "partiallyNotSustainable",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "totallyNotSustainable",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "votesCount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "internalType": "struct CategoryContract.Category[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getCategory",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "createdBy",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "totallySustainable",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "partiallySustainable",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "neutro",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "partiallyNotSustainable",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "totallyNotSustainable",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "votesCount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "internalType": "struct CategoryContract.Category",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getIsas",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "getProducer",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "producer_wallet",
              "type": "address"
            },
            {
              "internalType": "enum UserContract.UserType",
              "name": "userType",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "document",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "documentType",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "recentInspection",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "totalRequests",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "isaPoints",
              "type": "int256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "allowed",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "withdrewToken",
                  "type": "bool"
                }
              ],
              "internalType": "struct ProducerContract.TokenApprove",
              "name": "tokenApprove",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "country",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "state",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "city",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "cep",
                  "type": "string"
                }
              ],
              "internalType": "struct ProducerContract.PropertyAddress",
              "name": "property_address",
              "type": "tuple"
            }
          ],
          "internalType": "struct ProducerContract.Producer",
          "name": "producer",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "address_",
          "type": "address"
        }
      ],
      "name": "getProducerApprove",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProducers",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "producer_wallet",
              "type": "address"
            },
            {
              "internalType": "enum UserContract.UserType",
              "name": "userType",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "document",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "documentType",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "recentInspection",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "totalRequests",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "isaPoints",
              "type": "int256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "allowed",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "withdrewToken",
                  "type": "bool"
                }
              ],
              "internalType": "struct ProducerContract.TokenApprove",
              "name": "tokenApprove",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "country",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "state",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "city",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "cep",
                  "type": "string"
                }
              ],
              "internalType": "struct ProducerContract.PropertyAddress",
              "name": "property_address",
              "type": "tuple"
            }
          ],
          "internalType": "struct ProducerContract.Producer[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "getUser",
      "outputs": [
        {
          "internalType": "enum UserContract.UserType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUserTypes",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "producerExists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "producersCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "producersList",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "producer_wallet",
          "type": "address"
        },
        {
          "internalType": "enum UserContract.UserType",
          "name": "userType",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "document",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "documentType",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "recentInspection",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "totalRequests",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "isaPoints",
          "type": "int256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "allowed",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "withdrewToken",
              "type": "bool"
            }
          ],
          "internalType": "struct ProducerContract.TokenApprove",
          "name": "tokenApprove",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "country",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "state",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "city",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "cep",
              "type": "string"
            }
          ],
          "internalType": "struct ProducerContract.PropertyAddress",
          "name": "property_address",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usersCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "vote",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "getInspectionsHistory",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "enum InspectionContract.InspectionStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "producerWallet",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "activistWallet",
              "type": "address"
            },
            {
              "internalType": "uint256[][]",
              "name": "isas",
              "type": "uint256[][]"
            },
            {
              "internalType": "int256",
              "name": "isaPoints",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "expiresIn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "createdAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "updatedAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "internalType": "struct InspectionContract.Inspection[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "requestInspection",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "inspectionId",
          "type": "uint256"
        }
      ],
      "name": "acceptInspection",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "inspectionId",
          "type": "uint256"
        },
        {
          "internalType": "uint256[][]",
          "name": "isas",
          "type": "uint256[][]"
        }
      ],
      "name": "realizeInspection",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getInspection",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "enum InspectionContract.InspectionStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "producerWallet",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "activistWallet",
              "type": "address"
            },
            {
              "internalType": "uint256[][]",
              "name": "isas",
              "type": "uint256[][]"
            },
            {
              "internalType": "int256",
              "name": "isaPoints",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "expiresIn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "createdAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "updatedAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "internalType": "struct InspectionContract.Inspection",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getInspections",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "enum InspectionContract.InspectionStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "producerWallet",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "activistWallet",
              "type": "address"
            },
            {
              "internalType": "uint256[][]",
              "name": "isas",
              "type": "uint256[][]"
            },
            {
              "internalType": "int256",
              "name": "isaPoints",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "expiresIn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "createdAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "updatedAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "internalType": "struct InspectionContract.Inspection[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getInspectionsStatus",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "inspectionExists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"inspectionId\",\"type\":\"uint256\"}],\"name\":\"acceptInspection\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"activistExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activistsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"document\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"documentType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"state\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"cep\",\"type\":\"string\"}],\"name\":\"addActivist\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"activistWallet\",\"type\":\"address\"},{\"internalType\":\"enum UserContract.UserType\",\"name\":\"userType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"document\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"documentType\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recentInspection\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalInspections\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"state\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"cep\",\"type\":\"string\"}],\"internalType\":\"struct ActivistContract.ActivistAddress\",\"name\":\"activistAddress\",\"type\":\"tuple\"}],\"internalType\":\"struct ActivistContract.Activist\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"totallySustainable\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"partiallySustainable\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"neutro\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"partiallyNotSustainable\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"totallyNotSustainable\",\"type\":\"string\"}],\"name\":\"addCategory\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"document\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"documentType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"state\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"cep\",\"type\":\"string\"}],\"name\":\"addProducer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"category\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"createdBy\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"totallySustainable\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"partiallySustainable\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"neutro\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"partiallyNotSustainable\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"totallyNotSustainable\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"votesCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"categoryCounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getActivist\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"activistWallet\",\"type\":\"address\"},{\"internalType\":\"enum UserContract.UserType\",\"name\":\"userType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"document\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"documentType\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recentInspection\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalInspections\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"state\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"cep\",\"type\":\"string\"}],\"internalType\":\"struct ActivistContract.ActivistAddress\",\"name\":\"activistAddress\",\"type\":\"tuple\"}],\"internalType\":\"struct ActivistContract.Activist\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActivists\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"activistWallet\",\"type\":\"address\"},{\"internalType\":\"enum UserContract.UserType\",\"name\":\"userType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"document\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"documentType\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recentInspection\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalInspections\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"state\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"cep\",\"type\":\"string\"}],\"internalType\":\"struct ActivistContract.ActivistAddress\",\"name\":\"activistAddress\",\"type\":\"tuple\"}],\"internalType\":\"struct ActivistContract.Activist[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCategories\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"createdBy\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"totallySustainable\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"partiallySustainable\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"neutro\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"partiallyNotSustainable\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"totallyNotSustainable\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"votesCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"internalType\":\"struct CategoryContract.Category[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getCategory\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"createdBy\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"totallySustainable\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"partiallySustainable\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"neutro\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"partiallyNotSustainable\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"totallyNotSustainable\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"votesCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"internalType\":\"struct CategoryContract.Category\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getInspection\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum InspectionContract.InspectionStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"producerWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"activistWallet\",\"type\":\"address\"},{\"internalType\":\"uint256[][]\",\"name\":\"isas\",\"type\":\"uint256[][]\"},{\"internalType\":\"int256\",\"name\":\"isaPoints\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"expiresIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"internalType\":\"struct InspectionContract.Inspection\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInspections\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum InspectionContract.InspectionStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"producerWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"activistWallet\",\"type\":\"address\"},{\"internalType\":\"uint256[][]\",\"name\":\"isas\",\"type\":\"uint256[][]\"},{\"internalType\":\"int256\",\"name\":\"isaPoints\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"expiresIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"internalType\":\"struct InspectionContract.Inspection[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getInspectionsHistory\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum InspectionContract.InspectionStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"producerWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"activistWallet\",\"type\":\"address\"},{\"internalType\":\"uint256[][]\",\"name\":\"isas\",\"type\":\"uint256[][]\"},{\"internalType\":\"int256\",\"name\":\"isaPoints\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"expiresIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"internalType\":\"struct InspectionContract.Inspection[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInspectionsStatus\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getIsas\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getProducer\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"producer_wallet\",\"type\":\"address\"},{\"internalType\":\"enum UserContract.UserType\",\"name\":\"userType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"document\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"documentType\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recentInspection\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalRequests\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"isaPoints\",\"type\":\"int256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"allowed\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"withdrewToken\",\"type\":\"bool\"}],\"internalType\":\"struct ProducerContract.TokenApprove\",\"name\":\"tokenApprove\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"state\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"cep\",\"type\":\"string\"}],\"internalType\":\"struct ProducerContract.PropertyAddress\",\"name\":\"property_address\",\"type\":\"tuple\"}],\"internalType\":\"struct ProducerContract.Producer\",\"name\":\"producer\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"address_\",\"type\":\"address\"}],\"name\":\"getProducerApprove\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProducers\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"producer_wallet\",\"type\":\"address\"},{\"internalType\":\"enum UserContract.UserType\",\"name\":\"userType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"document\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"documentType\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recentInspection\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalRequests\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"isaPoints\",\"type\":\"int256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"allowed\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"withdrewToken\",\"type\":\"bool\"}],\"internalType\":\"struct ProducerContract.TokenApprove\",\"name\":\"tokenApprove\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"state\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"cep\",\"type\":\"string\"}],\"internalType\":\"struct ProducerContract.PropertyAddress\",\"name\":\"property_address\",\"type\":\"tuple\"}],\"internalType\":\"struct ProducerContract.Producer[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getUser\",\"outputs\":[{\"internalType\":\"enum UserContract.UserType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUserTypes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"inspectionExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"producerExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"producersCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"producersList\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"producer_wallet\",\"type\":\"address\"},{\"internalType\":\"enum UserContract.UserType\",\"name\":\"userType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"document\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"documentType\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recentInspection\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalRequests\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"isaPoints\",\"type\":\"int256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"allowed\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"withdrewToken\",\"type\":\"bool\"}],\"internalType\":\"struct ProducerContract.TokenApprove\",\"name\":\"tokenApprove\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"state\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"cep\",\"type\":\"string\"}],\"internalType\":\"struct ProducerContract.PropertyAddress\",\"name\":\"property_address\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"inspectionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[][]\",\"name\":\"isas\",\"type\":\"uint256[][]\"}],\"name\":\"realizeInspection\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestInspection\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usersCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Inpection action core\",\"kind\":\"dev\",\"methods\":{\"acceptInspection(uint256)\":{\"details\":\"Allows the current user (activist) accept a inspection.\",\"params\":{\"inspectionId\":\"The id of the inspection that the activist want accept.\"}},\"activistExists(address)\":{\"details\":\"Check if a specific activist exists\",\"returns\":{\"_0\":\"a bool that represent if a activist exists or not\"}},\"addActivist(string,string,string,string,string,string,string)\":{\"details\":\"Allow a new register of activist\",\"params\":{\"cep\":\"the cep of the activist\",\"city\":\"the of the activist\",\"country\":\"the country where the activist is\",\"document\":\"the document of activist\",\"documentType\":\"the document type type of activist. CPF/CNPJ\",\"name\":\"the name of the activist\",\"state\":\"the state of the activist\"},\"returns\":{\"_0\":\"a Activist\"}},\"addCategory(string,string,string,string,string,string,string)\":{\"details\":\"add a new category\",\"params\":{\"description\":\"the description of category\",\"name\":\"the name of category\",\"neutro\":\"the description text to this metric\",\"partiallyNotSustainable\":\"the description text to this metric\",\"partiallySustainable\":\"the description text to this metric\",\"totallyNotSustainable\":\"the description text to this metric\",\"totallySustainable\":\"the description text to this metric\"},\"returns\":{\"_0\":\"bool\"}},\"addProducer(string,string,string,string,string,string,string)\":{\"details\":\"Allow a new register of producer\",\"params\":{\"cep\":\"the cep of the producer\",\"city\":\"the of the producer\",\"country\":\"the country where the producer is\",\"document\":\"the document of producer\",\"documentType\":\"the document type type of producer. CPF/CNPJ\",\"name\":\"the name of the producer\",\"state\":\"the state of the producer\"}},\"getActivist(address)\":{\"details\":\"Return a specific activist\",\"params\":{\"addr\":\"the address of the activist.\"}},\"getActivists()\":{\"details\":\"Returns all registered activists\",\"returns\":{\"_0\":\"Activist struct array\"}},\"getCategories()\":{\"details\":\"Returns all added categories\",\"returns\":{\"_0\":\"category struc array\"}},\"getCategory(uint256)\":{\"details\":\"get a specific category\",\"params\":{\"id\":\"the id of a category\"}},\"getInspection(uint256)\":{\"details\":\"Returns a inspection by id if that exists.\",\"params\":{\"id\":\"The id of the inspection to return.\"}},\"getInspections()\":{\"details\":\"Returns all requested inspections.\"},\"getInspectionsHistory(address)\":{\"details\":\"Allows the current user producer/activist get all yours inspections with status INSPECTED\"},\"getInspectionsStatus()\":{\"details\":\"Returns all inpections status string.\"},\"getIsas()\":{\"details\":\"Returns all isas string.\"},\"getProducer(address)\":{\"details\":\"Return a specific producer\",\"params\":{\"addr\":\"the address of the producer.\"}},\"getProducers()\":{\"details\":\"Returns all registered producers\",\"returns\":{\"_0\":\"Producer struct array\"}},\"getUser(address)\":{\"details\":\"Returns the user type if the user is registered\",\"params\":{\"addr\":\"the user address that want check if exists\"}},\"getUserTypes()\":{\"details\":\"Returns the enum UserType of the system\"},\"inspectionExists(uint256)\":{\"details\":\"Check if an inspections exists in mapping.\",\"params\":{\"id\":\"The id of the inspection that the activist want accept.\"}},\"producerExists(address)\":{\"details\":\"Check if a specific producer exists\",\"returns\":{\"_0\":\"a bool that represent if a producer exists or not\"}},\"realizeInspection(uint256,uint256[][])\":{\"details\":\"Allow a activist realize a inspection and mark as INSPECTED\",\"params\":{\"inspectionId\":\"The id of the inspection to be realized\",\"isas\":\"The uint[][] of categoryId and isaIndex. Ex: isas = [ [categoryId, isaIndex], [categoryId, isaIndex] ]\"}},\"requestInspection()\":{\"details\":\"Allows the current user (producer) request a inspection.\"},\"vote(uint256)\":{\"details\":\"Allow a user vote in a category\",\"params\":{\"id\":\"the id of a category that receives a vote.\"},\"returns\":{\"_0\":\"category struc array\"}}},\"title\":\"InspectionContract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/Breno/Desktop/Sintrop/SintropContract/contracts/InspectionContract.sol\":\"InspectionContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/Breno/Desktop/Sintrop/SintropContract/contracts/ActivistContract.sol\":{\"keccak256\":\"0xc0dda3623b53f07e893e2cd3a485b28bd9581bb764213fe693a1760f6b0e1a1c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2761d9388decd5a47471cd3d004316d45203e77ac18564ba0c9d50498bd6a4da\",\"dweb:/ipfs/QmSABwRVdwtHFWJuFtNo3L1y1rgUpydcXRZUNrcEZF5HNJ\"]},\"/C/Users/Breno/Desktop/Sintrop/SintropContract/contracts/CategoryContract.sol\":{\"keccak256\":\"0xd7344794b5aba6d55742cfff238a42961cda68a99bf78d7f9763da3530f48c85\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://13a4e25d0e1fe304f19d13958c9138a6e42e20dce2ada58b47623e4892f78a9a\",\"dweb:/ipfs/QmX7GPGfXoHsYhgHGUX926edDiF7V7rcFRuaUDRU4AFQad\"]},\"/C/Users/Breno/Desktop/Sintrop/SintropContract/contracts/InspectionContract.sol\":{\"keccak256\":\"0x80f1a60552ba1fa1ea671e0ecef6e13b5cf3b577687ba1c271af14d0552b8365\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://966cb6617fe54f11b9ed15efc0d8c7eb43b27e4f4180903631b2a8cd25139b6d\",\"dweb:/ipfs/QmWsyBJLbqfhhT2Zs5dPBqpHWFt83ETP1vVbFSNY5eeULz\"]},\"/C/Users/Breno/Desktop/Sintrop/SintropContract/contracts/ProducerContract.sol\":{\"keccak256\":\"0x21b635f8cafc0131be724421e5a794393f0ff1e8fcc046e84a53294ed30868fb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://cf335f2509aa93fe70c5c4c357834d77622a2a93031035c55c750275e83d3a4d\",\"dweb:/ipfs/QmR61mmoRvzEVNPnG29KzE3CK3qfR12zmsBfnrf48JRdQ5\"]},\"/C/Users/Breno/Desktop/Sintrop/SintropContract/contracts/UserContract.sol\":{\"keccak256\":\"0xbd938b28a90dbc3bc48fdd6f06bcdaab1b6a41cd6474bf902421dd7bff08a0a5\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a6840fd294114e6ee87c13f52cfd217df3db14346f4b348640e4e3ebb6671b02\",\"dweb:/ipfs/QmXUoCzJPkaNuiKQhkv3UERAVAEAHim5oDUNSAGxYm48mf\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "immutableReferences": {},
  "sourceMap": "254:7795:3:-:0;;;438:6;412:32;;254:7795;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "254:7795:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2451:206:1;;;;;;:::i;:::-;;:::i;:::-;;;460:14:17;;453:22;435:41;;423:2;408:18;2451:206:1;;;;;;;;700:26:0;;;;;;;;;633:25:17;;;621:2;606:18;700:26:0;487:177:17;851:31:6;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;1164:861:0:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2133:102::-;;;:::i;:::-;;;;;;;:::i;940:104:1:-;;;:::i;:::-;;;;;;;:::i;2344:113:0:-;;;;;;:::i;:::-;;:::i;977:153:12:-;1077:45;;;;;;;;;;;;-1:-1:-1;;;1077:45:12;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1077:45:12;;;;;;;;;;;;;;-1:-1:-1;;;1077:45:12;;;;;;;977:153;;;;1077:45;977:153;:::i;351:22::-;;;;;;804:98;;;;;;:::i;:::-;-1:-1:-1;;;;;883:11:12;855:8;883:11;;;;;;;;;;;;;;804:98;;;;;;;;:::i;733:26:1:-;;;;;;1054:133:3;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1277:451::-;;;:::i;2596:128:0:-;;;;;;:::i;:::-;;:::i;3261:139:6:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3352:19:6;3328:4;3352:19;;;:9;:19;;;;;:32;;:40;;3261:139;1369:940;;;;;;:::i;:::-;;:::i;1551:735:1:-;;;;;;:::i;:::-;;:::i;2632:122:6:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2928:250:1:-;3053:117;;;;;;;;;;;;-1:-1:-1;;;3053:117:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3053:117:1;;;;;;;;;;;;;;-1:-1:-1;;;3053:117:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2928:250;;;;3053:117;;;2928:250;:::i;3293:589:3:-;;;;;;:::i;:::-;;:::i;5942:182::-;6065:51;;;;;;;;;;;-1:-1:-1;;;6065:51:3;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6065:51:3;;;;;;;;;;;;;;-1:-1:-1;;;6065:51:3;;;;;;;;;;;;;;-1:-1:-1;;;6065:51:3;;;;;;;5942:182;;;;6065:51;;;5942:182;:::i;934:26:6:-;;;;;;2444:552:3;;;;;;:::i;:::-;;:::i;2417:102:6:-;;;:::i;:::-;;;;;;;:::i;2893:128::-;;;;;;:::i;:::-;;:::i;5756:109:3:-;;;:::i;702:24:1:-;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;5567:115:3:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2757:107:1:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;6278:113:3:-;;;;;;:::i;:::-;6336:4;6360:15;;;:11;:15;;;;;:18;6382:1;-1:-1:-1;6360:23:3;;6278:113;2451:206:1;2513:4;3264:14;;;:10;:14;;;;;:17;2493:2;;3256:60;;;;-1:-1:-1;;;3256:60:1;;23979:2:17;3256:60:1;;;23961:21:17;24018:2;23998:18;;;23991:30;24057:28;24037:18;;;24030:56;24103:18;;3256:60:1;;;;;;;;;2530:14:::1;::::0;;;:10:::1;:14;::::0;;;;:25:::1;;:27:::0;;;::::1;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;;2583:14:1::1;::::0;;;:10:::1;:14;::::0;;;;:20:::1;;::::0;2568:14:::1;:36:::0;;:14;;2583:20;2568:36;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;:47:::1;:36;::::0;;::::1;;:47;:49:::0;;;::::1;::::0;::::1;:::i;:::-;;;;;;2645:4;2638:11;;3332:1;2451:206:::0;;;;:::o;851:31:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;851:31:6;;;-1:-1:-1;;;851:31:6;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;851:31:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;851:31:6;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1164:861:0:-;1426:15;;:::i;:::-;1469:7;1479:14;;1496:1;1479:18;;;;:::i;:::-;1619:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1703:91;;;;;;;;;;1716:10;1703:91;;;;;;;1469:28;;-1:-1:-1;1532:17:0;;1619:42;;1512:17;;1703:91;;;1532:17;1703:91;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1703:91:0;;;;;;;;;;;;;;;;;;;1823:13;:28;;1703:91;1823:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1823:28:0;;;-1:-1:-1;;;;;;1823:28:0;;;;;;;;;;1676:118;;-1:-1:-1;1676:118:0;;1823:28;;;-1:-1:-1;;;;;;1823:28:0;;;;-1:-1:-1;;;1823:28:0;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;1823:28:0;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1823:28:0;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1823:28:0;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1823:28:0;;;;;;;;;-1:-1:-1;;1823:28:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1823:28:0;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1823:28:0;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1823:28:0;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;1876:10:0;1866:21;;;;:9;:21;;;;;;;;;:32;;;;;;;;;;;;;-1:-1:-1;;;;;;1866:32:0;;-1:-1:-1;;;;;1866:32:0;;;;;;;;;;;;;;-1:-1:-1;1866:21:0;;-1:-1:-1;1866:32:0;;-1:-1:-1;1866:32:0;;-1:-1:-1;;;;;;1866:32:0;;-1:-1:-1;;;1866:32:0;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;1866:32:0;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1866:32:0;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1866:32:0;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1866:32:0;;;;;;;;;-1:-1:-1;;1866:32:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1866:32:0;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1866:32:0;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1866:32:0;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;1913:14:0;:16;;;-1:-1:-1;1913:14:0;-1:-1:-1;1913:14:0;;-1:-1:-1;1913:16:0;;;:::i;:::-;;;;;;1944:29;1952:10;1964:8;1944:7;:29::i;:::-;2009:8;1164:861;-1:-1:-1;;;;;;;;;;;1164:861:0:o;2133:102::-;2177:17;2214:13;2207:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2207:20:0;;;;;;;;;;;;;;;-1:-1:-1;;;2207:20:0;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2207:20:0;;;-1:-1:-1;;2207:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2133:102;:::o;940:104:1:-;985:17;1022:14;1015:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1015:21:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2344:113:0;2399:15;;:::i;:::-;-1:-1:-1;;;;;2434:15:0;;;;;;;:9;:15;;;;;;;;;2427:22;;;;;;;;;;;;;;;;;;;;;;;;;;;2434:15;;2427:22;;;-1:-1:-1;;;2427:22:0;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2427:22:0;;;-1:-1:-1;;2427:22:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2427:22:0;;;;-1:-1:-1;;;2427:22:0;;-1:-1:-1;2427:22:0;2344:113;-1:-1:-1;;2344:113:0:o;1054:133:3:-;-1:-1:-1;;;;;1158:21:3;;;;;;:15;:21;;;;;;;;1151:28;;;;;;;;;;;;;;;;;1119:19;;1151:28;;1158:21;;1151:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1151:28:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1151:28:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1054:133;;;:::o;1277:451::-;1321:4;1346:26;1361:10;1346:14;:26::i;:::-;1338:85;;;;-1:-1:-1;;;1338:85:3;;25256:2:17;1338:85:3;;;25238:21:17;25295:2;25275:18;;;25268:30;25334:34;25314:18;;;25307:62;-1:-1:-1;;;25385:18:17;;;25378:44;25439:19;;1338:85:3;25054:410:17;1338:85:3;1452:10;1442:21;;;;:9;:21;;;;;:38;;;;;:47;1434:162;;;;-1:-1:-1;;;1434:162:3;;25671:2:17;1434:162:3;;;25653:21:17;25710:3;25690:18;;;25683:31;25750:34;25730:18;;;25723:62;25821:34;25801:18;;;25794:62;25893:34;25872:19;;;25865:63;-1:-1:-1;;;25944:19:17;;;25937:37;25991:19;;1434:162:3;25469:547:17;1434:162:3;1617:15;:13;:15::i;:::-;-1:-1:-1;1653:10:3;1643:21;;;;:9;:21;;;;;:38;;:45;;-1:-1:-1;;1643:45:3;1684:4;1643:45;;;;;;1684:4;1277:451::o;2596:128:0:-;-1:-1:-1;;;;;2684:15:0;;2654:4;2684:15;;;:9;:15;;;;;:20;;2678:34;;2654:4;;2684:20;2678:34;;;:::i;:::-;;;:38;2671:45;;2596:128;;;:::o;1369:940:6:-;1631:4;1666:7;1676:14;;1693:1;1676:18;;;;:::i;:::-;1817:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1909:22;;;;;;;1709:17;1909:22;;;;;;;;;1973:109;;;;;;;;;;1986:10;1973:109;;;;;;;1666:28;;-1:-1:-1;1729:17:6;;1817:42;;1909:22;;1709:17;1973:109;;;1729:17;1973:109;;;;2008:4;1973:109;;;;2014:8;1973:109;;;;2024:12;1973:109;;;;2038:5;1973:109;;;;;;2045:1;1973:109;;;;2048:1;1973:109;;;;2051:12;1973:109;;;;2065:16;1973:109;;;1946:136;;2111:13;2130:8;2111:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2111:28:6;;;;;-1:-1:-1;;;;;2111:28:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;2111:28:6;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2111:28:6;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2111:28:6;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2111:28:6;;;;;;;;;;;;-1:-1:-1;;2111:28:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2111:28:6;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2111:28:6;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2111:28:6;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;2164:10:6;2154:21;;;;:9;:21;;;;;;;;;:32;;;;;;;;;;;;;-1:-1:-1;;;;;;2154:32:6;;-1:-1:-1;;;;;2154:32:6;;;;;;;;;;;;;;-1:-1:-1;2154:21:6;;-1:-1:-1;2154:32:6;;-1:-1:-1;2154:32:6;;-1:-1:-1;;;;;;2154:32:6;;;-1:-1:-1;;;2154:32:6;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;2154:32:6;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2154:32:6;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2154:32:6;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2154:32:6;;;;;;;;;;;;-1:-1:-1;;2154:32:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2154:32:6;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2154:32:6;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2154:32:6;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;2201:14:6;:16;;;-1:-1:-1;2201:14:6;-1:-1:-1;2201:14:6;;-1:-1:-1;2201:16:6;;;:::i;:::-;;;;;;2232:29;2240:10;2252:8;2232:7;:29::i;:::-;-1:-1:-1;2297:4:6;;1369:940;-1:-1:-1;;;;;;;;;;;;1369:940:6:o;1551:735:1:-;1872:4;1889:10;1902:14;;1919:1;1902:18;;;;:::i;:::-;1889:31;-1:-1:-1;1931:10:1;1944:6;1949:1;1889:31;1944:6;:::i;:::-;1982:151;;;;;;;;;;;1995:10;1982:151;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1982:151:1;;;;;;;;;;1971:8;:162;;;;;;-1:-1:-1;;;;;;1971:162:1;;;;;;;;;1931:19;;-1:-1:-1;1982:151:1;;1971:8;;:162;;;;;;;;:::i;:::-;-1:-1:-1;1971:162:1;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1971:162:1;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1971:162:1;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1971:162:1;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1971:162:1;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1971:162:1;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1971:162:1;;;;;;;;;;;;;;;;;;;;;;2154:14;:29;;;;;;;-1:-1:-1;2154:29:1;;;;2174:8;2154:29;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2154:29:1;-1:-1:-1;;;;;2154:29:1;;;;;;;;;;;2174:8;;2154:29;;;;;;;1971:162;2154:29;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;-1:-1:-1;2154:29:1;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2194:14:1;;;:10;:14;;;;;2211:8;2194:25;;;;;;;;;;;-1:-1:-1;;;;;;2194:25:1;-1:-1:-1;;;;;2194:25:1;;;;;;;;;;;2211:8;;2194:14;;:25;;;;2154:29;2194:25;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;-1:-1:-1;2194:25:1;;;;;;;;;;;;;;;;;2230:14;:16;;;-1:-1:-1;2230:16:1;;;:::i;:::-;;;;-1:-1:-1;2274:4:1;;1551:735;-1:-1:-1;;;;;;;;;;;1551:735:1:o;2632:122:6:-;2687:24;;:::i;:::-;-1:-1:-1;;;;;2731:15:6;;;;;;;:9;:15;;;;;;;;;2724:22;;;;;;;;;;;;;;;;;;;;;;;;;;;2731:15;;2724:22;;;-1:-1:-1;;;2724:22:6;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2724:22:6;;;-1:-1:-1;;2724:22:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3293:589:3:-;3431:4;7776:26;7791:10;7776:14;:26::i;:::-;7768:86;;;;-1:-1:-1;;;7768:86:3;;;;;;;:::i;:::-;6336:4;6360:15;;;:11;:15;;;;;:18;3409:12;;6382:1;-1:-1:-1;6360:23:3;7949:71:::1;;;::::0;-1:-1:-1;;;7949:71:3;;26769:2:17;7949:71:3::1;::::0;::::1;26751:21:17::0;26808:2;26788:18;;;26781:30;26847;26827:18;;;26820:58;26895:18;;7949:71:3::1;26567:352:17::0;7949:71:3::1;3453:24:::2;3464:12;3453:10;:24::i;:::-;3448:43;;3486:5;3479:12;;;;3448:43;3507:29;3523:12;7451:4:::0;7475:25;;;:11;:25;;;;;:40;;;-1:-1:-1;;;;;7475:40:3;7519:10;7475:54;;7385:152;3507:29:::2;3502:48;;3545:5;3538:12;;;;3502:48;3563:28;3594:25:::0;;;:11:::2;:25;::::0;;;;;;;3563:56;;::::2;::::0;::::2;::::0;;;;;;;::::2;::::0;::::2;::::0;;;3594:25;;3563:56;;::::2;::::0;::::2;;;::::0;::::2;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;::::0;;::::2;::::0;::::2;::::0;-1:-1:-1;;;;;3563:56:3::2;::::0;;::::2;::::0;::::2;;::::0;;::::2;::::0;;;;::::2;::::0;::::2;::::0;;;::::2;::::0;;;;;;;;::::2;::::0;::::2;::::0;;;;;;::::2;::::0;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3563:56:3;::::2;;;;;;;;;::::0;;;::::2;::::0;;;;;::::2;::::0;;::::2;::::0;;;;::::2;::::0;;;;;;;;;;;;::::2;::::0;;;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;3632:32;3647:10;3659:4;3632:14;:32::i;:::-;3677:36;3700:12;3677:22;:36::i;:::-;3758:20;::::0;::::2;::::0;5298:23;5324:25;;;:11;:25;;;;;;;;:40;;;;;;-1:-1:-1;;;;;5324:40:3;5375:26;;:9;:26;;;;;:36;;:48;3792:57:::2;3817:10;:25;;;3844:4;3792:24;:57::i;:::-;3870:4;3863:11;;;8031:1;7865::::1;3293:589:::0;;;;:::o;2444:552::-;2558:4;7776:26;7791:10;7776:14;:26::i;:::-;7768:86;;;;-1:-1:-1;;;7768:86:3;;;;;;;:::i;:::-;6336:4;6360:15;;;:11;:15;;;;;:18;2536:12;;6382:1;-1:-1:-1;6360:23:3;7949:71:::1;;;::::0;-1:-1:-1;;;7949:71:3;;26769:2:17;7949:71:3::1;::::0;::::1;26751:21:17::0;26808:2;26788:18;;;26781:30;26847;26827:18;;;26820:58;26895:18;;7949:71:3::1;26567:352:17::0;7949:71:3::1;2575:28:::2;2606:25:::0;;;:11:::2;:25;::::0;;;;;;;2575:56;;::::2;::::0;::::2;::::0;;;;;;;::::2;::::0;::::2;::::0;;;2606:25;;2575:56;;::::2;::::0;::::2;;;::::0;::::2;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;::::0;;::::2;::::0;::::2;::::0;-1:-1:-1;;;;;2575:56:3::2;::::0;;::::2;::::0;::::2;;::::0;;::::2;::::0;;;;::::2;::::0;::::2;::::0;;;::::2;::::0;;;;;;;;::::2;::::0;::::2;::::0;;;;;;::::2;::::0;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2575:56:3;::::2;;;;;;;;;::::0;;;::::2;::::0;;;;;::::2;::::0;;::::2;::::0;;;;::::2;::::0;;;;;;;;;;;;::::2;::::0;;;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;2575:56:3;;;-1:-1:-1;2575:56:3::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;;;;::::2;::::0;::::2;::::0;;;;;::::2;::::0;::::2;::::0;;;;;::::2;::::0;;::::2;::::0;;;;;;;-1:-1:-1;;2646:10:3::2;:17;;;:42;;;;;;;;:::i;:::-;;2642:60;;2697:5;2690:12;;;;;2642:60;2735:25;2715:17;::::0;;::::2;:45:::0;;;2794:15:::2;2771:20;::::0;::::2;:38:::0;2848:10:::2;2820:25;::::0;::::2;:38:::0;-1:-1:-1;2869:25:3;;;:11:::2;:25:::0;;;;;;;:38;;;;;;::::2;::::0;;::::2;::::0;;2715:17;;2869:38;;-1:-1:-1;;2869:38:3;;;::::2;::::0;;;;::::2;;;;;;:::i;:::-;;;::::0;;-1:-1:-1;2869:38:3::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;-1:-1:-1;;;;;;2869:38:3::2;;-1:-1:-1::0;;;;;2869:38:3;;::::2;;;::::0;;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;-1:-1:-1;;;;;;2869:38:3::2;::::0;;;::::2;;::::0;;::::2;::::0;::::2;::::0;;;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2956:10;2920:15;2936:10;:16;;;2920:33;;;;;;;;:::i;:::-;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;::::0;;-1:-1:-1;2920:46:3::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;-1:-1:-1;;;;;;2920:46:3::2;;-1:-1:-1::0;;;;;2920:46:3;;::::2;;;::::0;;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;-1:-1:-1;;;;;;2920:46:3::2;::::0;;;::::2;;::::0;;::::2;::::0;::::2;::::0;;;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;:::i;:::-;-1:-1:-1::0;2920:46:3::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;::::0;;::::2;::::0;-1:-1:-1;2984:4:3::2;::::0;2444:552;-1:-1:-1;;;2444:552:3:o;2417:102:6:-;2461:17;2498:13;2491:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2491:20:6;;;;;;;;;;;;;;;-1:-1:-1;;;2491:20:6;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2491:20:6;;;-1:-1:-1;;2491:20:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2893:128;-1:-1:-1;;;;;2981:15:6;;2951:4;2981:15;;;:9;:15;;;;;:20;;2975:34;;2951:4;;2981:20;2975:34;;;:::i;5756:109:3:-;5803:19;5842:15;5835:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5835:22:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5835:22:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;702:24:1;;;;;;;;;;;-1:-1:-1;;;;;702:24:1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5567:115:3:-;5622:17;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5622:17:3;5659:15;;;;:11;:15;;;;;;;;;5652:22;;;;;;;;;;;;;;;;5659:15;;5652:22;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5652:22:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5652:22:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5567:115;;;:::o;2757:107:1:-;2807:15;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2807:15:1;2842:14;;;;:10;:14;;;;;;;;;2835:21;;;;;;;;;;;;;;;-1:-1:-1;;;;;2835:21:1;;;;;;;;;;;;;;;2842:14;;2835:21;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2757:107;;;:::o;537:123:12:-;-1:-1:-1;;;;;607:11:12;;:5;:11;;;;;;;;;;:22;;621:8;;607:11;-1:-1:-1;;607:22:12;;621:8;607:22;;;;;;;;:::i;:::-;;;;;-1:-1:-1;640:10:12;:12;;;:10;:12;;;:::i;:::-;;;;;;537:123;;:::o;1745:522:3:-;1789:7;1799:16;;1818:1;1799:20;;;;:::i;:::-;1789:30;-1:-1:-1;1830:10:3;1843:6;1848:1;1789:30;1843:6;:::i;:::-;1830:19;;1860:20;1891:14;1926:18;;1908:15;:36;;;;:::i;:::-;1891:53;;1955:28;1986:162;;;;;;;;1997:2;1986:162;;;;2001:21;1986:162;;;;;;;;:::i;:::-;;;2024:10;1986:162;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1986:162:3;;;;;;;;;;;;2122:15;1986:162;;;;;;;;;;;;;;;;;2159:15;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1955:193;;-1:-1:-1;1955:193:3;;2159:32;;-1:-1:-1;;2159:32:3;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;2159:32:3;;;;;;;;;-1:-1:-1;;;;;;2159:32:3;;-1:-1:-1;;;;;2159:32:3;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2159:32:3;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2159:32:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2202:15:3;;;:11;:15;;;;;;;;:28;;;;;;;;;;;;;;2220:10;;2202:15;:28;-1:-1:-1;;2202:28:3;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;2202:28:3;;;;;;;;;-1:-1:-1;;;;;;2202:28:3;;-1:-1:-1;;;;;2202:28:3;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2202:28:3;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2202:28:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2241:16;:18;;;-1:-1:-1;2241:18:3;;;:::i;:::-;;;;;;1778:489;;;;;1745:522::o;7546:154::-;7607:4;7667:25;7631;;;;:11;:25;;;;;:32;;;;;:61;;;;;;;;:::i;:::-;;;7546:154;-1:-1:-1;;7546:154:3:o;4809:400::-;4908:15;;;:22;;;4961:26;4941:17;;;:46;5021:15;4998:20;;;:38;5070:24;4908:15;5070:12;:24::i;:::-;5047:20;;;:47;5117:13;;5105:26;;;;:11;:26;;;;;;;;:39;;;;;;;;;;;;;;5047:10;;5105:26;:39;-1:-1:-1;;5105:39:3;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;5105:39:3;;;;;;;;;-1:-1:-1;;;;;;5105:39:3;;-1:-1:-1;;;;;5105:39:3;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5105:39:3;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5191:10;5155:15;5171:10;:16;;;5155:33;;;;;;;;:::i;:::-;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;5155:46:3;;;;;;;;;-1:-1:-1;;;;;;5155:46:3;;-1:-1:-1;;;;;5155:46:3;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5155:46:3;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5155:46:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4809:400:3:o;6585:788::-;6656:22;6681:25;;;:11;:25;;;;;;;;:40;;;;6757;;;;;-1:-1:-1;;;;;6757:40:3;;;6901:25;;;:9;:25;;;;;;;:42;;;:50;;-1:-1:-1;;6901:50:3;;;6962:42;;;:44;;6681:40;;;;;;;;6757;;6962:44;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;7105:25:3;;7150:5;7105:25;;;:9;:25;;;;;:42;;;:50;;-1:-1:-1;;7105:50:3;;;7166:39;;:41;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;7228:31:3;;;;;;:15;:31;;;;;;;;7265:25;;;:11;:25;;;;;7228:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7228:63:3;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;7228:63:3;;;;;;;;;;-1:-1:-1;;;;;7228:63:3;;;;;;;;;;-1:-1:-1;;;;;;7228:63:3;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7228:63:3;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7228:63:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7302:31:3;;-1:-1:-1;7302:31:3;;;:15;:31;;;;;;;;7339:25;;;:11;:25;;;;;7302:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7302:63:3;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;7302:63:3;;;;;;;;;;-1:-1:-1;;;;;7302:63:3;;;;;;;;;;-1:-1:-1;;;;;;7302:63:3;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7302:63:3;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6645:728;;6585:788;:::o;3029:224:6:-;-1:-1:-1;;;;;3127:15:6;;3113:11;3127:15;;;:9;:15;;;;;;;:28;;:36;3205:40;;;;;;;;3127:36;3205:40;3218:19;3228:9;3127:36;3218:19;:::i;:::-;3205:40;;3239:5;3205:40;;;;;;;-1:-1:-1;;;;;3174:15:6;;;;;;:9;:15;;;;;;:71;;:28;;;:71;;;;;;;;;;-1:-1:-1;;3174:71:6;;;;;;;;;;;-1:-1:-1;;3029:224:6:o;4086:208:3:-;4199:15;;;;4160:3;;;4241:18;4199:15;4241:12;:18::i;:::-;4225:34;4086:208;-1:-1:-1;;;;4086:208:3:o;4440:361::-;4522:67;;;;;;;;4550:2;4522:67;;4559:1;4522:67;;;;4506:3;4522:67;;;;;;-1:-1:-1;;4522:67:3;;;;-1:-1:-1;;4522:67:3;;;;4506:3;;4630:137;4652:4;:11;4648:1;:15;;;4630:137;;;4685:13;4701:4;4706:1;4701:7;;;;;;;;;;:::i;:::-;;;;;;;4709:1;4701:10;;;;;;;;:::i;:::-;;;;;;;4685:26;;4739:6;4746:8;4739:16;;;;;;;:::i;:::-;;;;;4726:29;;;;:::i;:::-;;;4670:97;4665:3;;;;;:::i;:::-;;;;4630:137;;;-1:-1:-1;4784:9:3;4440:361;-1:-1:-1;;;4440:361:3:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;14:180:17:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:17;;14:180;-1:-1:-1;14:180:17:o;778:127::-;839:10;834:3;830:20;827:1;820:31;870:4;867:1;860:15;894:4;891:1;884:15;910:210;991:1;984:5;981:12;971:143;;1036:10;1031:3;1027:20;1024:1;1017:31;1071:4;1068:1;1061:15;1099:4;1096:1;1089:15;1125:130;1185:37;1216:5;1185:37;:::i;:::-;1231:18;;1125:130::o;1260:472::-;1302:3;1340:5;1334:12;1367:6;1362:3;1355:19;1392:1;1402:162;1416:6;1413:1;1410:13;1402:162;;;1478:4;1534:13;;;1530:22;;1524:29;1506:11;;;1502:20;;1495:59;1431:12;1402:162;;;1582:6;1579:1;1576:13;1573:87;;;1648:1;1641:4;1632:6;1627:3;1623:16;1619:27;1612:38;1573:87;-1:-1:-1;1714:2:17;1693:15;-1:-1:-1;;1689:29:17;1680:39;;;;1721:4;1676:50;;1260:472;-1:-1:-1;;1260:472:17:o;1911:698::-;1969:3;2013:5;2007:12;2040:4;2035:3;2028:17;2066:47;2107:4;2102:3;2098:14;2084:12;2066:47;:::i;:::-;2054:59;;2161:4;2154:5;2150:16;2144:23;2209:3;2203:4;2199:14;2192:4;2187:3;2183:14;2176:38;2237:39;2271:4;2255:14;2237:39;:::i;:::-;2223:53;;;2324:4;2317:5;2313:16;2307:23;2374:3;2366:6;2362:16;2355:4;2350:3;2346:14;2339:40;2402:41;2436:6;2420:14;2402:41;:::i;:::-;2388:55;;;2491:4;2484:5;2480:16;2474:23;2541:3;2533:6;2529:16;2522:4;2517:3;2513:14;2506:40;2562:41;2596:6;2580:14;2562:41;:::i;:::-;2555:48;1911:698;-1:-1:-1;;;;;1911:698:17:o;2614:1475::-;3217:25;;;-1:-1:-1;;;;;3278:32:17;;3273:2;3258:18;;3251:60;3176:4;3205:3;3320:38;3351:6;3320:38;:::i;:::-;3394:6;3389:2;3378:9;3374:18;3367:34;3437:2;3432;3421:9;3417:18;3410:30;3463:45;3504:2;3493:9;3489:18;3481:6;3463:45;:::i;:::-;3449:59;;3557:9;3549:6;3545:22;3539:3;3528:9;3524:19;3517:51;3591:33;3617:6;3609;3591:33;:::i;:::-;3577:47;;3673:9;3665:6;3661:22;3655:3;3644:9;3640:19;3633:51;3707:33;3733:6;3725;3707:33;:::i;:::-;3693:47;;3791:6;3784:14;3777:22;3771:3;3760:9;3756:19;3749:51;3837:6;3831:3;3820:9;3816:19;3809:35;3881:6;3875:3;3864:9;3860:19;3853:35;3897:59;3951:3;3940:9;3936:19;3928:6;1815:12;;1803:25;;1891:4;1880:16;;;1874:23;1867:31;1860:39;1844:14;;1837:63;1737:169;3897:59;4005:9;3997:6;3993:22;3987:3;3976:9;3972:19;3965:51;4033:50;4076:6;4067:7;4033:50;:::i;:::-;4025:58;2614:1475;-1:-1:-1;;;;;;;;;;;;;;2614:1475:17:o;4094:127::-;4155:10;4150:3;4146:20;4143:1;4136:31;4186:4;4183:1;4176:15;4210:4;4207:1;4200:15;4226:275;4297:2;4291:9;4362:2;4343:13;;-1:-1:-1;;4339:27:17;4327:40;;4397:18;4382:34;;4418:22;;;4379:62;4376:88;;;4444:18;;:::i;:::-;4480:2;4473:22;4226:275;;-1:-1:-1;4226:275:17:o;4506:531::-;4549:5;4602:3;4595:4;4587:6;4583:17;4579:27;4569:55;;4620:1;4617;4610:12;4569:55;4656:6;4643:20;4682:18;4678:2;4675:26;4672:52;;;4704:18;;:::i;:::-;4748:55;4791:2;4772:13;;-1:-1:-1;;4768:27:17;4797:4;4764:38;4748:55;:::i;:::-;4828:2;4819:7;4812:19;4874:3;4867:4;4862:2;4854:6;4850:15;4846:26;4843:35;4840:55;;;4891:1;4888;4881:12;4840:55;4956:2;4949:4;4941:6;4937:17;4930:4;4921:7;4917:18;4904:55;5004:1;4979:16;;;4997:4;4975:27;4968:38;;;;4983:7;4506:531;-1:-1:-1;;;4506:531:17:o;5042:1547::-;5225:6;5233;5241;5249;5257;5265;5273;5326:3;5314:9;5305:7;5301:23;5297:33;5294:53;;;5343:1;5340;5333:12;5294:53;5383:9;5370:23;5412:18;5453:2;5445:6;5442:14;5439:34;;;5469:1;5466;5459:12;5439:34;5492:50;5534:7;5525:6;5514:9;5510:22;5492:50;:::i;:::-;5482:60;;5595:2;5584:9;5580:18;5567:32;5551:48;;5624:2;5614:8;5611:16;5608:36;;;5640:1;5637;5630:12;5608:36;5663:52;5707:7;5696:8;5685:9;5681:24;5663:52;:::i;:::-;5653:62;;5768:2;5757:9;5753:18;5740:32;5724:48;;5797:2;5787:8;5784:16;5781:36;;;5813:1;5810;5803:12;5781:36;5836:52;5880:7;5869:8;5858:9;5854:24;5836:52;:::i;:::-;5826:62;;5941:2;5930:9;5926:18;5913:32;5897:48;;5970:2;5960:8;5957:16;5954:36;;;5986:1;5983;5976:12;5954:36;6009:52;6053:7;6042:8;6031:9;6027:24;6009:52;:::i;:::-;5999:62;;6114:3;6103:9;6099:19;6086:33;6070:49;;6144:2;6134:8;6131:16;6128:36;;;6160:1;6157;6150:12;6128:36;6183:52;6227:7;6216:8;6205:9;6201:24;6183:52;:::i;:::-;6173:62;;6288:3;6277:9;6273:19;6260:33;6244:49;;6318:2;6308:8;6305:16;6302:36;;;6334:1;6331;6324:12;6302:36;6357:52;6401:7;6390:8;6379:9;6375:24;6357:52;:::i;:::-;6347:62;;6462:3;6451:9;6447:19;6434:33;6418:49;;6492:2;6482:8;6479:16;6476:36;;;6508:1;6505;6498:12;6476:36;;6531:52;6575:7;6564:8;6553:9;6549:24;6531:52;:::i;:::-;6521:62;;;5042:1547;;;;;;;;;;:::o;6594:1203::-;6645:3;6673:6;6706:5;6700:12;6695:3;6688:25;6759:4;6752:5;6748:16;6742:23;6774:48;6816:4;6811:3;6807:14;6793:12;-1:-1:-1;;;;;735:31:17;723:44;;669:104;6774:48;;6870:4;6863:5;6859:16;6853:23;6885:56;6935:4;6930:3;6926:14;6910;6885:56;:::i;:::-;;6989:4;6982:5;6978:16;6972:23;7027:2;7020:4;7015:3;7011:14;7004:26;7051:47;7094:2;7089:3;7085:12;7069:14;7051:47;:::i;:::-;7039:59;;;7146:4;7139:5;7135:16;7129:23;7194:3;7188:4;7184:14;7177:4;7172:3;7168:14;7161:38;7222:39;7256:4;7240:14;7222:39;:::i;:::-;7208:53;;;7309:4;7302:5;7298:16;7292:23;7359:3;7351:6;7347:16;7340:4;7335:3;7331:14;7324:40;7387:41;7421:6;7405:14;7387:41;:::i;:::-;7373:55;;;7476:4;7469:5;7465:16;7459:23;7491:47;7532:4;7527:3;7523:14;7507;269:13;262:21;250:34;;199:91;7491:47;;7587:4;7580:5;7576:16;7570:23;7563:4;7558:3;7554:14;7547:47;7613:6;7667:2;7660:5;7656:14;7650:21;7713:3;7705:6;7701:16;7696:2;7691:3;7687:12;7680:38;7734:57;7784:6;7768:14;7734:57;:::i;:::-;7727:64;6594:1203;-1:-1:-1;;;;;;6594:1203:17:o;7802:257::-;7979:2;7968:9;7961:21;7942:4;7999:54;8049:2;8038:9;8034:18;8026:6;7999:54;:::i;:::-;7991:62;7802:257;-1:-1:-1;;;7802:257:17:o;8064:840::-;8254:4;8283:2;8323;8312:9;8308:18;8353:2;8342:9;8335:21;8376:6;8411;8405:13;8442:6;8434;8427:22;8480:2;8469:9;8465:18;8458:25;;8542:2;8532:6;8529:1;8525:14;8514:9;8510:30;8506:39;8492:53;;8580:2;8572:6;8568:15;8601:1;8611:264;8625:6;8622:1;8619:13;8611:264;;;8718:2;8714:7;8702:9;8694:6;8690:22;8686:36;8681:3;8674:49;8746;8788:6;8779;8773:13;8746:49;:::i;:::-;8736:59;-1:-1:-1;8853:12:17;;;;8818:15;;;;8647:1;8640:9;8611:264;;;-1:-1:-1;8892:6:17;;8064:840;-1:-1:-1;;;;;;;8064:840:17:o;8909:1586::-;8960:3;8988:6;9021:5;9015:12;9010:3;9003:25;9074:4;9067:5;9063:16;9057:23;9089:48;9131:4;9126:3;9122:14;9108:12;-1:-1:-1;;;;;735:31:17;723:44;;669:104;9089:48;;9185:4;9178:5;9174:16;9168:23;9223:2;9216:4;9211:3;9207:14;9200:26;9247:47;9290:2;9285:3;9281:12;9265:14;9247:47;:::i;:::-;9235:59;;;9342:4;9335:5;9331:16;9325:23;9390:3;9384:4;9380:14;9373:4;9368:3;9364:14;9357:38;9418:39;9452:4;9436:14;9418:39;:::i;:::-;9404:53;;;9505:4;9498:5;9494:16;9488:23;9555:3;9547:6;9543:16;9536:4;9531:3;9527:14;9520:40;9583:41;9617:6;9601:14;9583:41;:::i;:::-;9569:55;;;9672:4;9665:5;9661:16;9655:23;9722:3;9714:6;9710:16;9703:4;9698:3;9694:14;9687:40;9750:41;9784:6;9768:14;9750:41;:::i;:::-;9736:55;;;9839:4;9832:5;9828:16;9822:23;9889:3;9881:6;9877:16;9870:4;9865:3;9861:14;9854:40;9917:41;9951:6;9935:14;9917:41;:::i;:::-;9903:55;;;10006:4;9999:5;9995:16;9989:23;10056:3;10048:6;10044:16;10037:4;10032:3;10028:14;10021:40;10084:41;10118:6;10102:14;10084:41;:::i;:::-;10070:55;;;10144:6;10198:2;10191:5;10187:14;10181:21;10244:3;10236:6;10232:16;10227:2;10222:3;10218:12;10211:38;10272:41;10306:6;10290:14;10272:41;:::i;:::-;10332:6;10374:14;;;10368:21;10354:12;;;10347:43;10409:6;10451:14;;;10445:21;10431:12;;;;10424:43;;;;-1:-1:-1;10258:55:17;;8909:1586;-1:-1:-1;;;8909:1586:17:o;10500:842::-;10692:4;10721:2;10761;10750:9;10746:18;10791:2;10780:9;10773:21;10814:6;10849;10843:13;10880:6;10872;10865:22;10918:2;10907:9;10903:18;10896:25;;10980:2;10970:6;10967:1;10963:14;10952:9;10948:30;10944:39;10930:53;;11018:2;11010:6;11006:15;11039:1;11049:264;11063:6;11060:1;11057:13;11049:264;;;11156:2;11152:7;11140:9;11132:6;11128:22;11124:36;11119:3;11112:49;11184;11226:6;11217;11211:13;11184:49;:::i;:::-;11174:59;-1:-1:-1;11291:12:17;;;;11256:15;;;;11085:1;11078:9;11049:264;;11347:286;11406:6;11459:2;11447:9;11438:7;11434:23;11430:32;11427:52;;;11475:1;11472;11465:12;11427:52;11501:23;;-1:-1:-1;;;;;11553:31:17;;11543:42;;11533:70;;11599:1;11596;11589:12;11638:546;11883:2;11872:9;11865:21;11846:4;11909:45;11950:2;11939:9;11935:18;11927:6;11909:45;:::i;:::-;12002:9;11994:6;11990:22;11985:2;11974:9;11970:18;11963:50;12036:33;12062:6;12054;12036:33;:::i;:::-;12022:47;;12117:9;12109:6;12105:22;12100:2;12089:9;12085:18;12078:50;12145:33;12171:6;12163;12145:33;:::i;12189:235::-;12334:2;12319:18;;12346:38;12377:6;12346:38;:::i;:::-;12393:25;;;12189:235;:::o;12429:1082::-;12492:3;12530:5;12524:12;12557:6;12552:3;12545:19;12583:4;12624:2;12619:3;12615:12;12649:11;12676;12669:18;;12726:6;12723:1;12719:14;12712:5;12708:26;12696:38;;12768:2;12761:5;12757:14;12789:1;12810;12820:665;12836:6;12831:3;12828:15;12820:665;;;12901:16;;;12889:29;;12941:13;;13013:9;;13035:22;;;13121:11;;;;13079:13;;;;13156:1;13170:209;13186:8;13181:3;13178:17;13170:209;;;13263:15;;13249:30;;13348:17;;;;13305:14;;;;13214:1;13205:11;13170:209;;;-1:-1:-1;;13463:12:17;;;;13400:5;-1:-1:-1;;13428:15:17;;;;12862:1;12853:11;12820:665;;;-1:-1:-1;13501:4:17;;12429:1082;-1:-1:-1;;;;;;;;12429:1082:17:o;13516:988::-;13569:3;13597:6;13630:5;13624:12;13619:3;13612:25;13683:4;13676:5;13672:16;13666:23;13698:54;13746:4;13741:3;13737:14;13723:12;13698:54;:::i;:::-;;13800:4;13793:5;13789:16;13783:23;13815:50;13859:4;13854:3;13850:14;13834;-1:-1:-1;;;;;735:31:17;723:44;;669:104;13815:50;;13913:4;13906:5;13902:16;13896:23;13928:50;13972:4;13967:3;13963:14;13947;-1:-1:-1;;;;;735:31:17;723:44;;669:104;13928:50;;14026:4;14019:5;14015:16;14009:23;14064:2;14057:4;14052:3;14048:14;14041:26;14088:68;14152:2;14147:3;14143:12;14127:14;14088:68;:::i;:::-;14076:80;;;14205:4;14198:5;14194:16;14188:23;14181:4;14176:3;14172:14;14165:47;14261:4;14254:5;14250:16;14244:23;14237:4;14232:3;14228:14;14221:47;14317:4;14310:5;14306:16;14300:23;14293:4;14288:3;14284:14;14277:47;14343:6;14396:2;14389:5;14385:14;14379:21;14374:2;14369:3;14365:12;14358:43;;14420:6;14473:2;14466:5;14462:14;14456:21;14451:2;14446:3;14442:12;14435:43;;14494:4;14487:11;;;13516:988;;;;:::o;14509:848::-;14705:4;14734:2;14774;14763:9;14759:18;14804:2;14793:9;14786:21;14827:6;14862;14856:13;14893:6;14885;14878:22;14931:2;14920:9;14916:18;14909:25;;14993:2;14983:6;14980:1;14976:14;14965:9;14961:30;14957:39;14943:53;;15031:2;15023:6;15019:15;15052:1;15062:266;15076:6;15073:1;15070:13;15062:266;;;15169:2;15165:7;15153:9;15145:6;15141:22;15137:36;15132:3;15125:49;15197:51;15241:6;15232;15226:13;15197:51;:::i;:::-;15187:61;-1:-1:-1;15306:12:17;;;;15271:15;;;;15098:1;15091:9;15062:266;;15362:1409;15413:3;15441:6;15474:5;15468:12;15463:3;15456:25;15527:4;15520:5;15516:16;15510:23;15542:48;15584:4;15579:3;15575:14;15561:12;-1:-1:-1;;;;;735:31:17;723:44;;669:104;15542:48;;15638:4;15631:5;15627:16;15621:23;15653:56;15703:4;15698:3;15694:14;15678;15653:56;:::i;:::-;;15757:4;15750:5;15746:16;15740:23;15795:2;15788:4;15783:3;15779:14;15772:26;15819:47;15862:2;15857:3;15853:12;15837:14;15819:47;:::i;:::-;15807:59;;;15914:4;15907:5;15903:16;15897:23;15962:3;15956:4;15952:14;15945:4;15940:3;15936:14;15929:38;15990:39;16024:4;16008:14;15990:39;:::i;:::-;15976:53;;;16077:4;16070:5;16066:16;16060:23;16127:3;16119:6;16115:16;16108:4;16103:3;16099:14;16092:40;16155:41;16189:6;16173:14;16155:41;:::i;:::-;16141:55;;;16244:4;16237:5;16233:16;16227:23;16259:47;16300:4;16295:3;16291:14;16275;269:13;262:21;250:34;;199:91;16259:47;-1:-1:-1;16355:4:17;16344:16;;;16338:23;16322:14;;;16315:47;16381:6;16423:14;;;16417:21;16403:12;;;16396:43;16458:6;16501:14;;;16495:21;1815:12;;16572;;;1803:25;1891:4;1880:16;;1874:23;1867:31;1860:39;1844:14;;;1837:63;16525:60;;16633:6;16626:5;16622:18;16616:25;16687:3;16679:6;16675:16;16666:6;16661:3;16657:16;16650:42;16708:57;16758:6;16742:14;16708:57;:::i;16776:261::-;16957:2;16946:9;16939:21;16920:4;16977:54;17027:2;17016:9;17012:18;17004:6;16977:54;:::i;17042:875::-;17383:3;17372:9;17365:22;17346:4;17410:46;17451:3;17440:9;17436:19;17428:6;17410:46;:::i;:::-;17504:9;17496:6;17492:22;17487:2;17476:9;17472:18;17465:50;17538:33;17564:6;17556;17538:33;:::i;:::-;17524:47;;17619:9;17611:6;17607:22;17602:2;17591:9;17587:18;17580:50;17653:33;17679:6;17671;17653:33;:::i;:::-;17639:47;;17734:9;17726:6;17722:22;17717:2;17706:9;17702:18;17695:50;17768:33;17794:6;17786;17768:33;:::i;:::-;17754:47;;17850:9;17842:6;17838:22;17832:3;17821:9;17817:19;17810:51;17878:33;17904:6;17896;17878:33;:::i;:::-;17870:41;17042:875;-1:-1:-1;;;;;;;;17042:875:17:o;17922:193::-;17992:4;18025:18;18017:6;18014:30;18011:56;;;18047:18;;:::i;:::-;-1:-1:-1;18092:1:17;18088:14;18104:4;18084:25;;17922:193::o;18120:2023::-;18238:6;18246;18277:2;18320;18308:9;18299:7;18295:23;18291:32;18288:52;;;18336:1;18333;18326:12;18288:52;18372:9;18359:23;18349:33;;18401:2;18454;18443:9;18439:18;18426:32;18477:18;18518:2;18510:6;18507:14;18504:34;;;18534:1;18531;18524:12;18504:34;18572:6;18561:9;18557:22;18547:32;;18617:7;18610:4;18606:2;18602:13;18598:27;18588:55;;18639:1;18636;18629:12;18588:55;18675:2;18662:16;18698:70;18714:53;18764:2;18714:53;:::i;:::-;18698:70;:::i;:::-;18802:15;;;18884:1;18880:10;;;;18872:19;;18868:28;;;18833:12;;;;18908:19;;;18905:39;;;18940:1;18937;18930:12;18905:39;18972:2;18968;18964:11;18984:1129;19000:6;18995:3;18992:15;18984:1129;;;19086:3;19073:17;19122:2;19109:11;19106:19;19103:109;;;19166:1;19195:2;19191;19184:14;19103:109;19235:20;;19290:2;19282:11;;19278:25;-1:-1:-1;19268:123:17;;19345:1;19374:2;19370;19363:14;19268:123;19435:2;19431;19427:11;19414:25;19465:70;19481:53;19531:2;19481:53;:::i;19465:70::-;19579:17;;;19677:1;19673:10;;;;19665:19;;19661:28;;;19618:14;;;;19705:21;;;19702:114;;;19768:1;19798:3;19793;19786:16;19702:114;19842:11;;;;19866:174;19884:8;19877:5;19874:19;19866:174;;;19966:19;;19952:34;;19905:14;;;;20012;;;;19866:174;;;20053:18;;-1:-1:-1;;;20091:12:17;;;;19017;;18984:1129;;;18988:3;20132:5;20122:15;;;;;;;;;18120:2023;;;;;:::o;20148:711::-;20441:3;20430:9;20423:22;20404:4;20468:46;20509:3;20498:9;20494:19;20486:6;20468:46;:::i;:::-;20562:9;20554:6;20550:22;20545:2;20534:9;20530:18;20523:50;20596:33;20622:6;20614;20596:33;:::i;:::-;20582:47;;20677:9;20669:6;20665:22;20660:2;20649:9;20645:18;20638:50;20711:33;20737:6;20729;20711:33;:::i;:::-;20697:47;;20792:9;20784:6;20780:22;20775:2;20764:9;20760:18;20753:50;20820:33;20846:6;20838;20820:33;:::i;:::-;20812:41;20148:711;-1:-1:-1;;;;;;;20148:711:17:o;20864:844::-;21058:4;21087:2;21127;21116:9;21112:18;21157:2;21146:9;21139:21;21180:6;21215;21209:13;21246:6;21238;21231:22;21284:2;21273:9;21269:18;21262:25;;21346:2;21336:6;21333:1;21329:14;21318:9;21314:30;21310:39;21296:53;;21384:2;21376:6;21372:15;21405:1;21415:264;21429:6;21426:1;21423:13;21415:264;;;21522:2;21518:7;21506:9;21498:6;21494:22;21490:36;21485:3;21478:49;21550;21592:6;21583;21577:13;21550:49;:::i;:::-;21540:59;-1:-1:-1;21657:12:17;;;;21622:15;;;;21451:1;21444:9;21415:264;;21713:1525;22267:25;;;-1:-1:-1;;;;;735:31:17;;22343:2;22328:18;;723:44;22226:4;22255:3;22383:2;22378;22367:9;22363:18;22356:30;22409:45;22450:2;22439:9;22435:18;22427:6;22409:45;:::i;:::-;22395:59;;22502:9;22494:6;22490:22;22485:2;22474:9;22470:18;22463:50;22536:33;22562:6;22554;22536:33;:::i;:::-;22522:47;;22618:9;22610:6;22606:22;22600:3;22589:9;22585:19;22578:51;22652:33;22678:6;22670;22652:33;:::i;:::-;22638:47;;22734:9;22726:6;22722:22;22716:3;22705:9;22701:19;22694:51;22768:33;22794:6;22786;22768:33;:::i;:::-;22754:47;;22850:9;22842:6;22838:22;22832:3;22821:9;22817:19;22810:51;22884:33;22910:6;22902;22884:33;:::i;:::-;22870:47;;22966:9;22958:6;22954:22;22948:3;22937:9;22933:19;22926:51;23000:33;23026:6;23018;23000:33;:::i;:::-;22986:47;;23082:9;23074:6;23070:22;23064:3;23053:9;23049:19;23042:51;23110:33;23136:6;23128;23110:33;:::i;:::-;23174:3;23159:19;;23152:35;;;;-1:-1:-1;;23218:3:17;23203:19;23196:36;23102:41;21713:1525;-1:-1:-1;;;;;;;;;21713:1525:17:o;23243:265::-;23426:2;23415:9;23408:21;23389:4;23446:56;23498:2;23487:9;23483:18;23475:6;23446:56;:::i;23513:259::-;23692:2;23681:9;23674:21;23655:4;23712:54;23762:2;23751:9;23747:18;23739:6;23712:54;:::i;24132:127::-;24193:10;24188:3;24184:20;24181:1;24174:31;24224:4;24221:1;24214:15;24248:4;24245:1;24238:15;24264:135;24303:3;-1:-1:-1;;24324:17:17;;24321:43;;;24344:18;;:::i;:::-;-1:-1:-1;24391:1:17;24380:13;;24264:135::o;24404:127::-;24465:10;24460:3;24456:20;24453:1;24446:31;24496:4;24493:1;24486:15;24520:4;24517:1;24510:15;24536:380;24615:1;24611:12;;;;24658;;;24679:61;;24733:4;24725:6;24721:17;24711:27;;24679:61;24786:2;24778:6;24775:14;24755:18;24752:38;24749:161;;;24832:10;24827:3;24823:20;24820:1;24813:31;24867:4;24864:1;24857:15;24895:4;24892:1;24885:15;24921:128;24961:3;24992:1;24988:6;24985:1;24982:13;24979:39;;;24998:18;;:::i;:::-;-1:-1:-1;25034:9:17;;24921:128::o;26021:125::-;26061:4;26089:1;26086;26083:8;26080:34;;;26094:18;;:::i;:::-;-1:-1:-1;26131:9:17;;26021:125::o;26151:411::-;26353:2;26335:21;;;26392:2;26372:18;;;26365:30;26431:34;26426:2;26411:18;;26404:62;-1:-1:-1;;;26497:2:17;26482:18;;26475:45;26552:3;26537:19;;26151:411::o;26924:265::-;26963:3;26991:9;;;27016:10;;-1:-1:-1;;;;;27035:27:17;;;27028:35;;27012:52;27009:78;;;27067:18;;:::i;:::-;-1:-1:-1;;;27114:19:17;;;27107:27;;27099:36;;27096:62;;;27138:18;;:::i;:::-;-1:-1:-1;;27174:9:17;;26924:265::o;27194:175::-;27231:3;27275:4;27268:5;27264:16;27304:4;27295:7;27292:17;27289:43;;;27312:18;;:::i;:::-;27361:1;27348:15;;27194:175;-1:-1:-1;;27194:175:17:o",
  "source": "pragma solidity >=0.5.0 <=0.9.0;\r\n// SPDX-License-Identifier: GPL-3.0-or-later\r\n\r\nimport './ProducerContract.sol';\r\nimport './ActivistContract.sol';\r\nimport './CategoryContract.sol';\r\n\r\n/**\r\n* @title InspectionContract\r\n* @dev Inpection action core\r\n*/\r\ncontract InspectionContract is ProducerContract, ActivistContract, CategoryContract {\r\n    enum InspectionStatus { OPEN, EXPIRED, INSPECTED, ACCEPTED } \r\n    uint inspactionExpireIn = 604800; // Seven days\r\n    \r\n    struct Inspection {\r\n        uint id;\r\n        InspectionStatus status;\r\n        address producerWallet;\r\n        address activistWallet;\r\n        uint[][] isas;\r\n        int isaPoints;\r\n        uint expiresIn;\r\n        uint createdAt;\r\n        uint updatedAt;\r\n        uint index;\r\n    }\r\n    Inspection[] inspectionsList;\r\n    mapping(address => Inspection[]) userInspections;\r\n    mapping(uint256 => Inspection) inspections;\r\n    uint256 inspectionsCount;\r\n\r\n    /**\r\n   * @dev Allows the current user producer/activist get all yours inspections with status INSPECTED\r\n   */\r\n    function getInspectionsHistory(address addr) public view returns(Inspection[] memory) {\r\n        return userInspections[addr];\r\n    }\r\n\r\n  /**\r\n   * @dev Allows the current user (producer) request a inspection.\r\n   */\r\n    function requestInspection() public returns(bool) {\r\n        require(producerExists(msg.sender), \"You are not a producer! Please register as one\");\r\n        require(producers[msg.sender].recentInspection == false, \"You have a inspection request OPEN or ACCEPTED! Wait a activist realize inspection or you can close it\");\r\n        \r\n        createRequest();\r\n        producers[msg.sender].recentInspection = true;\r\n        \r\n        return true;\r\n    }     \r\n    \r\n    function createRequest() internal{\r\n        uint id = inspectionsCount + 1;\r\n        uint index = id - 1;\r\n        uint[][] memory isas;\r\n        uint expiresIn = block.timestamp + inspactionExpireIn;\r\n        Inspection memory inspection = Inspection(id, InspectionStatus.OPEN, msg.sender, msg.sender, \r\n                                                  isas,  0, expiresIn,  block.timestamp, 0, index);\r\n        inspectionsList.push(inspection);\r\n        inspections[id] = inspection;\r\n        inspectionsCount++;\r\n    }\r\n    \r\n    /**\r\n   * @dev Allows the current user (activist) accept a inspection.\r\n   * @param inspectionId The id of the inspection that the activist want accept.\r\n   */\r\n    function acceptInspection(uint inspectionId) public requireActivist requireInspectionExists(inspectionId) returns(bool) {\r\n        Inspection memory inspection = inspections[inspectionId];\r\n        if (inspection.status != InspectionStatus.OPEN) return false;\r\n\r\n        inspection.status = InspectionStatus.ACCEPTED;\r\n        inspection.updatedAt = block.timestamp;\r\n        inspection.activistWallet = msg.sender;\r\n        inspections[inspectionId] = inspection;\r\n\r\n        inspectionsList[inspection.index] = inspection;\r\n        return true;\r\n    }  \r\n    \r\n    /**\r\n     * @dev Allow a activist realize a inspection and mark as INSPECTED\r\n     * @param inspectionId The id of the inspection to be realized\r\n     * @param isas The uint[][] of categoryId and isaIndex. Ex: isas = [ [categoryId, isaIndex], [categoryId, isaIndex] ]\r\n     */ \r\n    function realizeInspection(uint inspectionId, uint[][] memory isas) public  requireActivist requireInspectionExists(inspectionId) returns(bool) {\r\n        if (!isAccepted(inspectionId)) return false;\r\n        if (!isActivistOwner(inspectionId)) return false;\r\n\r\n        Inspection memory inspection = inspections[inspectionId];\r\n\r\n        markAsRealized(inspection, isas);\r\n\r\n        afterRealizeInspection(inspectionId);\r\n\r\n        updateProducerIsa(inspectionId, inspection.isaPoints);\r\n\r\n        approveProducerNewTokens(inspection.producerWallet, 2000); \r\n\r\n        return true;\r\n    }\r\n\r\n  /**\r\n   * @dev Calculate the ISA of the inspection based in the category and the ISA level of the category\r\n   * @param inspection Receive the inspected inspection with your isas levels\r\n   */\r\n    function calculateIsa(Inspection memory inspection) internal pure returns(int){ \r\n        uint[][] memory isas = inspection.isas;\r\n        int isaPoints = sumIsaPoints(isas);\r\n        return isaPoints;\r\n    }\r\n\r\n  /**\r\n   * @dev Sum the ISA points\r\n   * @param isas The isas values as list of [[categoryId, isaIndex], [categoryId, isaIndex]]\r\n   */\r\n    function sumIsaPoints(uint[][] memory isas) internal pure returns(int) {\r\n        int[5] memory points = [int(10), int(5), int(0), int(-5), int(-10)];\r\n        int isaPoints = 0;\r\n\r\n        for (uint8 i = 0; i < isas.length; i++) {\r\n            uint isaIndex = isas[i][1];\r\n            isaPoints += points[isaIndex];\r\n        }\r\n        return isaPoints;\r\n    }\r\n\r\n    function markAsRealized(Inspection memory inspection, uint[][] memory isas) internal {   \r\n        inspection.isas = isas;\r\n        inspection.status = InspectionStatus.INSPECTED;\r\n        inspection.updatedAt = block.timestamp;\r\n        inspection.isaPoints = calculateIsa(inspection);\r\n        inspections[inspection.id] = inspection;\r\n        inspectionsList[inspection.index] = inspection;\r\n    }\r\n\r\n    function updateProducerIsa(uint inspectionId, int isaPoints) internal {\r\n        address producerAddress = inspections[inspectionId].producerWallet;\r\n        producers[producerAddress].isaPoints = isaPoints;\r\n    }  \r\n    \r\n    /**\r\n   * @dev Returns a inspection by id if that exists.\r\n   * @param id The id of the inspection to return.\r\n   */\r\n    function getInspection(uint256 id) public view returns(Inspection memory) {\r\n        return inspections[id];\r\n    }\r\n    \r\n    /**\r\n   * @dev Returns all requested inspections.\r\n   */\r\n    function getInspections() public view returns (Inspection[] memory) {\r\n        return inspectionsList;\r\n    }\r\n    \r\n    /**\r\n   * @dev Returns all inpections status string.\r\n   */\r\n    function getInspectionsStatus() public pure returns(string memory, string memory, string memory, string memory) {\r\n        return (\"OPEN\", \"EXPIRED\", \"INSPECTED\", \"ACCEPTED\");\r\n    }\r\n    \r\n    /**\r\n   * @dev Check if an inspections exists in mapping.\r\n   * @param id The id of the inspection that the activist want accept.\r\n   */\r\n    function inspectionExists(uint256 id) public view returns(bool) {\r\n        return inspections[id].id >= 1;\r\n    }\r\n    \r\n    /**\r\n   * @dev Inscrement producer and activist request action and mark both as no recent open requests and inspection\r\n   * @param inspectionId The id of the inspection\r\n   */\r\n    function afterRealizeInspection(uint inspectionId) internal {\r\n        address producerWallet = inspections[inspectionId].producerWallet;\r\n        address activistWallet = inspections[inspectionId].activistWallet;\r\n        \r\n        // Increment actvist inspections and release to carry out new inspections\r\n        activists[activistWallet].recentInspection = false;\r\n        activists[activistWallet].totalInspections++;\r\n        \r\n        // Increment producer requests and release to carry out new requests\r\n        producers[producerWallet].recentInspection = false;\r\n        producers[producerWallet].totalRequests++;\r\n        \r\n        userInspections[producerWallet].push(inspections[inspectionId]);\r\n        userInspections[activistWallet].push(inspections[inspectionId]);\r\n    }\r\n    \r\n    function isActivistOwner(uint inspectionId) internal view returns(bool) {\r\n        return inspections[inspectionId].activistWallet == msg.sender;\r\n    }\r\n \r\n    function isAccepted(uint inspectionId) internal view returns(bool) {\r\n        return inspections[inspectionId].status == InspectionStatus.ACCEPTED;\r\n    }\r\n    \r\n    // MODIFIERS\r\n    modifier requireActivist() {\r\n        require(activistExists(msg.sender), \"You must be an activist! Please register as one\");\r\n        _;\r\n    }\r\n    \r\n    modifier requireInspectionExists(uint inspectionId) {\r\n        require(inspectionExists(inspectionId), \"This inspection don't exists\");\r\n        _;\r\n    }\r\n    \r\n}\r\n",
  "sourcePath": "C:\\Users\\Breno\\Desktop\\Sintrop\\SintropContract\\contracts\\InspectionContract.sol",
  "ast": {
    "absolutePath": "/C/Users/Breno/Desktop/Sintrop/SintropContract/contracts/InspectionContract.sol",
    "exportedSymbols": {
      "ActivistContract": [
        175
      ],
      "CategoryContract": [
        381
      ],
      "InspectionContract": [
        1288
      ],
      "ProducerContract": [
        1596
      ],
      "UserContract": [
        2268
      ]
    },
    "id": 1289,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 624,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<=",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:3"
      },
      {
        "absolutePath": "/C/Users/Breno/Desktop/Sintrop/SintropContract/contracts/ProducerContract.sol",
        "file": "./ProducerContract.sol",
        "id": 625,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1289,
        "sourceUnit": 1597,
        "src": "82:32:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/Breno/Desktop/Sintrop/SintropContract/contracts/ActivistContract.sol",
        "file": "./ActivistContract.sol",
        "id": 626,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1289,
        "sourceUnit": 176,
        "src": "116:32:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/Breno/Desktop/Sintrop/SintropContract/contracts/CategoryContract.sol",
        "file": "./CategoryContract.sol",
        "id": 627,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1289,
        "sourceUnit": 382,
        "src": "150:32:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 629,
              "name": "ProducerContract",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1596,
              "src": "285:16:3"
            },
            "id": 630,
            "nodeType": "InheritanceSpecifier",
            "src": "285:16:3"
          },
          {
            "baseName": {
              "id": 631,
              "name": "ActivistContract",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 175,
              "src": "303:16:3"
            },
            "id": 632,
            "nodeType": "InheritanceSpecifier",
            "src": "303:16:3"
          },
          {
            "baseName": {
              "id": 633,
              "name": "CategoryContract",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 381,
              "src": "321:16:3"
            },
            "id": 634,
            "nodeType": "InheritanceSpecifier",
            "src": "321:16:3"
          }
        ],
        "canonicalName": "InspectionContract",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 628,
          "nodeType": "StructuredDocumentation",
          "src": "186:66:3",
          "text": " @title InspectionContract\n @dev Inpection action core"
        },
        "fullyImplemented": true,
        "id": 1288,
        "linearizedBaseContracts": [
          1288,
          381,
          175,
          1596,
          2268
        ],
        "name": "InspectionContract",
        "nameLocation": "263:18:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "InspectionContract.InspectionStatus",
            "id": 639,
            "members": [
              {
                "id": 635,
                "name": "OPEN",
                "nameLocation": "369:4:3",
                "nodeType": "EnumValue",
                "src": "369:4:3"
              },
              {
                "id": 636,
                "name": "EXPIRED",
                "nameLocation": "375:7:3",
                "nodeType": "EnumValue",
                "src": "375:7:3"
              },
              {
                "id": 637,
                "name": "INSPECTED",
                "nameLocation": "384:9:3",
                "nodeType": "EnumValue",
                "src": "384:9:3"
              },
              {
                "id": 638,
                "name": "ACCEPTED",
                "nameLocation": "395:8:3",
                "nodeType": "EnumValue",
                "src": "395:8:3"
              }
            ],
            "name": "InspectionStatus",
            "nameLocation": "350:16:3",
            "nodeType": "EnumDefinition",
            "src": "345:60:3"
          },
          {
            "constant": false,
            "id": 642,
            "mutability": "mutable",
            "name": "inspactionExpireIn",
            "nameLocation": "417:18:3",
            "nodeType": "VariableDeclaration",
            "scope": 1288,
            "src": "412:32:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 640,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "412:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "363034383030",
              "id": 641,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "438:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_604800_by_1",
                "typeString": "int_const 604800"
              },
              "value": "604800"
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "InspectionContract.Inspection",
            "id": 666,
            "members": [
              {
                "constant": false,
                "id": 644,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "505:2:3",
                "nodeType": "VariableDeclaration",
                "scope": 666,
                "src": "500:7:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 643,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "500:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 647,
                "mutability": "mutable",
                "name": "status",
                "nameLocation": "535:6:3",
                "nodeType": "VariableDeclaration",
                "scope": 666,
                "src": "518:23:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_InspectionStatus_$639",
                  "typeString": "enum InspectionContract.InspectionStatus"
                },
                "typeName": {
                  "id": 646,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 645,
                    "name": "InspectionStatus",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 639,
                    "src": "518:16:3"
                  },
                  "referencedDeclaration": 639,
                  "src": "518:16:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_InspectionStatus_$639",
                    "typeString": "enum InspectionContract.InspectionStatus"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 649,
                "mutability": "mutable",
                "name": "producerWallet",
                "nameLocation": "560:14:3",
                "nodeType": "VariableDeclaration",
                "scope": 666,
                "src": "552:22:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 648,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "552:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 651,
                "mutability": "mutable",
                "name": "activistWallet",
                "nameLocation": "593:14:3",
                "nodeType": "VariableDeclaration",
                "scope": 666,
                "src": "585:22:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 650,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "585:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 655,
                "mutability": "mutable",
                "name": "isas",
                "nameLocation": "627:4:3",
                "nodeType": "VariableDeclaration",
                "scope": 666,
                "src": "618:13:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                  "typeString": "uint256[][]"
                },
                "typeName": {
                  "baseType": {
                    "baseType": {
                      "id": 652,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "618:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 653,
                    "nodeType": "ArrayTypeName",
                    "src": "618:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "id": 654,
                  "nodeType": "ArrayTypeName",
                  "src": "618:8:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                    "typeString": "uint256[][]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 657,
                "mutability": "mutable",
                "name": "isaPoints",
                "nameLocation": "646:9:3",
                "nodeType": "VariableDeclaration",
                "scope": 666,
                "src": "642:13:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                },
                "typeName": {
                  "id": 656,
                  "name": "int",
                  "nodeType": "ElementaryTypeName",
                  "src": "642:3:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 659,
                "mutability": "mutable",
                "name": "expiresIn",
                "nameLocation": "671:9:3",
                "nodeType": "VariableDeclaration",
                "scope": 666,
                "src": "666:14:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 658,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "666:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 661,
                "mutability": "mutable",
                "name": "createdAt",
                "nameLocation": "696:9:3",
                "nodeType": "VariableDeclaration",
                "scope": 666,
                "src": "691:14:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 660,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "691:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 663,
                "mutability": "mutable",
                "name": "updatedAt",
                "nameLocation": "721:9:3",
                "nodeType": "VariableDeclaration",
                "scope": 666,
                "src": "716:14:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 662,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "716:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 665,
                "mutability": "mutable",
                "name": "index",
                "nameLocation": "746:5:3",
                "nodeType": "VariableDeclaration",
                "scope": 666,
                "src": "741:10:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 664,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "741:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Inspection",
            "nameLocation": "478:10:3",
            "nodeType": "StructDefinition",
            "scope": 1288,
            "src": "471:288:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 670,
            "mutability": "mutable",
            "name": "inspectionsList",
            "nameLocation": "778:15:3",
            "nodeType": "VariableDeclaration",
            "scope": 1288,
            "src": "765:28:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Inspection_$666_storage_$dyn_storage",
              "typeString": "struct InspectionContract.Inspection[]"
            },
            "typeName": {
              "baseType": {
                "id": 668,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 667,
                  "name": "Inspection",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 666,
                  "src": "765:10:3"
                },
                "referencedDeclaration": 666,
                "src": "765:10:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Inspection_$666_storage_ptr",
                  "typeString": "struct InspectionContract.Inspection"
                }
              },
              "id": 669,
              "nodeType": "ArrayTypeName",
              "src": "765:12:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Inspection_$666_storage_$dyn_storage_ptr",
                "typeString": "struct InspectionContract.Inspection[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 676,
            "mutability": "mutable",
            "name": "userInspections",
            "nameLocation": "833:15:3",
            "nodeType": "VariableDeclaration",
            "scope": 1288,
            "src": "800:48:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Inspection_$666_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct InspectionContract.Inspection[])"
            },
            "typeName": {
              "id": 675,
              "keyType": {
                "id": 671,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "808:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "800:32:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Inspection_$666_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct InspectionContract.Inspection[])"
              },
              "valueType": {
                "baseType": {
                  "id": 673,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 672,
                    "name": "Inspection",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 666,
                    "src": "819:10:3"
                  },
                  "referencedDeclaration": 666,
                  "src": "819:10:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Inspection_$666_storage_ptr",
                    "typeString": "struct InspectionContract.Inspection"
                  }
                },
                "id": 674,
                "nodeType": "ArrayTypeName",
                "src": "819:12:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Inspection_$666_storage_$dyn_storage_ptr",
                  "typeString": "struct InspectionContract.Inspection[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 681,
            "mutability": "mutable",
            "name": "inspections",
            "nameLocation": "886:11:3",
            "nodeType": "VariableDeclaration",
            "scope": 1288,
            "src": "855:42:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$666_storage_$",
              "typeString": "mapping(uint256 => struct InspectionContract.Inspection)"
            },
            "typeName": {
              "id": 680,
              "keyType": {
                "id": 677,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "863:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "855:30:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$666_storage_$",
                "typeString": "mapping(uint256 => struct InspectionContract.Inspection)"
              },
              "valueType": {
                "id": 679,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 678,
                  "name": "Inspection",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 666,
                  "src": "874:10:3"
                },
                "referencedDeclaration": 666,
                "src": "874:10:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Inspection_$666_storage_ptr",
                  "typeString": "struct InspectionContract.Inspection"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 683,
            "mutability": "mutable",
            "name": "inspectionsCount",
            "nameLocation": "912:16:3",
            "nodeType": "VariableDeclaration",
            "scope": 1288,
            "src": "904:24:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 682,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "904:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 697,
              "nodeType": "Block",
              "src": "1140:47:3",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 693,
                      "name": "userInspections",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 676,
                      "src": "1158:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Inspection_$666_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct InspectionContract.Inspection storage ref[] storage ref)"
                      }
                    },
                    "id": 695,
                    "indexExpression": {
                      "id": 694,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 686,
                      "src": "1174:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1158:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Inspection_$666_storage_$dyn_storage",
                      "typeString": "struct InspectionContract.Inspection storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 692,
                  "id": 696,
                  "nodeType": "Return",
                  "src": "1151:28:3"
                }
              ]
            },
            "documentation": {
              "id": 684,
              "nodeType": "StructuredDocumentation",
              "src": "937:111:3",
              "text": " @dev Allows the current user producer/activist get all yours inspections with status INSPECTED"
            },
            "functionSelector": "7b798468",
            "id": 698,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInspectionsHistory",
            "nameLocation": "1063:21:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 687,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 686,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "1093:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 698,
                  "src": "1085:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 685,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1085:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1084:14:3"
            },
            "returnParameters": {
              "id": 692,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 691,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 698,
                  "src": "1119:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Inspection_$666_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct InspectionContract.Inspection[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 689,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 688,
                        "name": "Inspection",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 666,
                        "src": "1119:10:3"
                      },
                      "referencedDeclaration": 666,
                      "src": "1119:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$666_storage_ptr",
                        "typeString": "struct InspectionContract.Inspection"
                      }
                    },
                    "id": 690,
                    "nodeType": "ArrayTypeName",
                    "src": "1119:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Inspection_$666_storage_$dyn_storage_ptr",
                      "typeString": "struct InspectionContract.Inspection[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1118:21:3"
            },
            "scope": 1288,
            "src": "1054:133:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 736,
              "nodeType": "Block",
              "src": "1327:401:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 706,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1361:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 707,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1361:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 705,
                          "name": "producerExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1534,
                          "src": "1346:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1346:26:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520617265206e6f7420612070726f64756365722120506c65617365207265676973746572206173206f6e65",
                        "id": 709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1374:48:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dbb08f64851b685a0f36294d305e2db5057008a52567e5bdec9c2160a57b7398",
                          "typeString": "literal_string \"You are not a producer! Please register as one\""
                        },
                        "value": "You are not a producer! Please register as one"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dbb08f64851b685a0f36294d305e2db5057008a52567e5bdec9c2160a57b7398",
                          "typeString": "literal_string \"You are not a producer! Please register as one\""
                        }
                      ],
                      "id": 704,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1338:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1338:85:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 711,
                  "nodeType": "ExpressionStatement",
                  "src": "1338:85:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 713,
                              "name": "producers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1394,
                              "src": "1442:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Producer_$1371_storage_$",
                                "typeString": "mapping(address => struct ProducerContract.Producer storage ref)"
                              }
                            },
                            "id": 716,
                            "indexExpression": {
                              "expression": {
                                "id": 714,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1452:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 715,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1452:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1442:21:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Producer_$1371_storage",
                              "typeString": "struct ProducerContract.Producer storage ref"
                            }
                          },
                          "id": 717,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "recentInspection",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1360,
                          "src": "1442:38:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1484:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "1442:47:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752068617665206120696e7370656374696f6e2072657175657374204f50454e206f722041434345505445442120576169742061206163746976697374207265616c697a6520696e7370656374696f6e206f7220796f752063616e20636c6f7365206974",
                        "id": 720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1491:104:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6c06c4f9d658f6d0bee949be33756e3bdf523e4cfb9cc40af70a6abee2364d7d",
                          "typeString": "literal_string \"You have a inspection request OPEN or ACCEPTED! Wait a activist realize inspection or you can close it\""
                        },
                        "value": "You have a inspection request OPEN or ACCEPTED! Wait a activist realize inspection or you can close it"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6c06c4f9d658f6d0bee949be33756e3bdf523e4cfb9cc40af70a6abee2364d7d",
                          "typeString": "literal_string \"You have a inspection request OPEN or ACCEPTED! Wait a activist realize inspection or you can close it\""
                        }
                      ],
                      "id": 712,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1434:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1434:162:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 722,
                  "nodeType": "ExpressionStatement",
                  "src": "1434:162:3"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 723,
                      "name": "createRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 802,
                      "src": "1617:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1617:15:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 725,
                  "nodeType": "ExpressionStatement",
                  "src": "1617:15:3"
                },
                {
                  "expression": {
                    "id": 732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 726,
                          "name": "producers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1394,
                          "src": "1643:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Producer_$1371_storage_$",
                            "typeString": "mapping(address => struct ProducerContract.Producer storage ref)"
                          }
                        },
                        "id": 729,
                        "indexExpression": {
                          "expression": {
                            "id": 727,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1653:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1653:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1643:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Producer_$1371_storage",
                          "typeString": "struct ProducerContract.Producer storage ref"
                        }
                      },
                      "id": 730,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "recentInspection",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1360,
                      "src": "1643:38:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 731,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1684:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1643:45:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 733,
                  "nodeType": "ExpressionStatement",
                  "src": "1643:45:3"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1716:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 703,
                  "id": 735,
                  "nodeType": "Return",
                  "src": "1709:11:3"
                }
              ]
            },
            "documentation": {
              "id": 699,
              "nodeType": "StructuredDocumentation",
              "src": "1193:78:3",
              "text": " @dev Allows the current user (producer) request a inspection."
            },
            "functionSelector": "86ae2fb1",
            "id": 737,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestInspection",
            "nameLocation": "1286:17:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 700,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1303:2:3"
            },
            "returnParameters": {
              "id": 703,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 702,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 737,
                  "src": "1321:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 701,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1321:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1320:6:3"
            },
            "scope": 1288,
            "src": "1277:451:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 801,
              "nodeType": "Block",
              "src": "1778:489:3",
              "statements": [
                {
                  "assignments": [
                    741
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 741,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "1794:2:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 801,
                      "src": "1789:7:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 740,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1789:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 745,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 742,
                      "name": "inspectionsCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 683,
                      "src": "1799:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 743,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1818:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1799:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1789:30:3"
                },
                {
                  "assignments": [
                    747
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 747,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "1835:5:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 801,
                      "src": "1830:10:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 746,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1830:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 751,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 748,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 741,
                      "src": "1843:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 749,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1848:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1843:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1830:19:3"
                },
                {
                  "assignments": [
                    757
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 757,
                      "mutability": "mutable",
                      "name": "isas",
                      "nameLocation": "1876:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 801,
                      "src": "1860:20:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                        "typeString": "uint256[][]"
                      },
                      "typeName": {
                        "baseType": {
                          "baseType": {
                            "id": 754,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "1860:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 755,
                          "nodeType": "ArrayTypeName",
                          "src": "1860:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "id": 756,
                        "nodeType": "ArrayTypeName",
                        "src": "1860:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                          "typeString": "uint256[][]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 758,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1860:20:3"
                },
                {
                  "assignments": [
                    760
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 760,
                      "mutability": "mutable",
                      "name": "expiresIn",
                      "nameLocation": "1896:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 801,
                      "src": "1891:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 759,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1891:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 765,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 761,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "1908:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1908:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 763,
                      "name": "inspactionExpireIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 642,
                      "src": "1926:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1908:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1891:53:3"
                },
                {
                  "assignments": [
                    768
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 768,
                      "mutability": "mutable",
                      "name": "inspection",
                      "nameLocation": "1973:10:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 801,
                      "src": "1955:28:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                        "typeString": "struct InspectionContract.Inspection"
                      },
                      "typeName": {
                        "id": 767,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 766,
                          "name": "Inspection",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 666,
                          "src": "1955:10:3"
                        },
                        "referencedDeclaration": 666,
                        "src": "1955:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$666_storage_ptr",
                          "typeString": "struct InspectionContract.Inspection"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 785,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 770,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 741,
                        "src": "1997:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 771,
                          "name": "InspectionStatus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 639,
                          "src": "2001:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_InspectionStatus_$639_$",
                            "typeString": "type(enum InspectionContract.InspectionStatus)"
                          }
                        },
                        "id": 772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "OPEN",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 635,
                        "src": "2001:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_InspectionStatus_$639",
                          "typeString": "enum InspectionContract.InspectionStatus"
                        }
                      },
                      {
                        "expression": {
                          "id": 773,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2024:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2024:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 775,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2036:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2036:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 777,
                        "name": "isas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 757,
                        "src": "2100:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2107:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 779,
                        "name": "expiresIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 760,
                        "src": "2110:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 780,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "2122:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "2122:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2139:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 783,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 747,
                        "src": "2142:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_InspectionStatus_$639",
                          "typeString": "enum InspectionContract.InspectionStatus"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 769,
                      "name": "Inspection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 666,
                      "src": "1986:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Inspection_$666_storage_ptr_$",
                        "typeString": "type(struct InspectionContract.Inspection storage pointer)"
                      }
                    },
                    "id": 784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1986:162:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                      "typeString": "struct InspectionContract.Inspection memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1955:193:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 789,
                        "name": "inspection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 768,
                        "src": "2180:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                          "typeString": "struct InspectionContract.Inspection memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                          "typeString": "struct InspectionContract.Inspection memory"
                        }
                      ],
                      "expression": {
                        "id": 786,
                        "name": "inspectionsList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 670,
                        "src": "2159:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Inspection_$666_storage_$dyn_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref[] storage ref"
                        }
                      },
                      "id": 788,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2159:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Inspection_$666_storage_$dyn_storage_ptr_$_t_struct$_Inspection_$666_storage_$returns$__$bound_to$_t_array$_t_struct$_Inspection_$666_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct InspectionContract.Inspection storage ref[] storage pointer,struct InspectionContract.Inspection storage ref)"
                      }
                    },
                    "id": 790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2159:32:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 791,
                  "nodeType": "ExpressionStatement",
                  "src": "2159:32:3"
                },
                {
                  "expression": {
                    "id": 796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 792,
                        "name": "inspections",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 681,
                        "src": "2202:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$666_storage_$",
                          "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                        }
                      },
                      "id": 794,
                      "indexExpression": {
                        "id": 793,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 741,
                        "src": "2214:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2202:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$666_storage",
                        "typeString": "struct InspectionContract.Inspection storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 795,
                      "name": "inspection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 768,
                      "src": "2220:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                        "typeString": "struct InspectionContract.Inspection memory"
                      }
                    },
                    "src": "2202:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$666_storage",
                      "typeString": "struct InspectionContract.Inspection storage ref"
                    }
                  },
                  "id": 797,
                  "nodeType": "ExpressionStatement",
                  "src": "2202:28:3"
                },
                {
                  "expression": {
                    "id": 799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "2241:18:3",
                    "subExpression": {
                      "id": 798,
                      "name": "inspectionsCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 683,
                      "src": "2241:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 800,
                  "nodeType": "ExpressionStatement",
                  "src": "2241:18:3"
                }
              ]
            },
            "id": 802,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createRequest",
            "nameLocation": "1754:13:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 738,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1767:2:3"
            },
            "returnParameters": {
              "id": 739,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1778:0:3"
            },
            "scope": 1288,
            "src": "1745:522:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 866,
              "nodeType": "Block",
              "src": "2564:432:3",
              "statements": [
                {
                  "assignments": [
                    817
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 817,
                      "mutability": "mutable",
                      "name": "inspection",
                      "nameLocation": "2593:10:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 866,
                      "src": "2575:28:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                        "typeString": "struct InspectionContract.Inspection"
                      },
                      "typeName": {
                        "id": 816,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 815,
                          "name": "Inspection",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 666,
                          "src": "2575:10:3"
                        },
                        "referencedDeclaration": 666,
                        "src": "2575:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$666_storage_ptr",
                          "typeString": "struct InspectionContract.Inspection"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 821,
                  "initialValue": {
                    "baseExpression": {
                      "id": 818,
                      "name": "inspections",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 681,
                      "src": "2606:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$666_storage_$",
                        "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                      }
                    },
                    "id": 820,
                    "indexExpression": {
                      "id": 819,
                      "name": "inspectionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 805,
                      "src": "2618:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2606:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$666_storage",
                      "typeString": "struct InspectionContract.Inspection storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2575:56:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_InspectionStatus_$639",
                      "typeString": "enum InspectionContract.InspectionStatus"
                    },
                    "id": 826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 822,
                        "name": "inspection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 817,
                        "src": "2646:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                          "typeString": "struct InspectionContract.Inspection memory"
                        }
                      },
                      "id": 823,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 647,
                      "src": "2646:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_InspectionStatus_$639",
                        "typeString": "enum InspectionContract.InspectionStatus"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 824,
                        "name": "InspectionStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 639,
                        "src": "2667:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_InspectionStatus_$639_$",
                          "typeString": "type(enum InspectionContract.InspectionStatus)"
                        }
                      },
                      "id": 825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "OPEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 635,
                      "src": "2667:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_InspectionStatus_$639",
                        "typeString": "enum InspectionContract.InspectionStatus"
                      }
                    },
                    "src": "2646:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 829,
                  "nodeType": "IfStatement",
                  "src": "2642:60:3",
                  "trueBody": {
                    "expression": {
                      "hexValue": "66616c7365",
                      "id": 827,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2697:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "functionReturnParameters": 814,
                    "id": 828,
                    "nodeType": "Return",
                    "src": "2690:12:3"
                  }
                },
                {
                  "expression": {
                    "id": 835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 830,
                        "name": "inspection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 817,
                        "src": "2715:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                          "typeString": "struct InspectionContract.Inspection memory"
                        }
                      },
                      "id": 832,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 647,
                      "src": "2715:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_InspectionStatus_$639",
                        "typeString": "enum InspectionContract.InspectionStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 833,
                        "name": "InspectionStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 639,
                        "src": "2735:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_InspectionStatus_$639_$",
                          "typeString": "type(enum InspectionContract.InspectionStatus)"
                        }
                      },
                      "id": 834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ACCEPTED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 638,
                      "src": "2735:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_InspectionStatus_$639",
                        "typeString": "enum InspectionContract.InspectionStatus"
                      }
                    },
                    "src": "2715:45:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_InspectionStatus_$639",
                      "typeString": "enum InspectionContract.InspectionStatus"
                    }
                  },
                  "id": 836,
                  "nodeType": "ExpressionStatement",
                  "src": "2715:45:3"
                },
                {
                  "expression": {
                    "id": 842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 837,
                        "name": "inspection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 817,
                        "src": "2771:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                          "typeString": "struct InspectionContract.Inspection memory"
                        }
                      },
                      "id": 839,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "updatedAt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 663,
                      "src": "2771:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 840,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "2794:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 841,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2794:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2771:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 843,
                  "nodeType": "ExpressionStatement",
                  "src": "2771:38:3"
                },
                {
                  "expression": {
                    "id": 849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 844,
                        "name": "inspection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 817,
                        "src": "2820:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                          "typeString": "struct InspectionContract.Inspection memory"
                        }
                      },
                      "id": 846,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "activistWallet",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 651,
                      "src": "2820:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 847,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2848:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 848,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2848:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2820:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 850,
                  "nodeType": "ExpressionStatement",
                  "src": "2820:38:3"
                },
                {
                  "expression": {
                    "id": 855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 851,
                        "name": "inspections",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 681,
                        "src": "2869:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$666_storage_$",
                          "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                        }
                      },
                      "id": 853,
                      "indexExpression": {
                        "id": 852,
                        "name": "inspectionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 805,
                        "src": "2881:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2869:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$666_storage",
                        "typeString": "struct InspectionContract.Inspection storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 854,
                      "name": "inspection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 817,
                      "src": "2897:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                        "typeString": "struct InspectionContract.Inspection memory"
                      }
                    },
                    "src": "2869:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$666_storage",
                      "typeString": "struct InspectionContract.Inspection storage ref"
                    }
                  },
                  "id": 856,
                  "nodeType": "ExpressionStatement",
                  "src": "2869:38:3"
                },
                {
                  "expression": {
                    "id": 862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 857,
                        "name": "inspectionsList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 670,
                        "src": "2920:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Inspection_$666_storage_$dyn_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref[] storage ref"
                        }
                      },
                      "id": 860,
                      "indexExpression": {
                        "expression": {
                          "id": 858,
                          "name": "inspection",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 817,
                          "src": "2936:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                            "typeString": "struct InspectionContract.Inspection memory"
                          }
                        },
                        "id": 859,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "index",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 665,
                        "src": "2936:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2920:33:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$666_storage",
                        "typeString": "struct InspectionContract.Inspection storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 861,
                      "name": "inspection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 817,
                      "src": "2956:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                        "typeString": "struct InspectionContract.Inspection memory"
                      }
                    },
                    "src": "2920:46:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$666_storage",
                      "typeString": "struct InspectionContract.Inspection storage ref"
                    }
                  },
                  "id": 863,
                  "nodeType": "ExpressionStatement",
                  "src": "2920:46:3"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2984:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 814,
                  "id": 865,
                  "nodeType": "Return",
                  "src": "2977:11:3"
                }
              ]
            },
            "documentation": {
              "id": 803,
              "nodeType": "StructuredDocumentation",
              "src": "2279:159:3",
              "text": " @dev Allows the current user (activist) accept a inspection.\n @param inspectionId The id of the inspection that the activist want accept."
            },
            "functionSelector": "e7857502",
            "id": 867,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 808,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 807,
                  "name": "requireActivist",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1274,
                  "src": "2496:15:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "2496:15:3"
              },
              {
                "arguments": [
                  {
                    "id": 810,
                    "name": "inspectionId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 805,
                    "src": "2536:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 811,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 809,
                  "name": "requireInspectionExists",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1287,
                  "src": "2512:23:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "2512:37:3"
              }
            ],
            "name": "acceptInspection",
            "nameLocation": "2453:16:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 806,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 805,
                  "mutability": "mutable",
                  "name": "inspectionId",
                  "nameLocation": "2475:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 867,
                  "src": "2470:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 804,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2470:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2469:19:3"
            },
            "returnParameters": {
              "id": 814,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 813,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 867,
                  "src": "2558:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 812,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2558:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2557:6:3"
            },
            "scope": 1288,
            "src": "2444:552:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 928,
              "nodeType": "Block",
              "src": "3437:445:3",
              "statements": [
                {
                  "condition": {
                    "id": 887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3452:25:3",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 885,
                          "name": "inspectionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 870,
                          "src": "3464:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 884,
                        "name": "isAccepted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1262,
                        "src": "3453:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view returns (bool)"
                        }
                      },
                      "id": 886,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3453:24:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 890,
                  "nodeType": "IfStatement",
                  "src": "3448:43:3",
                  "trueBody": {
                    "expression": {
                      "hexValue": "66616c7365",
                      "id": 888,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3486:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "functionReturnParameters": 883,
                    "id": 889,
                    "nodeType": "Return",
                    "src": "3479:12:3"
                  }
                },
                {
                  "condition": {
                    "id": 894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3506:30:3",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 892,
                          "name": "inspectionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 870,
                          "src": "3523:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 891,
                        "name": "isActivistOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1246,
                        "src": "3507:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view returns (bool)"
                        }
                      },
                      "id": 893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3507:29:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 897,
                  "nodeType": "IfStatement",
                  "src": "3502:48:3",
                  "trueBody": {
                    "expression": {
                      "hexValue": "66616c7365",
                      "id": 895,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3545:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "functionReturnParameters": 883,
                    "id": 896,
                    "nodeType": "Return",
                    "src": "3538:12:3"
                  }
                },
                {
                  "assignments": [
                    900
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 900,
                      "mutability": "mutable",
                      "name": "inspection",
                      "nameLocation": "3581:10:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 928,
                      "src": "3563:28:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                        "typeString": "struct InspectionContract.Inspection"
                      },
                      "typeName": {
                        "id": 899,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 898,
                          "name": "Inspection",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 666,
                          "src": "3563:10:3"
                        },
                        "referencedDeclaration": 666,
                        "src": "3563:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$666_storage_ptr",
                          "typeString": "struct InspectionContract.Inspection"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 904,
                  "initialValue": {
                    "baseExpression": {
                      "id": 901,
                      "name": "inspections",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 681,
                      "src": "3594:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$666_storage_$",
                        "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                      }
                    },
                    "id": 903,
                    "indexExpression": {
                      "id": 902,
                      "name": "inspectionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 870,
                      "src": "3606:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3594:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$666_storage",
                      "typeString": "struct InspectionContract.Inspection storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3563:56:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 906,
                        "name": "inspection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 900,
                        "src": "3647:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                          "typeString": "struct InspectionContract.Inspection memory"
                        }
                      },
                      {
                        "id": 907,
                        "name": "isas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 874,
                        "src": "3659:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                          "typeString": "struct InspectionContract.Inspection memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        }
                      ],
                      "id": 905,
                      "name": "markAsRealized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1083,
                      "src": "3632:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Inspection_$666_memory_ptr_$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (struct InspectionContract.Inspection memory,uint256[] memory[] memory)"
                      }
                    },
                    "id": 908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3632:32:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 909,
                  "nodeType": "ExpressionStatement",
                  "src": "3632:32:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 911,
                        "name": "inspectionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 870,
                        "src": "3700:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 910,
                      "name": "afterRealizeInspection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1230,
                      "src": "3677:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3677:36:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 913,
                  "nodeType": "ExpressionStatement",
                  "src": "3677:36:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 915,
                        "name": "inspectionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 870,
                        "src": "3744:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 916,
                          "name": "inspection",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 900,
                          "src": "3758:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                            "typeString": "struct InspectionContract.Inspection memory"
                          }
                        },
                        "id": 917,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isaPoints",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 657,
                        "src": "3758:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 914,
                      "name": "updateProducerIsa",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1105,
                      "src": "3726:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_int256_$returns$__$",
                        "typeString": "function (uint256,int256)"
                      }
                    },
                    "id": 918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3726:53:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 919,
                  "nodeType": "ExpressionStatement",
                  "src": "3726:53:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 921,
                          "name": "inspection",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 900,
                          "src": "3817:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                            "typeString": "struct InspectionContract.Inspection memory"
                          }
                        },
                        "id": 922,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "producerWallet",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 649,
                        "src": "3817:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "32303030",
                        "id": 923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3844:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000_by_1",
                          "typeString": "int_const 2000"
                        },
                        "value": "2000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_2000_by_1",
                          "typeString": "int_const 2000"
                        }
                      ],
                      "id": 920,
                      "name": "approveProducerNewTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1562,
                      "src": "3792:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3792:57:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 925,
                  "nodeType": "ExpressionStatement",
                  "src": "3792:57:3"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3870:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 883,
                  "id": 927,
                  "nodeType": "Return",
                  "src": "3863:11:3"
                }
              ]
            },
            "documentation": {
              "id": 868,
              "nodeType": "StructuredDocumentation",
              "src": "3010:276:3",
              "text": " @dev Allow a activist realize a inspection and mark as INSPECTED\n @param inspectionId The id of the inspection to be realized\n @param isas The uint[][] of categoryId and isaIndex. Ex: isas = [ [categoryId, isaIndex], [categoryId, isaIndex] ]"
            },
            "functionSelector": "b92bd2d9",
            "id": 929,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 877,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 876,
                  "name": "requireActivist",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1274,
                  "src": "3369:15:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "3369:15:3"
              },
              {
                "arguments": [
                  {
                    "id": 879,
                    "name": "inspectionId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 870,
                    "src": "3409:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 880,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 878,
                  "name": "requireInspectionExists",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1287,
                  "src": "3385:23:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "3385:37:3"
              }
            ],
            "name": "realizeInspection",
            "nameLocation": "3302:17:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 870,
                  "mutability": "mutable",
                  "name": "inspectionId",
                  "nameLocation": "3325:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 929,
                  "src": "3320:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 869,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3320:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 874,
                  "mutability": "mutable",
                  "name": "isas",
                  "nameLocation": "3355:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 929,
                  "src": "3339:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                    "typeString": "uint256[][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 871,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3339:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 872,
                      "nodeType": "ArrayTypeName",
                      "src": "3339:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      }
                    },
                    "id": 873,
                    "nodeType": "ArrayTypeName",
                    "src": "3339:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                      "typeString": "uint256[][]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3319:41:3"
            },
            "returnParameters": {
              "id": 883,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 882,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 929,
                  "src": "3431:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 881,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3431:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3430:6:3"
            },
            "scope": 1288,
            "src": "3293:589:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 955,
              "nodeType": "Block",
              "src": "4164:130:3",
              "statements": [
                {
                  "assignments": [
                    943
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 943,
                      "mutability": "mutable",
                      "name": "isas",
                      "nameLocation": "4192:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 955,
                      "src": "4176:20:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                        "typeString": "uint256[][]"
                      },
                      "typeName": {
                        "baseType": {
                          "baseType": {
                            "id": 940,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "4176:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 941,
                          "nodeType": "ArrayTypeName",
                          "src": "4176:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "id": 942,
                        "nodeType": "ArrayTypeName",
                        "src": "4176:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                          "typeString": "uint256[][]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 946,
                  "initialValue": {
                    "expression": {
                      "id": 944,
                      "name": "inspection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 933,
                      "src": "4199:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                        "typeString": "struct InspectionContract.Inspection memory"
                      }
                    },
                    "id": 945,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "isas",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 655,
                    "src": "4199:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                      "typeString": "uint256[] memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4176:38:3"
                },
                {
                  "assignments": [
                    948
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 948,
                      "mutability": "mutable",
                      "name": "isaPoints",
                      "nameLocation": "4229:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 955,
                      "src": "4225:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 947,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "4225:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 952,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 950,
                        "name": "isas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 943,
                        "src": "4254:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        }
                      ],
                      "id": 949,
                      "name": "sumIsaPoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1030,
                      "src": "4241:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$returns$_t_int256_$",
                        "typeString": "function (uint256[] memory[] memory) pure returns (int256)"
                      }
                    },
                    "id": 951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4241:18:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4225:34:3"
                },
                {
                  "expression": {
                    "id": 953,
                    "name": "isaPoints",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 948,
                    "src": "4277:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 937,
                  "id": 954,
                  "nodeType": "Return",
                  "src": "4270:16:3"
                }
              ]
            },
            "documentation": {
              "id": 930,
              "nodeType": "StructuredDocumentation",
              "src": "3888:192:3",
              "text": " @dev Calculate the ISA of the inspection based in the category and the ISA level of the category\n @param inspection Receive the inspected inspection with your isas levels"
            },
            "id": 956,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateIsa",
            "nameLocation": "4095:12:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 934,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 933,
                  "mutability": "mutable",
                  "name": "inspection",
                  "nameLocation": "4126:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 956,
                  "src": "4108:28:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                    "typeString": "struct InspectionContract.Inspection"
                  },
                  "typeName": {
                    "id": 932,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 931,
                      "name": "Inspection",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 666,
                      "src": "4108:10:3"
                    },
                    "referencedDeclaration": 666,
                    "src": "4108:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$666_storage_ptr",
                      "typeString": "struct InspectionContract.Inspection"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4107:30:3"
            },
            "returnParameters": {
              "id": 937,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 936,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 956,
                  "src": "4160:3:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 935,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "4160:3:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4159:5:3"
            },
            "scope": 1288,
            "src": "4086:208:3",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1029,
              "nodeType": "Block",
              "src": "4511:290:3",
              "statements": [
                {
                  "assignments": [
                    971
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 971,
                      "mutability": "mutable",
                      "name": "points",
                      "nameLocation": "4536:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1029,
                      "src": "4522:20:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_int256_$5_memory_ptr",
                        "typeString": "int256[5]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 969,
                          "name": "int",
                          "nodeType": "ElementaryTypeName",
                          "src": "4522:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 970,
                        "length": {
                          "hexValue": "35",
                          "id": 968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4526:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "4522:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int256_$5_storage_ptr",
                          "typeString": "int256[5]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 995,
                  "initialValue": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "hexValue": "3130",
                            "id": 974,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4550:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            }
                          ],
                          "id": 973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4546:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_int256_$",
                            "typeString": "type(int256)"
                          },
                          "typeName": {
                            "id": 972,
                            "name": "int",
                            "nodeType": "ElementaryTypeName",
                            "src": "4546:3:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4546:7:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "35",
                            "id": 978,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4559:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            },
                            "value": "5"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            }
                          ],
                          "id": 977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4555:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_int256_$",
                            "typeString": "type(int256)"
                          },
                          "typeName": {
                            "id": 976,
                            "name": "int",
                            "nodeType": "ElementaryTypeName",
                            "src": "4555:3:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 979,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4555:6:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 982,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4567:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 981,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4563:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_int256_$",
                            "typeString": "type(int256)"
                          },
                          "typeName": {
                            "id": 980,
                            "name": "int",
                            "nodeType": "ElementaryTypeName",
                            "src": "4563:3:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4563:6:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 987,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "-",
                            "prefix": true,
                            "src": "4575:2:3",
                            "subExpression": {
                              "hexValue": "35",
                              "id": 986,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4576:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_5_by_1",
                                "typeString": "int_const 5"
                              },
                              "value": "5"
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_minus_5_by_1",
                              "typeString": "int_const -5"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_minus_5_by_1",
                              "typeString": "int_const -5"
                            }
                          ],
                          "id": 985,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4571:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_int256_$",
                            "typeString": "type(int256)"
                          },
                          "typeName": {
                            "id": 984,
                            "name": "int",
                            "nodeType": "ElementaryTypeName",
                            "src": "4571:3:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4571:7:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 992,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "-",
                            "prefix": true,
                            "src": "4584:3:3",
                            "subExpression": {
                              "hexValue": "3130",
                              "id": 991,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4585:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_minus_10_by_1",
                              "typeString": "int_const -10"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_minus_10_by_1",
                              "typeString": "int_const -10"
                            }
                          ],
                          "id": 990,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4580:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_int256_$",
                            "typeString": "type(int256)"
                          },
                          "typeName": {
                            "id": 989,
                            "name": "int",
                            "nodeType": "ElementaryTypeName",
                            "src": "4580:3:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4580:8:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "id": 994,
                    "isConstant": false,
                    "isInlineArray": true,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4545:44:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_int256_$5_memory_ptr",
                      "typeString": "int256[5] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4522:67:3"
                },
                {
                  "assignments": [
                    997
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 997,
                      "mutability": "mutable",
                      "name": "isaPoints",
                      "nameLocation": "4604:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1029,
                      "src": "4600:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 996,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "4600:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 999,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4616:1:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4600:17:3"
                },
                {
                  "body": {
                    "id": 1025,
                    "nodeType": "Block",
                    "src": "4670:97:3",
                    "statements": [
                      {
                        "assignments": [
                          1012
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1012,
                            "mutability": "mutable",
                            "name": "isaIndex",
                            "nameLocation": "4690:8:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 1025,
                            "src": "4685:13:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1011,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "4685:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1018,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1013,
                              "name": "isas",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 961,
                              "src": "4701:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                                "typeString": "uint256[] memory[] memory"
                              }
                            },
                            "id": 1015,
                            "indexExpression": {
                              "id": 1014,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1001,
                              "src": "4706:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4701:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 1017,
                          "indexExpression": {
                            "hexValue": "31",
                            "id": 1016,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4709:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4701:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4685:26:3"
                      },
                      {
                        "expression": {
                          "id": 1023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1019,
                            "name": "isaPoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 997,
                            "src": "4726:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 1020,
                              "name": "points",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 971,
                              "src": "4739:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_int256_$5_memory_ptr",
                                "typeString": "int256[5] memory"
                              }
                            },
                            "id": 1022,
                            "indexExpression": {
                              "id": 1021,
                              "name": "isaIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1012,
                              "src": "4746:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4739:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "4726:29:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 1024,
                        "nodeType": "ExpressionStatement",
                        "src": "4726:29:3"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1004,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1001,
                      "src": "4648:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1005,
                        "name": "isas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 961,
                        "src": "4652:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        }
                      },
                      "id": 1006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4652:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4648:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1026,
                  "initializationExpression": {
                    "assignments": [
                      1001
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1001,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4641:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1026,
                        "src": "4635:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1000,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "4635:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1003,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1002,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4645:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4635:11:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1009,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4665:3:3",
                      "subExpression": {
                        "id": 1008,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1001,
                        "src": "4665:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 1010,
                    "nodeType": "ExpressionStatement",
                    "src": "4665:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "4630:137:3"
                },
                {
                  "expression": {
                    "id": 1027,
                    "name": "isaPoints",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 997,
                    "src": "4784:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 965,
                  "id": 1028,
                  "nodeType": "Return",
                  "src": "4777:16:3"
                }
              ]
            },
            "documentation": {
              "id": 957,
              "nodeType": "StructuredDocumentation",
              "src": "4300:134:3",
              "text": " @dev Sum the ISA points\n @param isas The isas values as list of [[categoryId, isaIndex], [categoryId, isaIndex]]"
            },
            "id": 1030,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sumIsaPoints",
            "nameLocation": "4449:12:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 962,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 961,
                  "mutability": "mutable",
                  "name": "isas",
                  "nameLocation": "4478:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1030,
                  "src": "4462:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                    "typeString": "uint256[][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 958,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4462:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 959,
                      "nodeType": "ArrayTypeName",
                      "src": "4462:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      }
                    },
                    "id": 960,
                    "nodeType": "ArrayTypeName",
                    "src": "4462:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                      "typeString": "uint256[][]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4461:22:3"
            },
            "returnParameters": {
              "id": 965,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 964,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1030,
                  "src": "4506:3:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 963,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "4506:3:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4505:5:3"
            },
            "scope": 1288,
            "src": "4440:361:3",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1082,
              "nodeType": "Block",
              "src": "4894:315:3",
              "statements": [
                {
                  "expression": {
                    "id": 1044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1040,
                        "name": "inspection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1033,
                        "src": "4908:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                          "typeString": "struct InspectionContract.Inspection memory"
                        }
                      },
                      "id": 1042,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isas",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 655,
                      "src": "4908:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                        "typeString": "uint256[] memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1043,
                      "name": "isas",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1037,
                      "src": "4926:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                        "typeString": "uint256[] memory[] memory"
                      }
                    },
                    "src": "4908:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                      "typeString": "uint256[] memory[] memory"
                    }
                  },
                  "id": 1045,
                  "nodeType": "ExpressionStatement",
                  "src": "4908:22:3"
                },
                {
                  "expression": {
                    "id": 1051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1046,
                        "name": "inspection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1033,
                        "src": "4941:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                          "typeString": "struct InspectionContract.Inspection memory"
                        }
                      },
                      "id": 1048,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 647,
                      "src": "4941:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_InspectionStatus_$639",
                        "typeString": "enum InspectionContract.InspectionStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1049,
                        "name": "InspectionStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 639,
                        "src": "4961:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_InspectionStatus_$639_$",
                          "typeString": "type(enum InspectionContract.InspectionStatus)"
                        }
                      },
                      "id": 1050,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "INSPECTED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 637,
                      "src": "4961:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_InspectionStatus_$639",
                        "typeString": "enum InspectionContract.InspectionStatus"
                      }
                    },
                    "src": "4941:46:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_InspectionStatus_$639",
                      "typeString": "enum InspectionContract.InspectionStatus"
                    }
                  },
                  "id": 1052,
                  "nodeType": "ExpressionStatement",
                  "src": "4941:46:3"
                },
                {
                  "expression": {
                    "id": 1058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1053,
                        "name": "inspection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1033,
                        "src": "4998:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                          "typeString": "struct InspectionContract.Inspection memory"
                        }
                      },
                      "id": 1055,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "updatedAt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 663,
                      "src": "4998:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1056,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "5021:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "5021:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4998:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1059,
                  "nodeType": "ExpressionStatement",
                  "src": "4998:38:3"
                },
                {
                  "expression": {
                    "id": 1066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1060,
                        "name": "inspection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1033,
                        "src": "5047:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                          "typeString": "struct InspectionContract.Inspection memory"
                        }
                      },
                      "id": 1062,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isaPoints",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 657,
                      "src": "5047:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1064,
                          "name": "inspection",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1033,
                          "src": "5083:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                            "typeString": "struct InspectionContract.Inspection memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                            "typeString": "struct InspectionContract.Inspection memory"
                          }
                        ],
                        "id": 1063,
                        "name": "calculateIsa",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 956,
                        "src": "5070:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_struct$_Inspection_$666_memory_ptr_$returns$_t_int256_$",
                          "typeString": "function (struct InspectionContract.Inspection memory) pure returns (int256)"
                        }
                      },
                      "id": 1065,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5070:24:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "5047:47:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 1067,
                  "nodeType": "ExpressionStatement",
                  "src": "5047:47:3"
                },
                {
                  "expression": {
                    "id": 1073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1068,
                        "name": "inspections",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 681,
                        "src": "5105:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$666_storage_$",
                          "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                        }
                      },
                      "id": 1071,
                      "indexExpression": {
                        "expression": {
                          "id": 1069,
                          "name": "inspection",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1033,
                          "src": "5117:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                            "typeString": "struct InspectionContract.Inspection memory"
                          }
                        },
                        "id": 1070,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "id",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 644,
                        "src": "5117:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5105:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$666_storage",
                        "typeString": "struct InspectionContract.Inspection storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1072,
                      "name": "inspection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1033,
                      "src": "5134:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                        "typeString": "struct InspectionContract.Inspection memory"
                      }
                    },
                    "src": "5105:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$666_storage",
                      "typeString": "struct InspectionContract.Inspection storage ref"
                    }
                  },
                  "id": 1074,
                  "nodeType": "ExpressionStatement",
                  "src": "5105:39:3"
                },
                {
                  "expression": {
                    "id": 1080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1075,
                        "name": "inspectionsList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 670,
                        "src": "5155:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Inspection_$666_storage_$dyn_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref[] storage ref"
                        }
                      },
                      "id": 1078,
                      "indexExpression": {
                        "expression": {
                          "id": 1076,
                          "name": "inspection",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1033,
                          "src": "5171:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                            "typeString": "struct InspectionContract.Inspection memory"
                          }
                        },
                        "id": 1077,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "index",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 665,
                        "src": "5171:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5155:33:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$666_storage",
                        "typeString": "struct InspectionContract.Inspection storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1079,
                      "name": "inspection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1033,
                      "src": "5191:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                        "typeString": "struct InspectionContract.Inspection memory"
                      }
                    },
                    "src": "5155:46:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$666_storage",
                      "typeString": "struct InspectionContract.Inspection storage ref"
                    }
                  },
                  "id": 1081,
                  "nodeType": "ExpressionStatement",
                  "src": "5155:46:3"
                }
              ]
            },
            "id": 1083,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "markAsRealized",
            "nameLocation": "4818:14:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1038,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1033,
                  "mutability": "mutable",
                  "name": "inspection",
                  "nameLocation": "4851:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1083,
                  "src": "4833:28:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                    "typeString": "struct InspectionContract.Inspection"
                  },
                  "typeName": {
                    "id": 1032,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1031,
                      "name": "Inspection",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 666,
                      "src": "4833:10:3"
                    },
                    "referencedDeclaration": 666,
                    "src": "4833:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$666_storage_ptr",
                      "typeString": "struct InspectionContract.Inspection"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1037,
                  "mutability": "mutable",
                  "name": "isas",
                  "nameLocation": "4879:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1083,
                  "src": "4863:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                    "typeString": "uint256[][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 1034,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4863:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1035,
                      "nodeType": "ArrayTypeName",
                      "src": "4863:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      }
                    },
                    "id": 1036,
                    "nodeType": "ArrayTypeName",
                    "src": "4863:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                      "typeString": "uint256[][]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4832:52:3"
            },
            "returnParameters": {
              "id": 1039,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4894:0:3"
            },
            "scope": 1288,
            "src": "4809:400:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1104,
              "nodeType": "Block",
              "src": "5287:144:3",
              "statements": [
                {
                  "assignments": [
                    1091
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1091,
                      "mutability": "mutable",
                      "name": "producerAddress",
                      "nameLocation": "5306:15:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1104,
                      "src": "5298:23:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1090,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5298:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1096,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 1092,
                        "name": "inspections",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 681,
                        "src": "5324:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$666_storage_$",
                          "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                        }
                      },
                      "id": 1094,
                      "indexExpression": {
                        "id": 1093,
                        "name": "inspectionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1085,
                        "src": "5336:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5324:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$666_storage",
                        "typeString": "struct InspectionContract.Inspection storage ref"
                      }
                    },
                    "id": 1095,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "producerWallet",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 649,
                    "src": "5324:40:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5298:66:3"
                },
                {
                  "expression": {
                    "id": 1102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1097,
                          "name": "producers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1394,
                          "src": "5375:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Producer_$1371_storage_$",
                            "typeString": "mapping(address => struct ProducerContract.Producer storage ref)"
                          }
                        },
                        "id": 1099,
                        "indexExpression": {
                          "id": 1098,
                          "name": "producerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1091,
                          "src": "5385:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5375:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Producer_$1371_storage",
                          "typeString": "struct ProducerContract.Producer storage ref"
                        }
                      },
                      "id": 1100,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isaPoints",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1364,
                      "src": "5375:36:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1101,
                      "name": "isaPoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1087,
                      "src": "5414:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "5375:48:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 1103,
                  "nodeType": "ExpressionStatement",
                  "src": "5375:48:3"
                }
              ]
            },
            "id": 1105,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateProducerIsa",
            "nameLocation": "5226:17:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1088,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1085,
                  "mutability": "mutable",
                  "name": "inspectionId",
                  "nameLocation": "5249:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1105,
                  "src": "5244:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1084,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5244:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1087,
                  "mutability": "mutable",
                  "name": "isaPoints",
                  "nameLocation": "5267:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1105,
                  "src": "5263:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 1086,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "5263:3:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5243:34:3"
            },
            "returnParameters": {
              "id": 1089,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5287:0:3"
            },
            "scope": 1288,
            "src": "5217:214:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1118,
              "nodeType": "Block",
              "src": "5641:41:3",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1114,
                      "name": "inspections",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 681,
                      "src": "5659:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$666_storage_$",
                        "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                      }
                    },
                    "id": 1116,
                    "indexExpression": {
                      "id": 1115,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1108,
                      "src": "5671:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5659:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$666_storage",
                      "typeString": "struct InspectionContract.Inspection storage ref"
                    }
                  },
                  "functionReturnParameters": 1113,
                  "id": 1117,
                  "nodeType": "Return",
                  "src": "5652:22:3"
                }
              ]
            },
            "documentation": {
              "id": 1106,
              "nodeType": "StructuredDocumentation",
              "src": "5445:116:3",
              "text": " @dev Returns a inspection by id if that exists.\n @param id The id of the inspection to return."
            },
            "functionSelector": "f2836670",
            "id": 1119,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInspection",
            "nameLocation": "5576:13:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1108,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "5598:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1119,
                  "src": "5590:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1107,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5590:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5589:12:3"
            },
            "returnParameters": {
              "id": 1113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1112,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1119,
                  "src": "5622:17:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                    "typeString": "struct InspectionContract.Inspection"
                  },
                  "typeName": {
                    "id": 1111,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1110,
                      "name": "Inspection",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 666,
                      "src": "5622:10:3"
                    },
                    "referencedDeclaration": 666,
                    "src": "5622:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$666_storage_ptr",
                      "typeString": "struct InspectionContract.Inspection"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5621:19:3"
            },
            "scope": 1288,
            "src": "5567:115:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1129,
              "nodeType": "Block",
              "src": "5824:41:3",
              "statements": [
                {
                  "expression": {
                    "id": 1127,
                    "name": "inspectionsList",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 670,
                    "src": "5842:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Inspection_$666_storage_$dyn_storage",
                      "typeString": "struct InspectionContract.Inspection storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1126,
                  "id": 1128,
                  "nodeType": "Return",
                  "src": "5835:22:3"
                }
              ]
            },
            "documentation": {
              "id": 1120,
              "nodeType": "StructuredDocumentation",
              "src": "5694:56:3",
              "text": " @dev Returns all requested inspections."
            },
            "functionSelector": "ee699fc1",
            "id": 1130,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInspections",
            "nameLocation": "5765:14:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5779:2:3"
            },
            "returnParameters": {
              "id": 1126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1125,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1130,
                  "src": "5803:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Inspection_$666_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct InspectionContract.Inspection[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1123,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1122,
                        "name": "Inspection",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 666,
                        "src": "5803:10:3"
                      },
                      "referencedDeclaration": 666,
                      "src": "5803:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$666_storage_ptr",
                        "typeString": "struct InspectionContract.Inspection"
                      }
                    },
                    "id": 1124,
                    "nodeType": "ArrayTypeName",
                    "src": "5803:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Inspection_$666_storage_$dyn_storage_ptr",
                      "typeString": "struct InspectionContract.Inspection[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5802:21:3"
            },
            "scope": 1288,
            "src": "5756:109:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1148,
              "nodeType": "Block",
              "src": "6054:70:3",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "4f50454e",
                        "id": 1142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6073:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f76fe33b8a0ebf7aa05740f479d10138c7c15bdc75b10e047cc15be2be15e5b4",
                          "typeString": "literal_string \"OPEN\""
                        },
                        "value": "OPEN"
                      },
                      {
                        "hexValue": "45585049524544",
                        "id": 1143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6081:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd725cfb5ba01ea5dc5a7159cf41eaa54c28dc001805ce2361d3c894e7c2f72a",
                          "typeString": "literal_string \"EXPIRED\""
                        },
                        "value": "EXPIRED"
                      },
                      {
                        "hexValue": "494e53504543544544",
                        "id": 1144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6092:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee5396ce4732a0f90688f3919520a56ad5e5581ce25fa727e167ca44cbd5926f",
                          "typeString": "literal_string \"INSPECTED\""
                        },
                        "value": "INSPECTED"
                      },
                      {
                        "hexValue": "4143434550544544",
                        "id": 1145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6105:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_66a524c81cf8e657f1147e56f41f83002f6210ee7ae7b08d255f786088ae96f7",
                          "typeString": "literal_string \"ACCEPTED\""
                        },
                        "value": "ACCEPTED"
                      }
                    ],
                    "id": 1146,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "6072:44:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_stringliteral_f76fe33b8a0ebf7aa05740f479d10138c7c15bdc75b10e047cc15be2be15e5b4_$_t_stringliteral_bd725cfb5ba01ea5dc5a7159cf41eaa54c28dc001805ce2361d3c894e7c2f72a_$_t_stringliteral_ee5396ce4732a0f90688f3919520a56ad5e5581ce25fa727e167ca44cbd5926f_$_t_stringliteral_66a524c81cf8e657f1147e56f41f83002f6210ee7ae7b08d255f786088ae96f7_$",
                      "typeString": "tuple(literal_string \"OPEN\",literal_string \"EXPIRED\",literal_string \"INSPECTED\",literal_string \"ACCEPTED\")"
                    }
                  },
                  "functionReturnParameters": 1141,
                  "id": 1147,
                  "nodeType": "Return",
                  "src": "6065:51:3"
                }
              ]
            },
            "documentation": {
              "id": 1131,
              "nodeType": "StructuredDocumentation",
              "src": "5877:59:3",
              "text": " @dev Returns all inpections status string."
            },
            "functionSelector": "dd6850c6",
            "id": 1149,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInspectionsStatus",
            "nameLocation": "5951:20:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1132,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5971:2:3"
            },
            "returnParameters": {
              "id": 1141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1134,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1149,
                  "src": "5994:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1133,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5994:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1136,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1149,
                  "src": "6009:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1135,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6009:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1138,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1149,
                  "src": "6024:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1137,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6024:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1140,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1149,
                  "src": "6039:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1139,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6039:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5993:60:3"
            },
            "scope": 1288,
            "src": "5942:182:3",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1164,
              "nodeType": "Block",
              "src": "6342:49:3",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1157,
                          "name": "inspections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 681,
                          "src": "6360:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$666_storage_$",
                            "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                          }
                        },
                        "id": 1159,
                        "indexExpression": {
                          "id": 1158,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1152,
                          "src": "6372:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6360:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$666_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      },
                      "id": 1160,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 644,
                      "src": "6360:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 1161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6382:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "6360:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1156,
                  "id": 1163,
                  "nodeType": "Return",
                  "src": "6353:30:3"
                }
              ]
            },
            "documentation": {
              "id": 1150,
              "nodeType": "StructuredDocumentation",
              "src": "6136:136:3",
              "text": " @dev Check if an inspections exists in mapping.\n @param id The id of the inspection that the activist want accept."
            },
            "functionSelector": "fe5a4fa4",
            "id": 1165,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "inspectionExists",
            "nameLocation": "6287:16:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1152,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "6312:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1165,
                  "src": "6304:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1151,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6304:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6303:12:3"
            },
            "returnParameters": {
              "id": 1156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1155,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1165,
                  "src": "6336:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1154,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6336:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6335:6:3"
            },
            "scope": 1288,
            "src": "6278:113:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1229,
              "nodeType": "Block",
              "src": "6645:728:3",
              "statements": [
                {
                  "assignments": [
                    1172
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1172,
                      "mutability": "mutable",
                      "name": "producerWallet",
                      "nameLocation": "6664:14:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1229,
                      "src": "6656:22:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1171,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6656:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1177,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 1173,
                        "name": "inspections",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 681,
                        "src": "6681:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$666_storage_$",
                          "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                        }
                      },
                      "id": 1175,
                      "indexExpression": {
                        "id": 1174,
                        "name": "inspectionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1168,
                        "src": "6693:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6681:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$666_storage",
                        "typeString": "struct InspectionContract.Inspection storage ref"
                      }
                    },
                    "id": 1176,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "producerWallet",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 649,
                    "src": "6681:40:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6656:65:3"
                },
                {
                  "assignments": [
                    1179
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1179,
                      "mutability": "mutable",
                      "name": "activistWallet",
                      "nameLocation": "6740:14:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1229,
                      "src": "6732:22:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1178,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6732:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1184,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 1180,
                        "name": "inspections",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 681,
                        "src": "6757:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$666_storage_$",
                          "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                        }
                      },
                      "id": 1182,
                      "indexExpression": {
                        "id": 1181,
                        "name": "inspectionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1168,
                        "src": "6769:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6757:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$666_storage",
                        "typeString": "struct InspectionContract.Inspection storage ref"
                      }
                    },
                    "id": 1183,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "activistWallet",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 651,
                    "src": "6757:40:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6732:65:3"
                },
                {
                  "expression": {
                    "id": 1190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1185,
                          "name": "activists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "6901:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Activist_$25_storage_$",
                            "typeString": "mapping(address => struct ActivistContract.Activist storage ref)"
                          }
                        },
                        "id": 1187,
                        "indexExpression": {
                          "id": 1186,
                          "name": "activistWallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1179,
                          "src": "6911:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6901:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Activist_$25_storage",
                          "typeString": "struct ActivistContract.Activist storage ref"
                        }
                      },
                      "id": 1188,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "recentInspection",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19,
                      "src": "6901:42:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6946:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "6901:50:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1191,
                  "nodeType": "ExpressionStatement",
                  "src": "6901:50:3"
                },
                {
                  "expression": {
                    "id": 1196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "6962:44:3",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1192,
                          "name": "activists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "6962:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Activist_$25_storage_$",
                            "typeString": "mapping(address => struct ActivistContract.Activist storage ref)"
                          }
                        },
                        "id": 1194,
                        "indexExpression": {
                          "id": 1193,
                          "name": "activistWallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1179,
                          "src": "6972:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6962:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Activist_$25_storage",
                          "typeString": "struct ActivistContract.Activist storage ref"
                        }
                      },
                      "id": 1195,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalInspections",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "6962:42:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1197,
                  "nodeType": "ExpressionStatement",
                  "src": "6962:44:3"
                },
                {
                  "expression": {
                    "id": 1203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1198,
                          "name": "producers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1394,
                          "src": "7105:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Producer_$1371_storage_$",
                            "typeString": "mapping(address => struct ProducerContract.Producer storage ref)"
                          }
                        },
                        "id": 1200,
                        "indexExpression": {
                          "id": 1199,
                          "name": "producerWallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1172,
                          "src": "7115:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7105:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Producer_$1371_storage",
                          "typeString": "struct ProducerContract.Producer storage ref"
                        }
                      },
                      "id": 1201,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "recentInspection",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1360,
                      "src": "7105:42:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7150:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "7105:50:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1204,
                  "nodeType": "ExpressionStatement",
                  "src": "7105:50:3"
                },
                {
                  "expression": {
                    "id": 1209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "7166:41:3",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1205,
                          "name": "producers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1394,
                          "src": "7166:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Producer_$1371_storage_$",
                            "typeString": "mapping(address => struct ProducerContract.Producer storage ref)"
                          }
                        },
                        "id": 1207,
                        "indexExpression": {
                          "id": 1206,
                          "name": "producerWallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1172,
                          "src": "7176:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7166:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Producer_$1371_storage",
                          "typeString": "struct ProducerContract.Producer storage ref"
                        }
                      },
                      "id": 1208,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalRequests",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1362,
                      "src": "7166:39:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1210,
                  "nodeType": "ExpressionStatement",
                  "src": "7166:41:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 1215,
                          "name": "inspections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 681,
                          "src": "7265:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$666_storage_$",
                            "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                          }
                        },
                        "id": 1217,
                        "indexExpression": {
                          "id": 1216,
                          "name": "inspectionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1168,
                          "src": "7277:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7265:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$666_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Inspection_$666_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 1211,
                          "name": "userInspections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 676,
                          "src": "7228:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Inspection_$666_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct InspectionContract.Inspection storage ref[] storage ref)"
                          }
                        },
                        "id": 1213,
                        "indexExpression": {
                          "id": 1212,
                          "name": "producerWallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1172,
                          "src": "7244:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7228:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Inspection_$666_storage_$dyn_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref[] storage ref"
                        }
                      },
                      "id": 1214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "7228:36:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Inspection_$666_storage_$dyn_storage_ptr_$_t_struct$_Inspection_$666_storage_$returns$__$bound_to$_t_array$_t_struct$_Inspection_$666_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct InspectionContract.Inspection storage ref[] storage pointer,struct InspectionContract.Inspection storage ref)"
                      }
                    },
                    "id": 1218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7228:63:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1219,
                  "nodeType": "ExpressionStatement",
                  "src": "7228:63:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 1224,
                          "name": "inspections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 681,
                          "src": "7339:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$666_storage_$",
                            "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                          }
                        },
                        "id": 1226,
                        "indexExpression": {
                          "id": 1225,
                          "name": "inspectionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1168,
                          "src": "7351:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7339:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$666_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Inspection_$666_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 1220,
                          "name": "userInspections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 676,
                          "src": "7302:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Inspection_$666_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct InspectionContract.Inspection storage ref[] storage ref)"
                          }
                        },
                        "id": 1222,
                        "indexExpression": {
                          "id": 1221,
                          "name": "activistWallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1179,
                          "src": "7318:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7302:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Inspection_$666_storage_$dyn_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref[] storage ref"
                        }
                      },
                      "id": 1223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "7302:36:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Inspection_$666_storage_$dyn_storage_ptr_$_t_struct$_Inspection_$666_storage_$returns$__$bound_to$_t_array$_t_struct$_Inspection_$666_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct InspectionContract.Inspection storage ref[] storage pointer,struct InspectionContract.Inspection storage ref)"
                      }
                    },
                    "id": 1227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7302:63:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1228,
                  "nodeType": "ExpressionStatement",
                  "src": "7302:63:3"
                }
              ]
            },
            "documentation": {
              "id": 1166,
              "nodeType": "StructuredDocumentation",
              "src": "6403:176:3",
              "text": " @dev Inscrement producer and activist request action and mark both as no recent open requests and inspection\n @param inspectionId The id of the inspection"
            },
            "id": 1230,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "afterRealizeInspection",
            "nameLocation": "6594:22:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1168,
                  "mutability": "mutable",
                  "name": "inspectionId",
                  "nameLocation": "6622:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1230,
                  "src": "6617:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1167,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6617:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6616:19:3"
            },
            "returnParameters": {
              "id": 1170,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6645:0:3"
            },
            "scope": 1288,
            "src": "6585:788:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1245,
              "nodeType": "Block",
              "src": "7457:80:3",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1237,
                          "name": "inspections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 681,
                          "src": "7475:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$666_storage_$",
                            "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                          }
                        },
                        "id": 1239,
                        "indexExpression": {
                          "id": 1238,
                          "name": "inspectionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1232,
                          "src": "7487:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7475:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$666_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      },
                      "id": 1240,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "activistWallet",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 651,
                      "src": "7475:40:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 1241,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "7519:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "7519:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7475:54:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1236,
                  "id": 1244,
                  "nodeType": "Return",
                  "src": "7468:61:3"
                }
              ]
            },
            "id": 1246,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isActivistOwner",
            "nameLocation": "7394:15:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1233,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1232,
                  "mutability": "mutable",
                  "name": "inspectionId",
                  "nameLocation": "7415:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1246,
                  "src": "7410:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1231,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7410:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7409:19:3"
            },
            "returnParameters": {
              "id": 1236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1235,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1246,
                  "src": "7451:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1234,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7451:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7450:6:3"
            },
            "scope": 1288,
            "src": "7385:152:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1261,
              "nodeType": "Block",
              "src": "7613:87:3",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_InspectionStatus_$639",
                      "typeString": "enum InspectionContract.InspectionStatus"
                    },
                    "id": 1259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1253,
                          "name": "inspections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 681,
                          "src": "7631:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$666_storage_$",
                            "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                          }
                        },
                        "id": 1255,
                        "indexExpression": {
                          "id": 1254,
                          "name": "inspectionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1248,
                          "src": "7643:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7631:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$666_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      },
                      "id": 1256,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 647,
                      "src": "7631:32:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_InspectionStatus_$639",
                        "typeString": "enum InspectionContract.InspectionStatus"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 1257,
                        "name": "InspectionStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 639,
                        "src": "7667:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_InspectionStatus_$639_$",
                          "typeString": "type(enum InspectionContract.InspectionStatus)"
                        }
                      },
                      "id": 1258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ACCEPTED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 638,
                      "src": "7667:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_InspectionStatus_$639",
                        "typeString": "enum InspectionContract.InspectionStatus"
                      }
                    },
                    "src": "7631:61:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1252,
                  "id": 1260,
                  "nodeType": "Return",
                  "src": "7624:68:3"
                }
              ]
            },
            "id": 1262,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAccepted",
            "nameLocation": "7555:10:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1248,
                  "mutability": "mutable",
                  "name": "inspectionId",
                  "nameLocation": "7571:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1262,
                  "src": "7566:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1247,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7566:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7565:19:3"
            },
            "returnParameters": {
              "id": 1252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1251,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1262,
                  "src": "7607:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1250,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7607:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7606:6:3"
            },
            "scope": 1288,
            "src": "7546:154:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1273,
              "nodeType": "Block",
              "src": "7757:117:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1266,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "7791:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1267,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7791:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1265,
                          "name": "activistExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 174,
                          "src": "7776:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 1268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7776:26:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206d75737420626520616e2061637469766973742120506c65617365207265676973746572206173206f6e65",
                        "id": 1269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7804:49:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7bbfd9faa9484f9e64abeb985fc471aa16487b87a888d85c1e82273be1ee2169",
                          "typeString": "literal_string \"You must be an activist! Please register as one\""
                        },
                        "value": "You must be an activist! Please register as one"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7bbfd9faa9484f9e64abeb985fc471aa16487b87a888d85c1e82273be1ee2169",
                          "typeString": "literal_string \"You must be an activist! Please register as one\""
                        }
                      ],
                      "id": 1264,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7768:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7768:86:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1271,
                  "nodeType": "ExpressionStatement",
                  "src": "7768:86:3"
                },
                {
                  "id": 1272,
                  "nodeType": "PlaceholderStatement",
                  "src": "7865:1:3"
                }
              ]
            },
            "id": 1274,
            "name": "requireActivist",
            "nameLocation": "7739:15:3",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1263,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7754:2:3"
            },
            "src": "7730:144:3",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1286,
              "nodeType": "Block",
              "src": "7938:102:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1280,
                            "name": "inspectionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1276,
                            "src": "7974:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1279,
                          "name": "inspectionExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1165,
                          "src": "7957:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 1281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7957:30:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320696e7370656374696f6e20646f6e277420657869737473",
                        "id": 1282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7989:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_27cfb18fb102385a5a6ad3d3f29c4023f127e18857272a0d2d3c2847a7e8e217",
                          "typeString": "literal_string \"This inspection don't exists\""
                        },
                        "value": "This inspection don't exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_27cfb18fb102385a5a6ad3d3f29c4023f127e18857272a0d2d3c2847a7e8e217",
                          "typeString": "literal_string \"This inspection don't exists\""
                        }
                      ],
                      "id": 1278,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7949:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7949:71:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1284,
                  "nodeType": "ExpressionStatement",
                  "src": "7949:71:3"
                },
                {
                  "id": 1285,
                  "nodeType": "PlaceholderStatement",
                  "src": "8031:1:3"
                }
              ]
            },
            "id": 1287,
            "name": "requireInspectionExists",
            "nameLocation": "7895:23:3",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1277,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1276,
                  "mutability": "mutable",
                  "name": "inspectionId",
                  "nameLocation": "7924:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1287,
                  "src": "7919:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1275,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7919:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7918:19:3"
            },
            "src": "7886:154:3",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1289,
        "src": "254:7795:3",
        "usedErrors": []
      }
    ],
    "src": "0:8051:3"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Breno/Desktop/Sintrop/SintropContract/contracts/InspectionContract.sol",
    "exportedSymbols": {
      "ActivistContract": [
        175
      ],
      "CategoryContract": [
        381
      ],
      "InspectionContract": [
        1288
      ],
      "ProducerContract": [
        1596
      ],
      "UserContract": [
        2268
      ]
    },
    "id": 1289,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 624,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<=",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:3"
      },
      {
        "absolutePath": "/C/Users/Breno/Desktop/Sintrop/SintropContract/contracts/ProducerContract.sol",
        "file": "./ProducerContract.sol",
        "id": 625,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1289,
        "sourceUnit": 1597,
        "src": "82:32:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/Breno/Desktop/Sintrop/SintropContract/contracts/ActivistContract.sol",
        "file": "./ActivistContract.sol",
        "id": 626,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1289,
        "sourceUnit": 176,
        "src": "116:32:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/Breno/Desktop/Sintrop/SintropContract/contracts/CategoryContract.sol",
        "file": "./CategoryContract.sol",
        "id": 627,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1289,
        "sourceUnit": 382,
        "src": "150:32:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 629,
              "name": "ProducerContract",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1596,
              "src": "285:16:3"
            },
            "id": 630,
            "nodeType": "InheritanceSpecifier",
            "src": "285:16:3"
          },
          {
            "baseName": {
              "id": 631,
              "name": "ActivistContract",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 175,
              "src": "303:16:3"
            },
            "id": 632,
            "nodeType": "InheritanceSpecifier",
            "src": "303:16:3"
          },
          {
            "baseName": {
              "id": 633,
              "name": "CategoryContract",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 381,
              "src": "321:16:3"
            },
            "id": 634,
            "nodeType": "InheritanceSpecifier",
            "src": "321:16:3"
          }
        ],
        "canonicalName": "InspectionContract",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 628,
          "nodeType": "StructuredDocumentation",
          "src": "186:66:3",
          "text": " @title InspectionContract\n @dev Inpection action core"
        },
        "fullyImplemented": true,
        "id": 1288,
        "linearizedBaseContracts": [
          1288,
          381,
          175,
          1596,
          2268
        ],
        "name": "InspectionContract",
        "nameLocation": "263:18:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "InspectionContract.InspectionStatus",
            "id": 639,
            "members": [
              {
                "id": 635,
                "name": "OPEN",
                "nameLocation": "369:4:3",
                "nodeType": "EnumValue",
                "src": "369:4:3"
              },
              {
                "id": 636,
                "name": "EXPIRED",
                "nameLocation": "375:7:3",
                "nodeType": "EnumValue",
                "src": "375:7:3"
              },
              {
                "id": 637,
                "name": "INSPECTED",
                "nameLocation": "384:9:3",
                "nodeType": "EnumValue",
                "src": "384:9:3"
              },
              {
                "id": 638,
                "name": "ACCEPTED",
                "nameLocation": "395:8:3",
                "nodeType": "EnumValue",
                "src": "395:8:3"
              }
            ],
            "name": "InspectionStatus",
            "nameLocation": "350:16:3",
            "nodeType": "EnumDefinition",
            "src": "345:60:3"
          },
          {
            "constant": false,
            "id": 642,
            "mutability": "mutable",
            "name": "inspactionExpireIn",
            "nameLocation": "417:18:3",
            "nodeType": "VariableDeclaration",
            "scope": 1288,
            "src": "412:32:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 640,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "412:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "363034383030",
              "id": 641,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "438:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_604800_by_1",
                "typeString": "int_const 604800"
              },
              "value": "604800"
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "InspectionContract.Inspection",
            "id": 666,
            "members": [
              {
                "constant": false,
                "id": 644,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "505:2:3",
                "nodeType": "VariableDeclaration",
                "scope": 666,
                "src": "500:7:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 643,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "500:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 647,
                "mutability": "mutable",
                "name": "status",
                "nameLocation": "535:6:3",
                "nodeType": "VariableDeclaration",
                "scope": 666,
                "src": "518:23:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_InspectionStatus_$639",
                  "typeString": "enum InspectionContract.InspectionStatus"
                },
                "typeName": {
                  "id": 646,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 645,
                    "name": "InspectionStatus",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 639,
                    "src": "518:16:3"
                  },
                  "referencedDeclaration": 639,
                  "src": "518:16:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_InspectionStatus_$639",
                    "typeString": "enum InspectionContract.InspectionStatus"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 649,
                "mutability": "mutable",
                "name": "producerWallet",
                "nameLocation": "560:14:3",
                "nodeType": "VariableDeclaration",
                "scope": 666,
                "src": "552:22:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 648,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "552:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 651,
                "mutability": "mutable",
                "name": "activistWallet",
                "nameLocation": "593:14:3",
                "nodeType": "VariableDeclaration",
                "scope": 666,
                "src": "585:22:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 650,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "585:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 655,
                "mutability": "mutable",
                "name": "isas",
                "nameLocation": "627:4:3",
                "nodeType": "VariableDeclaration",
                "scope": 666,
                "src": "618:13:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                  "typeString": "uint256[][]"
                },
                "typeName": {
                  "baseType": {
                    "baseType": {
                      "id": 652,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "618:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 653,
                    "nodeType": "ArrayTypeName",
                    "src": "618:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "id": 654,
                  "nodeType": "ArrayTypeName",
                  "src": "618:8:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                    "typeString": "uint256[][]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 657,
                "mutability": "mutable",
                "name": "isaPoints",
                "nameLocation": "646:9:3",
                "nodeType": "VariableDeclaration",
                "scope": 666,
                "src": "642:13:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                },
                "typeName": {
                  "id": 656,
                  "name": "int",
                  "nodeType": "ElementaryTypeName",
                  "src": "642:3:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 659,
                "mutability": "mutable",
                "name": "expiresIn",
                "nameLocation": "671:9:3",
                "nodeType": "VariableDeclaration",
                "scope": 666,
                "src": "666:14:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 658,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "666:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 661,
                "mutability": "mutable",
                "name": "createdAt",
                "nameLocation": "696:9:3",
                "nodeType": "VariableDeclaration",
                "scope": 666,
                "src": "691:14:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 660,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "691:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 663,
                "mutability": "mutable",
                "name": "updatedAt",
                "nameLocation": "721:9:3",
                "nodeType": "VariableDeclaration",
                "scope": 666,
                "src": "716:14:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 662,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "716:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 665,
                "mutability": "mutable",
                "name": "index",
                "nameLocation": "746:5:3",
                "nodeType": "VariableDeclaration",
                "scope": 666,
                "src": "741:10:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 664,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "741:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Inspection",
            "nameLocation": "478:10:3",
            "nodeType": "StructDefinition",
            "scope": 1288,
            "src": "471:288:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 670,
            "mutability": "mutable",
            "name": "inspectionsList",
            "nameLocation": "778:15:3",
            "nodeType": "VariableDeclaration",
            "scope": 1288,
            "src": "765:28:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Inspection_$666_storage_$dyn_storage",
              "typeString": "struct InspectionContract.Inspection[]"
            },
            "typeName": {
              "baseType": {
                "id": 668,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 667,
                  "name": "Inspection",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 666,
                  "src": "765:10:3"
                },
                "referencedDeclaration": 666,
                "src": "765:10:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Inspection_$666_storage_ptr",
                  "typeString": "struct InspectionContract.Inspection"
                }
              },
              "id": 669,
              "nodeType": "ArrayTypeName",
              "src": "765:12:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Inspection_$666_storage_$dyn_storage_ptr",
                "typeString": "struct InspectionContract.Inspection[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 676,
            "mutability": "mutable",
            "name": "userInspections",
            "nameLocation": "833:15:3",
            "nodeType": "VariableDeclaration",
            "scope": 1288,
            "src": "800:48:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Inspection_$666_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct InspectionContract.Inspection[])"
            },
            "typeName": {
              "id": 675,
              "keyType": {
                "id": 671,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "808:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "800:32:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Inspection_$666_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct InspectionContract.Inspection[])"
              },
              "valueType": {
                "baseType": {
                  "id": 673,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 672,
                    "name": "Inspection",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 666,
                    "src": "819:10:3"
                  },
                  "referencedDeclaration": 666,
                  "src": "819:10:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Inspection_$666_storage_ptr",
                    "typeString": "struct InspectionContract.Inspection"
                  }
                },
                "id": 674,
                "nodeType": "ArrayTypeName",
                "src": "819:12:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Inspection_$666_storage_$dyn_storage_ptr",
                  "typeString": "struct InspectionContract.Inspection[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 681,
            "mutability": "mutable",
            "name": "inspections",
            "nameLocation": "886:11:3",
            "nodeType": "VariableDeclaration",
            "scope": 1288,
            "src": "855:42:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$666_storage_$",
              "typeString": "mapping(uint256 => struct InspectionContract.Inspection)"
            },
            "typeName": {
              "id": 680,
              "keyType": {
                "id": 677,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "863:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "855:30:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$666_storage_$",
                "typeString": "mapping(uint256 => struct InspectionContract.Inspection)"
              },
              "valueType": {
                "id": 679,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 678,
                  "name": "Inspection",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 666,
                  "src": "874:10:3"
                },
                "referencedDeclaration": 666,
                "src": "874:10:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Inspection_$666_storage_ptr",
                  "typeString": "struct InspectionContract.Inspection"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 683,
            "mutability": "mutable",
            "name": "inspectionsCount",
            "nameLocation": "912:16:3",
            "nodeType": "VariableDeclaration",
            "scope": 1288,
            "src": "904:24:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 682,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "904:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 697,
              "nodeType": "Block",
              "src": "1140:47:3",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 693,
                      "name": "userInspections",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 676,
                      "src": "1158:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Inspection_$666_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct InspectionContract.Inspection storage ref[] storage ref)"
                      }
                    },
                    "id": 695,
                    "indexExpression": {
                      "id": 694,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 686,
                      "src": "1174:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1158:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Inspection_$666_storage_$dyn_storage",
                      "typeString": "struct InspectionContract.Inspection storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 692,
                  "id": 696,
                  "nodeType": "Return",
                  "src": "1151:28:3"
                }
              ]
            },
            "documentation": {
              "id": 684,
              "nodeType": "StructuredDocumentation",
              "src": "937:111:3",
              "text": " @dev Allows the current user producer/activist get all yours inspections with status INSPECTED"
            },
            "functionSelector": "7b798468",
            "id": 698,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInspectionsHistory",
            "nameLocation": "1063:21:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 687,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 686,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "1093:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 698,
                  "src": "1085:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 685,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1085:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1084:14:3"
            },
            "returnParameters": {
              "id": 692,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 691,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 698,
                  "src": "1119:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Inspection_$666_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct InspectionContract.Inspection[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 689,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 688,
                        "name": "Inspection",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 666,
                        "src": "1119:10:3"
                      },
                      "referencedDeclaration": 666,
                      "src": "1119:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$666_storage_ptr",
                        "typeString": "struct InspectionContract.Inspection"
                      }
                    },
                    "id": 690,
                    "nodeType": "ArrayTypeName",
                    "src": "1119:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Inspection_$666_storage_$dyn_storage_ptr",
                      "typeString": "struct InspectionContract.Inspection[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1118:21:3"
            },
            "scope": 1288,
            "src": "1054:133:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 736,
              "nodeType": "Block",
              "src": "1327:401:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 706,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1361:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 707,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1361:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 705,
                          "name": "producerExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1534,
                          "src": "1346:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1346:26:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520617265206e6f7420612070726f64756365722120506c65617365207265676973746572206173206f6e65",
                        "id": 709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1374:48:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dbb08f64851b685a0f36294d305e2db5057008a52567e5bdec9c2160a57b7398",
                          "typeString": "literal_string \"You are not a producer! Please register as one\""
                        },
                        "value": "You are not a producer! Please register as one"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dbb08f64851b685a0f36294d305e2db5057008a52567e5bdec9c2160a57b7398",
                          "typeString": "literal_string \"You are not a producer! Please register as one\""
                        }
                      ],
                      "id": 704,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1338:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1338:85:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 711,
                  "nodeType": "ExpressionStatement",
                  "src": "1338:85:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 713,
                              "name": "producers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1394,
                              "src": "1442:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Producer_$1371_storage_$",
                                "typeString": "mapping(address => struct ProducerContract.Producer storage ref)"
                              }
                            },
                            "id": 716,
                            "indexExpression": {
                              "expression": {
                                "id": 714,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1452:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 715,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1452:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1442:21:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Producer_$1371_storage",
                              "typeString": "struct ProducerContract.Producer storage ref"
                            }
                          },
                          "id": 717,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "recentInspection",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1360,
                          "src": "1442:38:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1484:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "1442:47:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752068617665206120696e7370656374696f6e2072657175657374204f50454e206f722041434345505445442120576169742061206163746976697374207265616c697a6520696e7370656374696f6e206f7220796f752063616e20636c6f7365206974",
                        "id": 720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1491:104:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6c06c4f9d658f6d0bee949be33756e3bdf523e4cfb9cc40af70a6abee2364d7d",
                          "typeString": "literal_string \"You have a inspection request OPEN or ACCEPTED! Wait a activist realize inspection or you can close it\""
                        },
                        "value": "You have a inspection request OPEN or ACCEPTED! Wait a activist realize inspection or you can close it"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6c06c4f9d658f6d0bee949be33756e3bdf523e4cfb9cc40af70a6abee2364d7d",
                          "typeString": "literal_string \"You have a inspection request OPEN or ACCEPTED! Wait a activist realize inspection or you can close it\""
                        }
                      ],
                      "id": 712,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1434:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1434:162:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 722,
                  "nodeType": "ExpressionStatement",
                  "src": "1434:162:3"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 723,
                      "name": "createRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 802,
                      "src": "1617:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1617:15:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 725,
                  "nodeType": "ExpressionStatement",
                  "src": "1617:15:3"
                },
                {
                  "expression": {
                    "id": 732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 726,
                          "name": "producers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1394,
                          "src": "1643:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Producer_$1371_storage_$",
                            "typeString": "mapping(address => struct ProducerContract.Producer storage ref)"
                          }
                        },
                        "id": 729,
                        "indexExpression": {
                          "expression": {
                            "id": 727,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1653:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1653:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1643:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Producer_$1371_storage",
                          "typeString": "struct ProducerContract.Producer storage ref"
                        }
                      },
                      "id": 730,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "recentInspection",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1360,
                      "src": "1643:38:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 731,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1684:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1643:45:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 733,
                  "nodeType": "ExpressionStatement",
                  "src": "1643:45:3"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1716:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 703,
                  "id": 735,
                  "nodeType": "Return",
                  "src": "1709:11:3"
                }
              ]
            },
            "documentation": {
              "id": 699,
              "nodeType": "StructuredDocumentation",
              "src": "1193:78:3",
              "text": " @dev Allows the current user (producer) request a inspection."
            },
            "functionSelector": "86ae2fb1",
            "id": 737,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestInspection",
            "nameLocation": "1286:17:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 700,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1303:2:3"
            },
            "returnParameters": {
              "id": 703,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 702,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 737,
                  "src": "1321:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 701,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1321:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1320:6:3"
            },
            "scope": 1288,
            "src": "1277:451:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 801,
              "nodeType": "Block",
              "src": "1778:489:3",
              "statements": [
                {
                  "assignments": [
                    741
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 741,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "1794:2:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 801,
                      "src": "1789:7:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 740,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1789:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 745,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 742,
                      "name": "inspectionsCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 683,
                      "src": "1799:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 743,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1818:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1799:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1789:30:3"
                },
                {
                  "assignments": [
                    747
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 747,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "1835:5:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 801,
                      "src": "1830:10:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 746,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1830:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 751,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 748,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 741,
                      "src": "1843:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 749,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1848:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1843:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1830:19:3"
                },
                {
                  "assignments": [
                    757
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 757,
                      "mutability": "mutable",
                      "name": "isas",
                      "nameLocation": "1876:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 801,
                      "src": "1860:20:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                        "typeString": "uint256[][]"
                      },
                      "typeName": {
                        "baseType": {
                          "baseType": {
                            "id": 754,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "1860:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 755,
                          "nodeType": "ArrayTypeName",
                          "src": "1860:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "id": 756,
                        "nodeType": "ArrayTypeName",
                        "src": "1860:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                          "typeString": "uint256[][]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 758,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1860:20:3"
                },
                {
                  "assignments": [
                    760
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 760,
                      "mutability": "mutable",
                      "name": "expiresIn",
                      "nameLocation": "1896:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 801,
                      "src": "1891:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 759,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1891:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 765,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 761,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "1908:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1908:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 763,
                      "name": "inspactionExpireIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 642,
                      "src": "1926:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1908:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1891:53:3"
                },
                {
                  "assignments": [
                    768
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 768,
                      "mutability": "mutable",
                      "name": "inspection",
                      "nameLocation": "1973:10:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 801,
                      "src": "1955:28:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                        "typeString": "struct InspectionContract.Inspection"
                      },
                      "typeName": {
                        "id": 767,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 766,
                          "name": "Inspection",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 666,
                          "src": "1955:10:3"
                        },
                        "referencedDeclaration": 666,
                        "src": "1955:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$666_storage_ptr",
                          "typeString": "struct InspectionContract.Inspection"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 785,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 770,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 741,
                        "src": "1997:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 771,
                          "name": "InspectionStatus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 639,
                          "src": "2001:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_InspectionStatus_$639_$",
                            "typeString": "type(enum InspectionContract.InspectionStatus)"
                          }
                        },
                        "id": 772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "OPEN",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 635,
                        "src": "2001:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_InspectionStatus_$639",
                          "typeString": "enum InspectionContract.InspectionStatus"
                        }
                      },
                      {
                        "expression": {
                          "id": 773,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2024:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2024:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 775,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2036:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2036:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 777,
                        "name": "isas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 757,
                        "src": "2100:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2107:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 779,
                        "name": "expiresIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 760,
                        "src": "2110:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 780,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "2122:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "2122:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2139:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 783,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 747,
                        "src": "2142:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_InspectionStatus_$639",
                          "typeString": "enum InspectionContract.InspectionStatus"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 769,
                      "name": "Inspection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 666,
                      "src": "1986:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Inspection_$666_storage_ptr_$",
                        "typeString": "type(struct InspectionContract.Inspection storage pointer)"
                      }
                    },
                    "id": 784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1986:162:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                      "typeString": "struct InspectionContract.Inspection memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1955:193:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 789,
                        "name": "inspection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 768,
                        "src": "2180:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                          "typeString": "struct InspectionContract.Inspection memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                          "typeString": "struct InspectionContract.Inspection memory"
                        }
                      ],
                      "expression": {
                        "id": 786,
                        "name": "inspectionsList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 670,
                        "src": "2159:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Inspection_$666_storage_$dyn_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref[] storage ref"
                        }
                      },
                      "id": 788,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2159:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Inspection_$666_storage_$dyn_storage_ptr_$_t_struct$_Inspection_$666_storage_$returns$__$bound_to$_t_array$_t_struct$_Inspection_$666_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct InspectionContract.Inspection storage ref[] storage pointer,struct InspectionContract.Inspection storage ref)"
                      }
                    },
                    "id": 790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2159:32:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 791,
                  "nodeType": "ExpressionStatement",
                  "src": "2159:32:3"
                },
                {
                  "expression": {
                    "id": 796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 792,
                        "name": "inspections",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 681,
                        "src": "2202:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$666_storage_$",
                          "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                        }
                      },
                      "id": 794,
                      "indexExpression": {
                        "id": 793,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 741,
                        "src": "2214:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2202:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$666_storage",
                        "typeString": "struct InspectionContract.Inspection storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 795,
                      "name": "inspection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 768,
                      "src": "2220:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                        "typeString": "struct InspectionContract.Inspection memory"
                      }
                    },
                    "src": "2202:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$666_storage",
                      "typeString": "struct InspectionContract.Inspection storage ref"
                    }
                  },
                  "id": 797,
                  "nodeType": "ExpressionStatement",
                  "src": "2202:28:3"
                },
                {
                  "expression": {
                    "id": 799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "2241:18:3",
                    "subExpression": {
                      "id": 798,
                      "name": "inspectionsCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 683,
                      "src": "2241:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 800,
                  "nodeType": "ExpressionStatement",
                  "src": "2241:18:3"
                }
              ]
            },
            "id": 802,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createRequest",
            "nameLocation": "1754:13:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 738,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1767:2:3"
            },
            "returnParameters": {
              "id": 739,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1778:0:3"
            },
            "scope": 1288,
            "src": "1745:522:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 866,
              "nodeType": "Block",
              "src": "2564:432:3",
              "statements": [
                {
                  "assignments": [
                    817
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 817,
                      "mutability": "mutable",
                      "name": "inspection",
                      "nameLocation": "2593:10:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 866,
                      "src": "2575:28:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                        "typeString": "struct InspectionContract.Inspection"
                      },
                      "typeName": {
                        "id": 816,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 815,
                          "name": "Inspection",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 666,
                          "src": "2575:10:3"
                        },
                        "referencedDeclaration": 666,
                        "src": "2575:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$666_storage_ptr",
                          "typeString": "struct InspectionContract.Inspection"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 821,
                  "initialValue": {
                    "baseExpression": {
                      "id": 818,
                      "name": "inspections",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 681,
                      "src": "2606:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$666_storage_$",
                        "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                      }
                    },
                    "id": 820,
                    "indexExpression": {
                      "id": 819,
                      "name": "inspectionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 805,
                      "src": "2618:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2606:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$666_storage",
                      "typeString": "struct InspectionContract.Inspection storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2575:56:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_InspectionStatus_$639",
                      "typeString": "enum InspectionContract.InspectionStatus"
                    },
                    "id": 826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 822,
                        "name": "inspection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 817,
                        "src": "2646:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                          "typeString": "struct InspectionContract.Inspection memory"
                        }
                      },
                      "id": 823,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 647,
                      "src": "2646:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_InspectionStatus_$639",
                        "typeString": "enum InspectionContract.InspectionStatus"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 824,
                        "name": "InspectionStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 639,
                        "src": "2667:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_InspectionStatus_$639_$",
                          "typeString": "type(enum InspectionContract.InspectionStatus)"
                        }
                      },
                      "id": 825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "OPEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 635,
                      "src": "2667:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_InspectionStatus_$639",
                        "typeString": "enum InspectionContract.InspectionStatus"
                      }
                    },
                    "src": "2646:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 829,
                  "nodeType": "IfStatement",
                  "src": "2642:60:3",
                  "trueBody": {
                    "expression": {
                      "hexValue": "66616c7365",
                      "id": 827,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2697:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "functionReturnParameters": 814,
                    "id": 828,
                    "nodeType": "Return",
                    "src": "2690:12:3"
                  }
                },
                {
                  "expression": {
                    "id": 835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 830,
                        "name": "inspection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 817,
                        "src": "2715:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                          "typeString": "struct InspectionContract.Inspection memory"
                        }
                      },
                      "id": 832,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 647,
                      "src": "2715:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_InspectionStatus_$639",
                        "typeString": "enum InspectionContract.InspectionStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 833,
                        "name": "InspectionStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 639,
                        "src": "2735:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_InspectionStatus_$639_$",
                          "typeString": "type(enum InspectionContract.InspectionStatus)"
                        }
                      },
                      "id": 834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ACCEPTED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 638,
                      "src": "2735:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_InspectionStatus_$639",
                        "typeString": "enum InspectionContract.InspectionStatus"
                      }
                    },
                    "src": "2715:45:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_InspectionStatus_$639",
                      "typeString": "enum InspectionContract.InspectionStatus"
                    }
                  },
                  "id": 836,
                  "nodeType": "ExpressionStatement",
                  "src": "2715:45:3"
                },
                {
                  "expression": {
                    "id": 842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 837,
                        "name": "inspection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 817,
                        "src": "2771:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                          "typeString": "struct InspectionContract.Inspection memory"
                        }
                      },
                      "id": 839,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "updatedAt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 663,
                      "src": "2771:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 840,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "2794:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 841,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2794:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2771:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 843,
                  "nodeType": "ExpressionStatement",
                  "src": "2771:38:3"
                },
                {
                  "expression": {
                    "id": 849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 844,
                        "name": "inspection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 817,
                        "src": "2820:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                          "typeString": "struct InspectionContract.Inspection memory"
                        }
                      },
                      "id": 846,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "activistWallet",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 651,
                      "src": "2820:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 847,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2848:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 848,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2848:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2820:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 850,
                  "nodeType": "ExpressionStatement",
                  "src": "2820:38:3"
                },
                {
                  "expression": {
                    "id": 855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 851,
                        "name": "inspections",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 681,
                        "src": "2869:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$666_storage_$",
                          "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                        }
                      },
                      "id": 853,
                      "indexExpression": {
                        "id": 852,
                        "name": "inspectionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 805,
                        "src": "2881:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2869:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$666_storage",
                        "typeString": "struct InspectionContract.Inspection storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 854,
                      "name": "inspection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 817,
                      "src": "2897:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                        "typeString": "struct InspectionContract.Inspection memory"
                      }
                    },
                    "src": "2869:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$666_storage",
                      "typeString": "struct InspectionContract.Inspection storage ref"
                    }
                  },
                  "id": 856,
                  "nodeType": "ExpressionStatement",
                  "src": "2869:38:3"
                },
                {
                  "expression": {
                    "id": 862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 857,
                        "name": "inspectionsList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 670,
                        "src": "2920:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Inspection_$666_storage_$dyn_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref[] storage ref"
                        }
                      },
                      "id": 860,
                      "indexExpression": {
                        "expression": {
                          "id": 858,
                          "name": "inspection",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 817,
                          "src": "2936:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                            "typeString": "struct InspectionContract.Inspection memory"
                          }
                        },
                        "id": 859,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "index",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 665,
                        "src": "2936:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2920:33:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$666_storage",
                        "typeString": "struct InspectionContract.Inspection storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 861,
                      "name": "inspection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 817,
                      "src": "2956:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                        "typeString": "struct InspectionContract.Inspection memory"
                      }
                    },
                    "src": "2920:46:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$666_storage",
                      "typeString": "struct InspectionContract.Inspection storage ref"
                    }
                  },
                  "id": 863,
                  "nodeType": "ExpressionStatement",
                  "src": "2920:46:3"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2984:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 814,
                  "id": 865,
                  "nodeType": "Return",
                  "src": "2977:11:3"
                }
              ]
            },
            "documentation": {
              "id": 803,
              "nodeType": "StructuredDocumentation",
              "src": "2279:159:3",
              "text": " @dev Allows the current user (activist) accept a inspection.\n @param inspectionId The id of the inspection that the activist want accept."
            },
            "functionSelector": "e7857502",
            "id": 867,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 808,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 807,
                  "name": "requireActivist",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1274,
                  "src": "2496:15:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "2496:15:3"
              },
              {
                "arguments": [
                  {
                    "id": 810,
                    "name": "inspectionId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 805,
                    "src": "2536:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 811,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 809,
                  "name": "requireInspectionExists",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1287,
                  "src": "2512:23:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "2512:37:3"
              }
            ],
            "name": "acceptInspection",
            "nameLocation": "2453:16:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 806,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 805,
                  "mutability": "mutable",
                  "name": "inspectionId",
                  "nameLocation": "2475:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 867,
                  "src": "2470:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 804,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2470:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2469:19:3"
            },
            "returnParameters": {
              "id": 814,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 813,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 867,
                  "src": "2558:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 812,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2558:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2557:6:3"
            },
            "scope": 1288,
            "src": "2444:552:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 928,
              "nodeType": "Block",
              "src": "3437:445:3",
              "statements": [
                {
                  "condition": {
                    "id": 887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3452:25:3",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 885,
                          "name": "inspectionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 870,
                          "src": "3464:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 884,
                        "name": "isAccepted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1262,
                        "src": "3453:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view returns (bool)"
                        }
                      },
                      "id": 886,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3453:24:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 890,
                  "nodeType": "IfStatement",
                  "src": "3448:43:3",
                  "trueBody": {
                    "expression": {
                      "hexValue": "66616c7365",
                      "id": 888,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3486:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "functionReturnParameters": 883,
                    "id": 889,
                    "nodeType": "Return",
                    "src": "3479:12:3"
                  }
                },
                {
                  "condition": {
                    "id": 894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3506:30:3",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 892,
                          "name": "inspectionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 870,
                          "src": "3523:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 891,
                        "name": "isActivistOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1246,
                        "src": "3507:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view returns (bool)"
                        }
                      },
                      "id": 893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3507:29:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 897,
                  "nodeType": "IfStatement",
                  "src": "3502:48:3",
                  "trueBody": {
                    "expression": {
                      "hexValue": "66616c7365",
                      "id": 895,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3545:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "functionReturnParameters": 883,
                    "id": 896,
                    "nodeType": "Return",
                    "src": "3538:12:3"
                  }
                },
                {
                  "assignments": [
                    900
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 900,
                      "mutability": "mutable",
                      "name": "inspection",
                      "nameLocation": "3581:10:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 928,
                      "src": "3563:28:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                        "typeString": "struct InspectionContract.Inspection"
                      },
                      "typeName": {
                        "id": 899,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 898,
                          "name": "Inspection",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 666,
                          "src": "3563:10:3"
                        },
                        "referencedDeclaration": 666,
                        "src": "3563:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$666_storage_ptr",
                          "typeString": "struct InspectionContract.Inspection"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 904,
                  "initialValue": {
                    "baseExpression": {
                      "id": 901,
                      "name": "inspections",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 681,
                      "src": "3594:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$666_storage_$",
                        "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                      }
                    },
                    "id": 903,
                    "indexExpression": {
                      "id": 902,
                      "name": "inspectionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 870,
                      "src": "3606:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3594:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$666_storage",
                      "typeString": "struct InspectionContract.Inspection storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3563:56:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 906,
                        "name": "inspection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 900,
                        "src": "3647:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                          "typeString": "struct InspectionContract.Inspection memory"
                        }
                      },
                      {
                        "id": 907,
                        "name": "isas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 874,
                        "src": "3659:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                          "typeString": "struct InspectionContract.Inspection memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        }
                      ],
                      "id": 905,
                      "name": "markAsRealized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1083,
                      "src": "3632:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Inspection_$666_memory_ptr_$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (struct InspectionContract.Inspection memory,uint256[] memory[] memory)"
                      }
                    },
                    "id": 908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3632:32:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 909,
                  "nodeType": "ExpressionStatement",
                  "src": "3632:32:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 911,
                        "name": "inspectionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 870,
                        "src": "3700:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 910,
                      "name": "afterRealizeInspection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1230,
                      "src": "3677:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3677:36:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 913,
                  "nodeType": "ExpressionStatement",
                  "src": "3677:36:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 915,
                        "name": "inspectionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 870,
                        "src": "3744:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 916,
                          "name": "inspection",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 900,
                          "src": "3758:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                            "typeString": "struct InspectionContract.Inspection memory"
                          }
                        },
                        "id": 917,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isaPoints",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 657,
                        "src": "3758:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 914,
                      "name": "updateProducerIsa",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1105,
                      "src": "3726:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_int256_$returns$__$",
                        "typeString": "function (uint256,int256)"
                      }
                    },
                    "id": 918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3726:53:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 919,
                  "nodeType": "ExpressionStatement",
                  "src": "3726:53:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 921,
                          "name": "inspection",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 900,
                          "src": "3817:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                            "typeString": "struct InspectionContract.Inspection memory"
                          }
                        },
                        "id": 922,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "producerWallet",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 649,
                        "src": "3817:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "32303030",
                        "id": 923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3844:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000_by_1",
                          "typeString": "int_const 2000"
                        },
                        "value": "2000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_2000_by_1",
                          "typeString": "int_const 2000"
                        }
                      ],
                      "id": 920,
                      "name": "approveProducerNewTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1562,
                      "src": "3792:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3792:57:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 925,
                  "nodeType": "ExpressionStatement",
                  "src": "3792:57:3"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3870:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 883,
                  "id": 927,
                  "nodeType": "Return",
                  "src": "3863:11:3"
                }
              ]
            },
            "documentation": {
              "id": 868,
              "nodeType": "StructuredDocumentation",
              "src": "3010:276:3",
              "text": " @dev Allow a activist realize a inspection and mark as INSPECTED\n @param inspectionId The id of the inspection to be realized\n @param isas The uint[][] of categoryId and isaIndex. Ex: isas = [ [categoryId, isaIndex], [categoryId, isaIndex] ]"
            },
            "functionSelector": "b92bd2d9",
            "id": 929,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 877,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 876,
                  "name": "requireActivist",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1274,
                  "src": "3369:15:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "3369:15:3"
              },
              {
                "arguments": [
                  {
                    "id": 879,
                    "name": "inspectionId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 870,
                    "src": "3409:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 880,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 878,
                  "name": "requireInspectionExists",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1287,
                  "src": "3385:23:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "3385:37:3"
              }
            ],
            "name": "realizeInspection",
            "nameLocation": "3302:17:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 870,
                  "mutability": "mutable",
                  "name": "inspectionId",
                  "nameLocation": "3325:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 929,
                  "src": "3320:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 869,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3320:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 874,
                  "mutability": "mutable",
                  "name": "isas",
                  "nameLocation": "3355:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 929,
                  "src": "3339:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                    "typeString": "uint256[][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 871,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3339:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 872,
                      "nodeType": "ArrayTypeName",
                      "src": "3339:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      }
                    },
                    "id": 873,
                    "nodeType": "ArrayTypeName",
                    "src": "3339:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                      "typeString": "uint256[][]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3319:41:3"
            },
            "returnParameters": {
              "id": 883,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 882,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 929,
                  "src": "3431:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 881,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3431:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3430:6:3"
            },
            "scope": 1288,
            "src": "3293:589:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 955,
              "nodeType": "Block",
              "src": "4164:130:3",
              "statements": [
                {
                  "assignments": [
                    943
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 943,
                      "mutability": "mutable",
                      "name": "isas",
                      "nameLocation": "4192:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 955,
                      "src": "4176:20:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                        "typeString": "uint256[][]"
                      },
                      "typeName": {
                        "baseType": {
                          "baseType": {
                            "id": 940,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "4176:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 941,
                          "nodeType": "ArrayTypeName",
                          "src": "4176:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "id": 942,
                        "nodeType": "ArrayTypeName",
                        "src": "4176:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                          "typeString": "uint256[][]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 946,
                  "initialValue": {
                    "expression": {
                      "id": 944,
                      "name": "inspection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 933,
                      "src": "4199:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                        "typeString": "struct InspectionContract.Inspection memory"
                      }
                    },
                    "id": 945,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "isas",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 655,
                    "src": "4199:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                      "typeString": "uint256[] memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4176:38:3"
                },
                {
                  "assignments": [
                    948
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 948,
                      "mutability": "mutable",
                      "name": "isaPoints",
                      "nameLocation": "4229:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 955,
                      "src": "4225:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 947,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "4225:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 952,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 950,
                        "name": "isas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 943,
                        "src": "4254:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        }
                      ],
                      "id": 949,
                      "name": "sumIsaPoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1030,
                      "src": "4241:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$returns$_t_int256_$",
                        "typeString": "function (uint256[] memory[] memory) pure returns (int256)"
                      }
                    },
                    "id": 951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4241:18:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4225:34:3"
                },
                {
                  "expression": {
                    "id": 953,
                    "name": "isaPoints",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 948,
                    "src": "4277:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 937,
                  "id": 954,
                  "nodeType": "Return",
                  "src": "4270:16:3"
                }
              ]
            },
            "documentation": {
              "id": 930,
              "nodeType": "StructuredDocumentation",
              "src": "3888:192:3",
              "text": " @dev Calculate the ISA of the inspection based in the category and the ISA level of the category\n @param inspection Receive the inspected inspection with your isas levels"
            },
            "id": 956,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateIsa",
            "nameLocation": "4095:12:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 934,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 933,
                  "mutability": "mutable",
                  "name": "inspection",
                  "nameLocation": "4126:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 956,
                  "src": "4108:28:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                    "typeString": "struct InspectionContract.Inspection"
                  },
                  "typeName": {
                    "id": 932,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 931,
                      "name": "Inspection",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 666,
                      "src": "4108:10:3"
                    },
                    "referencedDeclaration": 666,
                    "src": "4108:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$666_storage_ptr",
                      "typeString": "struct InspectionContract.Inspection"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4107:30:3"
            },
            "returnParameters": {
              "id": 937,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 936,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 956,
                  "src": "4160:3:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 935,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "4160:3:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4159:5:3"
            },
            "scope": 1288,
            "src": "4086:208:3",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1029,
              "nodeType": "Block",
              "src": "4511:290:3",
              "statements": [
                {
                  "assignments": [
                    971
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 971,
                      "mutability": "mutable",
                      "name": "points",
                      "nameLocation": "4536:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1029,
                      "src": "4522:20:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_int256_$5_memory_ptr",
                        "typeString": "int256[5]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 969,
                          "name": "int",
                          "nodeType": "ElementaryTypeName",
                          "src": "4522:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 970,
                        "length": {
                          "hexValue": "35",
                          "id": 968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4526:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "4522:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int256_$5_storage_ptr",
                          "typeString": "int256[5]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 995,
                  "initialValue": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "hexValue": "3130",
                            "id": 974,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4550:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            }
                          ],
                          "id": 973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4546:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_int256_$",
                            "typeString": "type(int256)"
                          },
                          "typeName": {
                            "id": 972,
                            "name": "int",
                            "nodeType": "ElementaryTypeName",
                            "src": "4546:3:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4546:7:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "35",
                            "id": 978,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4559:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            },
                            "value": "5"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            }
                          ],
                          "id": 977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4555:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_int256_$",
                            "typeString": "type(int256)"
                          },
                          "typeName": {
                            "id": 976,
                            "name": "int",
                            "nodeType": "ElementaryTypeName",
                            "src": "4555:3:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 979,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4555:6:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 982,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4567:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 981,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4563:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_int256_$",
                            "typeString": "type(int256)"
                          },
                          "typeName": {
                            "id": 980,
                            "name": "int",
                            "nodeType": "ElementaryTypeName",
                            "src": "4563:3:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4563:6:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 987,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "-",
                            "prefix": true,
                            "src": "4575:2:3",
                            "subExpression": {
                              "hexValue": "35",
                              "id": 986,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4576:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_5_by_1",
                                "typeString": "int_const 5"
                              },
                              "value": "5"
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_minus_5_by_1",
                              "typeString": "int_const -5"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_minus_5_by_1",
                              "typeString": "int_const -5"
                            }
                          ],
                          "id": 985,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4571:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_int256_$",
                            "typeString": "type(int256)"
                          },
                          "typeName": {
                            "id": 984,
                            "name": "int",
                            "nodeType": "ElementaryTypeName",
                            "src": "4571:3:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4571:7:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 992,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "-",
                            "prefix": true,
                            "src": "4584:3:3",
                            "subExpression": {
                              "hexValue": "3130",
                              "id": 991,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4585:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_minus_10_by_1",
                              "typeString": "int_const -10"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_minus_10_by_1",
                              "typeString": "int_const -10"
                            }
                          ],
                          "id": 990,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4580:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_int256_$",
                            "typeString": "type(int256)"
                          },
                          "typeName": {
                            "id": 989,
                            "name": "int",
                            "nodeType": "ElementaryTypeName",
                            "src": "4580:3:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4580:8:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "id": 994,
                    "isConstant": false,
                    "isInlineArray": true,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4545:44:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_int256_$5_memory_ptr",
                      "typeString": "int256[5] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4522:67:3"
                },
                {
                  "assignments": [
                    997
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 997,
                      "mutability": "mutable",
                      "name": "isaPoints",
                      "nameLocation": "4604:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1029,
                      "src": "4600:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 996,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "4600:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 999,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4616:1:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4600:17:3"
                },
                {
                  "body": {
                    "id": 1025,
                    "nodeType": "Block",
                    "src": "4670:97:3",
                    "statements": [
                      {
                        "assignments": [
                          1012
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1012,
                            "mutability": "mutable",
                            "name": "isaIndex",
                            "nameLocation": "4690:8:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 1025,
                            "src": "4685:13:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1011,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "4685:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1018,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1013,
                              "name": "isas",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 961,
                              "src": "4701:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                                "typeString": "uint256[] memory[] memory"
                              }
                            },
                            "id": 1015,
                            "indexExpression": {
                              "id": 1014,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1001,
                              "src": "4706:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4701:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 1017,
                          "indexExpression": {
                            "hexValue": "31",
                            "id": 1016,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4709:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4701:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4685:26:3"
                      },
                      {
                        "expression": {
                          "id": 1023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1019,
                            "name": "isaPoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 997,
                            "src": "4726:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 1020,
                              "name": "points",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 971,
                              "src": "4739:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_int256_$5_memory_ptr",
                                "typeString": "int256[5] memory"
                              }
                            },
                            "id": 1022,
                            "indexExpression": {
                              "id": 1021,
                              "name": "isaIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1012,
                              "src": "4746:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4739:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "4726:29:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 1024,
                        "nodeType": "ExpressionStatement",
                        "src": "4726:29:3"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1004,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1001,
                      "src": "4648:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1005,
                        "name": "isas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 961,
                        "src": "4652:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          "typeString": "uint256[] memory[] memory"
                        }
                      },
                      "id": 1006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4652:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4648:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1026,
                  "initializationExpression": {
                    "assignments": [
                      1001
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1001,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4641:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1026,
                        "src": "4635:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1000,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "4635:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1003,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1002,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4645:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4635:11:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1009,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4665:3:3",
                      "subExpression": {
                        "id": 1008,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1001,
                        "src": "4665:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 1010,
                    "nodeType": "ExpressionStatement",
                    "src": "4665:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "4630:137:3"
                },
                {
                  "expression": {
                    "id": 1027,
                    "name": "isaPoints",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 997,
                    "src": "4784:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 965,
                  "id": 1028,
                  "nodeType": "Return",
                  "src": "4777:16:3"
                }
              ]
            },
            "documentation": {
              "id": 957,
              "nodeType": "StructuredDocumentation",
              "src": "4300:134:3",
              "text": " @dev Sum the ISA points\n @param isas The isas values as list of [[categoryId, isaIndex], [categoryId, isaIndex]]"
            },
            "id": 1030,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sumIsaPoints",
            "nameLocation": "4449:12:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 962,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 961,
                  "mutability": "mutable",
                  "name": "isas",
                  "nameLocation": "4478:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1030,
                  "src": "4462:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                    "typeString": "uint256[][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 958,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4462:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 959,
                      "nodeType": "ArrayTypeName",
                      "src": "4462:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      }
                    },
                    "id": 960,
                    "nodeType": "ArrayTypeName",
                    "src": "4462:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                      "typeString": "uint256[][]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4461:22:3"
            },
            "returnParameters": {
              "id": 965,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 964,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1030,
                  "src": "4506:3:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 963,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "4506:3:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4505:5:3"
            },
            "scope": 1288,
            "src": "4440:361:3",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1082,
              "nodeType": "Block",
              "src": "4894:315:3",
              "statements": [
                {
                  "expression": {
                    "id": 1044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1040,
                        "name": "inspection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1033,
                        "src": "4908:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                          "typeString": "struct InspectionContract.Inspection memory"
                        }
                      },
                      "id": 1042,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isas",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 655,
                      "src": "4908:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                        "typeString": "uint256[] memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1043,
                      "name": "isas",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1037,
                      "src": "4926:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                        "typeString": "uint256[] memory[] memory"
                      }
                    },
                    "src": "4908:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                      "typeString": "uint256[] memory[] memory"
                    }
                  },
                  "id": 1045,
                  "nodeType": "ExpressionStatement",
                  "src": "4908:22:3"
                },
                {
                  "expression": {
                    "id": 1051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1046,
                        "name": "inspection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1033,
                        "src": "4941:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                          "typeString": "struct InspectionContract.Inspection memory"
                        }
                      },
                      "id": 1048,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 647,
                      "src": "4941:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_InspectionStatus_$639",
                        "typeString": "enum InspectionContract.InspectionStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1049,
                        "name": "InspectionStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 639,
                        "src": "4961:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_InspectionStatus_$639_$",
                          "typeString": "type(enum InspectionContract.InspectionStatus)"
                        }
                      },
                      "id": 1050,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "INSPECTED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 637,
                      "src": "4961:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_InspectionStatus_$639",
                        "typeString": "enum InspectionContract.InspectionStatus"
                      }
                    },
                    "src": "4941:46:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_InspectionStatus_$639",
                      "typeString": "enum InspectionContract.InspectionStatus"
                    }
                  },
                  "id": 1052,
                  "nodeType": "ExpressionStatement",
                  "src": "4941:46:3"
                },
                {
                  "expression": {
                    "id": 1058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1053,
                        "name": "inspection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1033,
                        "src": "4998:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                          "typeString": "struct InspectionContract.Inspection memory"
                        }
                      },
                      "id": 1055,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "updatedAt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 663,
                      "src": "4998:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1056,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "5021:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "5021:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4998:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1059,
                  "nodeType": "ExpressionStatement",
                  "src": "4998:38:3"
                },
                {
                  "expression": {
                    "id": 1066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1060,
                        "name": "inspection",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1033,
                        "src": "5047:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                          "typeString": "struct InspectionContract.Inspection memory"
                        }
                      },
                      "id": 1062,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isaPoints",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 657,
                      "src": "5047:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1064,
                          "name": "inspection",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1033,
                          "src": "5083:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                            "typeString": "struct InspectionContract.Inspection memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                            "typeString": "struct InspectionContract.Inspection memory"
                          }
                        ],
                        "id": 1063,
                        "name": "calculateIsa",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 956,
                        "src": "5070:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_struct$_Inspection_$666_memory_ptr_$returns$_t_int256_$",
                          "typeString": "function (struct InspectionContract.Inspection memory) pure returns (int256)"
                        }
                      },
                      "id": 1065,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5070:24:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "5047:47:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 1067,
                  "nodeType": "ExpressionStatement",
                  "src": "5047:47:3"
                },
                {
                  "expression": {
                    "id": 1073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1068,
                        "name": "inspections",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 681,
                        "src": "5105:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$666_storage_$",
                          "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                        }
                      },
                      "id": 1071,
                      "indexExpression": {
                        "expression": {
                          "id": 1069,
                          "name": "inspection",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1033,
                          "src": "5117:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                            "typeString": "struct InspectionContract.Inspection memory"
                          }
                        },
                        "id": 1070,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "id",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 644,
                        "src": "5117:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5105:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$666_storage",
                        "typeString": "struct InspectionContract.Inspection storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1072,
                      "name": "inspection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1033,
                      "src": "5134:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                        "typeString": "struct InspectionContract.Inspection memory"
                      }
                    },
                    "src": "5105:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$666_storage",
                      "typeString": "struct InspectionContract.Inspection storage ref"
                    }
                  },
                  "id": 1074,
                  "nodeType": "ExpressionStatement",
                  "src": "5105:39:3"
                },
                {
                  "expression": {
                    "id": 1080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1075,
                        "name": "inspectionsList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 670,
                        "src": "5155:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Inspection_$666_storage_$dyn_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref[] storage ref"
                        }
                      },
                      "id": 1078,
                      "indexExpression": {
                        "expression": {
                          "id": 1076,
                          "name": "inspection",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1033,
                          "src": "5171:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                            "typeString": "struct InspectionContract.Inspection memory"
                          }
                        },
                        "id": 1077,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "index",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 665,
                        "src": "5171:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5155:33:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$666_storage",
                        "typeString": "struct InspectionContract.Inspection storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1079,
                      "name": "inspection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1033,
                      "src": "5191:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                        "typeString": "struct InspectionContract.Inspection memory"
                      }
                    },
                    "src": "5155:46:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$666_storage",
                      "typeString": "struct InspectionContract.Inspection storage ref"
                    }
                  },
                  "id": 1081,
                  "nodeType": "ExpressionStatement",
                  "src": "5155:46:3"
                }
              ]
            },
            "id": 1083,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "markAsRealized",
            "nameLocation": "4818:14:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1038,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1033,
                  "mutability": "mutable",
                  "name": "inspection",
                  "nameLocation": "4851:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1083,
                  "src": "4833:28:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                    "typeString": "struct InspectionContract.Inspection"
                  },
                  "typeName": {
                    "id": 1032,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1031,
                      "name": "Inspection",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 666,
                      "src": "4833:10:3"
                    },
                    "referencedDeclaration": 666,
                    "src": "4833:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$666_storage_ptr",
                      "typeString": "struct InspectionContract.Inspection"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1037,
                  "mutability": "mutable",
                  "name": "isas",
                  "nameLocation": "4879:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1083,
                  "src": "4863:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                    "typeString": "uint256[][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 1034,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4863:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1035,
                      "nodeType": "ArrayTypeName",
                      "src": "4863:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      }
                    },
                    "id": 1036,
                    "nodeType": "ArrayTypeName",
                    "src": "4863:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                      "typeString": "uint256[][]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4832:52:3"
            },
            "returnParameters": {
              "id": 1039,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4894:0:3"
            },
            "scope": 1288,
            "src": "4809:400:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1104,
              "nodeType": "Block",
              "src": "5287:144:3",
              "statements": [
                {
                  "assignments": [
                    1091
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1091,
                      "mutability": "mutable",
                      "name": "producerAddress",
                      "nameLocation": "5306:15:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1104,
                      "src": "5298:23:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1090,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5298:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1096,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 1092,
                        "name": "inspections",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 681,
                        "src": "5324:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$666_storage_$",
                          "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                        }
                      },
                      "id": 1094,
                      "indexExpression": {
                        "id": 1093,
                        "name": "inspectionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1085,
                        "src": "5336:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5324:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$666_storage",
                        "typeString": "struct InspectionContract.Inspection storage ref"
                      }
                    },
                    "id": 1095,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "producerWallet",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 649,
                    "src": "5324:40:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5298:66:3"
                },
                {
                  "expression": {
                    "id": 1102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1097,
                          "name": "producers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1394,
                          "src": "5375:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Producer_$1371_storage_$",
                            "typeString": "mapping(address => struct ProducerContract.Producer storage ref)"
                          }
                        },
                        "id": 1099,
                        "indexExpression": {
                          "id": 1098,
                          "name": "producerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1091,
                          "src": "5385:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5375:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Producer_$1371_storage",
                          "typeString": "struct ProducerContract.Producer storage ref"
                        }
                      },
                      "id": 1100,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isaPoints",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1364,
                      "src": "5375:36:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1101,
                      "name": "isaPoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1087,
                      "src": "5414:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "5375:48:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 1103,
                  "nodeType": "ExpressionStatement",
                  "src": "5375:48:3"
                }
              ]
            },
            "id": 1105,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateProducerIsa",
            "nameLocation": "5226:17:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1088,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1085,
                  "mutability": "mutable",
                  "name": "inspectionId",
                  "nameLocation": "5249:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1105,
                  "src": "5244:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1084,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5244:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1087,
                  "mutability": "mutable",
                  "name": "isaPoints",
                  "nameLocation": "5267:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1105,
                  "src": "5263:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 1086,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "5263:3:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5243:34:3"
            },
            "returnParameters": {
              "id": 1089,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5287:0:3"
            },
            "scope": 1288,
            "src": "5217:214:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1118,
              "nodeType": "Block",
              "src": "5641:41:3",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1114,
                      "name": "inspections",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 681,
                      "src": "5659:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$666_storage_$",
                        "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                      }
                    },
                    "id": 1116,
                    "indexExpression": {
                      "id": 1115,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1108,
                      "src": "5671:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5659:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$666_storage",
                      "typeString": "struct InspectionContract.Inspection storage ref"
                    }
                  },
                  "functionReturnParameters": 1113,
                  "id": 1117,
                  "nodeType": "Return",
                  "src": "5652:22:3"
                }
              ]
            },
            "documentation": {
              "id": 1106,
              "nodeType": "StructuredDocumentation",
              "src": "5445:116:3",
              "text": " @dev Returns a inspection by id if that exists.\n @param id The id of the inspection to return."
            },
            "functionSelector": "f2836670",
            "id": 1119,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInspection",
            "nameLocation": "5576:13:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1108,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "5598:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1119,
                  "src": "5590:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1107,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5590:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5589:12:3"
            },
            "returnParameters": {
              "id": 1113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1112,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1119,
                  "src": "5622:17:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Inspection_$666_memory_ptr",
                    "typeString": "struct InspectionContract.Inspection"
                  },
                  "typeName": {
                    "id": 1111,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1110,
                      "name": "Inspection",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 666,
                      "src": "5622:10:3"
                    },
                    "referencedDeclaration": 666,
                    "src": "5622:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Inspection_$666_storage_ptr",
                      "typeString": "struct InspectionContract.Inspection"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5621:19:3"
            },
            "scope": 1288,
            "src": "5567:115:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1129,
              "nodeType": "Block",
              "src": "5824:41:3",
              "statements": [
                {
                  "expression": {
                    "id": 1127,
                    "name": "inspectionsList",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 670,
                    "src": "5842:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Inspection_$666_storage_$dyn_storage",
                      "typeString": "struct InspectionContract.Inspection storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1126,
                  "id": 1128,
                  "nodeType": "Return",
                  "src": "5835:22:3"
                }
              ]
            },
            "documentation": {
              "id": 1120,
              "nodeType": "StructuredDocumentation",
              "src": "5694:56:3",
              "text": " @dev Returns all requested inspections."
            },
            "functionSelector": "ee699fc1",
            "id": 1130,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInspections",
            "nameLocation": "5765:14:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5779:2:3"
            },
            "returnParameters": {
              "id": 1126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1125,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1130,
                  "src": "5803:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Inspection_$666_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct InspectionContract.Inspection[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1123,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1122,
                        "name": "Inspection",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 666,
                        "src": "5803:10:3"
                      },
                      "referencedDeclaration": 666,
                      "src": "5803:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$666_storage_ptr",
                        "typeString": "struct InspectionContract.Inspection"
                      }
                    },
                    "id": 1124,
                    "nodeType": "ArrayTypeName",
                    "src": "5803:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Inspection_$666_storage_$dyn_storage_ptr",
                      "typeString": "struct InspectionContract.Inspection[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5802:21:3"
            },
            "scope": 1288,
            "src": "5756:109:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1148,
              "nodeType": "Block",
              "src": "6054:70:3",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "4f50454e",
                        "id": 1142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6073:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f76fe33b8a0ebf7aa05740f479d10138c7c15bdc75b10e047cc15be2be15e5b4",
                          "typeString": "literal_string \"OPEN\""
                        },
                        "value": "OPEN"
                      },
                      {
                        "hexValue": "45585049524544",
                        "id": 1143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6081:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd725cfb5ba01ea5dc5a7159cf41eaa54c28dc001805ce2361d3c894e7c2f72a",
                          "typeString": "literal_string \"EXPIRED\""
                        },
                        "value": "EXPIRED"
                      },
                      {
                        "hexValue": "494e53504543544544",
                        "id": 1144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6092:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee5396ce4732a0f90688f3919520a56ad5e5581ce25fa727e167ca44cbd5926f",
                          "typeString": "literal_string \"INSPECTED\""
                        },
                        "value": "INSPECTED"
                      },
                      {
                        "hexValue": "4143434550544544",
                        "id": 1145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6105:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_66a524c81cf8e657f1147e56f41f83002f6210ee7ae7b08d255f786088ae96f7",
                          "typeString": "literal_string \"ACCEPTED\""
                        },
                        "value": "ACCEPTED"
                      }
                    ],
                    "id": 1146,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "6072:44:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_stringliteral_f76fe33b8a0ebf7aa05740f479d10138c7c15bdc75b10e047cc15be2be15e5b4_$_t_stringliteral_bd725cfb5ba01ea5dc5a7159cf41eaa54c28dc001805ce2361d3c894e7c2f72a_$_t_stringliteral_ee5396ce4732a0f90688f3919520a56ad5e5581ce25fa727e167ca44cbd5926f_$_t_stringliteral_66a524c81cf8e657f1147e56f41f83002f6210ee7ae7b08d255f786088ae96f7_$",
                      "typeString": "tuple(literal_string \"OPEN\",literal_string \"EXPIRED\",literal_string \"INSPECTED\",literal_string \"ACCEPTED\")"
                    }
                  },
                  "functionReturnParameters": 1141,
                  "id": 1147,
                  "nodeType": "Return",
                  "src": "6065:51:3"
                }
              ]
            },
            "documentation": {
              "id": 1131,
              "nodeType": "StructuredDocumentation",
              "src": "5877:59:3",
              "text": " @dev Returns all inpections status string."
            },
            "functionSelector": "dd6850c6",
            "id": 1149,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInspectionsStatus",
            "nameLocation": "5951:20:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1132,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5971:2:3"
            },
            "returnParameters": {
              "id": 1141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1134,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1149,
                  "src": "5994:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1133,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5994:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1136,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1149,
                  "src": "6009:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1135,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6009:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1138,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1149,
                  "src": "6024:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1137,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6024:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1140,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1149,
                  "src": "6039:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1139,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6039:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5993:60:3"
            },
            "scope": 1288,
            "src": "5942:182:3",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1164,
              "nodeType": "Block",
              "src": "6342:49:3",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1157,
                          "name": "inspections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 681,
                          "src": "6360:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$666_storage_$",
                            "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                          }
                        },
                        "id": 1159,
                        "indexExpression": {
                          "id": 1158,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1152,
                          "src": "6372:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6360:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$666_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      },
                      "id": 1160,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 644,
                      "src": "6360:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 1161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6382:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "6360:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1156,
                  "id": 1163,
                  "nodeType": "Return",
                  "src": "6353:30:3"
                }
              ]
            },
            "documentation": {
              "id": 1150,
              "nodeType": "StructuredDocumentation",
              "src": "6136:136:3",
              "text": " @dev Check if an inspections exists in mapping.\n @param id The id of the inspection that the activist want accept."
            },
            "functionSelector": "fe5a4fa4",
            "id": 1165,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "inspectionExists",
            "nameLocation": "6287:16:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1152,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "6312:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1165,
                  "src": "6304:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1151,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6304:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6303:12:3"
            },
            "returnParameters": {
              "id": 1156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1155,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1165,
                  "src": "6336:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1154,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6336:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6335:6:3"
            },
            "scope": 1288,
            "src": "6278:113:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1229,
              "nodeType": "Block",
              "src": "6645:728:3",
              "statements": [
                {
                  "assignments": [
                    1172
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1172,
                      "mutability": "mutable",
                      "name": "producerWallet",
                      "nameLocation": "6664:14:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1229,
                      "src": "6656:22:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1171,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6656:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1177,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 1173,
                        "name": "inspections",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 681,
                        "src": "6681:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$666_storage_$",
                          "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                        }
                      },
                      "id": 1175,
                      "indexExpression": {
                        "id": 1174,
                        "name": "inspectionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1168,
                        "src": "6693:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6681:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$666_storage",
                        "typeString": "struct InspectionContract.Inspection storage ref"
                      }
                    },
                    "id": 1176,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "producerWallet",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 649,
                    "src": "6681:40:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6656:65:3"
                },
                {
                  "assignments": [
                    1179
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1179,
                      "mutability": "mutable",
                      "name": "activistWallet",
                      "nameLocation": "6740:14:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1229,
                      "src": "6732:22:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1178,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6732:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1184,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 1180,
                        "name": "inspections",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 681,
                        "src": "6757:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$666_storage_$",
                          "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                        }
                      },
                      "id": 1182,
                      "indexExpression": {
                        "id": 1181,
                        "name": "inspectionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1168,
                        "src": "6769:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6757:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Inspection_$666_storage",
                        "typeString": "struct InspectionContract.Inspection storage ref"
                      }
                    },
                    "id": 1183,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "activistWallet",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 651,
                    "src": "6757:40:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6732:65:3"
                },
                {
                  "expression": {
                    "id": 1190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1185,
                          "name": "activists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "6901:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Activist_$25_storage_$",
                            "typeString": "mapping(address => struct ActivistContract.Activist storage ref)"
                          }
                        },
                        "id": 1187,
                        "indexExpression": {
                          "id": 1186,
                          "name": "activistWallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1179,
                          "src": "6911:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6901:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Activist_$25_storage",
                          "typeString": "struct ActivistContract.Activist storage ref"
                        }
                      },
                      "id": 1188,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "recentInspection",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19,
                      "src": "6901:42:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6946:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "6901:50:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1191,
                  "nodeType": "ExpressionStatement",
                  "src": "6901:50:3"
                },
                {
                  "expression": {
                    "id": 1196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "6962:44:3",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1192,
                          "name": "activists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "6962:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Activist_$25_storage_$",
                            "typeString": "mapping(address => struct ActivistContract.Activist storage ref)"
                          }
                        },
                        "id": 1194,
                        "indexExpression": {
                          "id": 1193,
                          "name": "activistWallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1179,
                          "src": "6972:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6962:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Activist_$25_storage",
                          "typeString": "struct ActivistContract.Activist storage ref"
                        }
                      },
                      "id": 1195,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalInspections",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "6962:42:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1197,
                  "nodeType": "ExpressionStatement",
                  "src": "6962:44:3"
                },
                {
                  "expression": {
                    "id": 1203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1198,
                          "name": "producers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1394,
                          "src": "7105:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Producer_$1371_storage_$",
                            "typeString": "mapping(address => struct ProducerContract.Producer storage ref)"
                          }
                        },
                        "id": 1200,
                        "indexExpression": {
                          "id": 1199,
                          "name": "producerWallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1172,
                          "src": "7115:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7105:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Producer_$1371_storage",
                          "typeString": "struct ProducerContract.Producer storage ref"
                        }
                      },
                      "id": 1201,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "recentInspection",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1360,
                      "src": "7105:42:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7150:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "7105:50:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1204,
                  "nodeType": "ExpressionStatement",
                  "src": "7105:50:3"
                },
                {
                  "expression": {
                    "id": 1209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "7166:41:3",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1205,
                          "name": "producers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1394,
                          "src": "7166:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Producer_$1371_storage_$",
                            "typeString": "mapping(address => struct ProducerContract.Producer storage ref)"
                          }
                        },
                        "id": 1207,
                        "indexExpression": {
                          "id": 1206,
                          "name": "producerWallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1172,
                          "src": "7176:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7166:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Producer_$1371_storage",
                          "typeString": "struct ProducerContract.Producer storage ref"
                        }
                      },
                      "id": 1208,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalRequests",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1362,
                      "src": "7166:39:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1210,
                  "nodeType": "ExpressionStatement",
                  "src": "7166:41:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 1215,
                          "name": "inspections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 681,
                          "src": "7265:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$666_storage_$",
                            "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                          }
                        },
                        "id": 1217,
                        "indexExpression": {
                          "id": 1216,
                          "name": "inspectionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1168,
                          "src": "7277:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7265:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$666_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Inspection_$666_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 1211,
                          "name": "userInspections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 676,
                          "src": "7228:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Inspection_$666_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct InspectionContract.Inspection storage ref[] storage ref)"
                          }
                        },
                        "id": 1213,
                        "indexExpression": {
                          "id": 1212,
                          "name": "producerWallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1172,
                          "src": "7244:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7228:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Inspection_$666_storage_$dyn_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref[] storage ref"
                        }
                      },
                      "id": 1214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "7228:36:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Inspection_$666_storage_$dyn_storage_ptr_$_t_struct$_Inspection_$666_storage_$returns$__$bound_to$_t_array$_t_struct$_Inspection_$666_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct InspectionContract.Inspection storage ref[] storage pointer,struct InspectionContract.Inspection storage ref)"
                      }
                    },
                    "id": 1218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7228:63:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1219,
                  "nodeType": "ExpressionStatement",
                  "src": "7228:63:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 1224,
                          "name": "inspections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 681,
                          "src": "7339:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$666_storage_$",
                            "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                          }
                        },
                        "id": 1226,
                        "indexExpression": {
                          "id": 1225,
                          "name": "inspectionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1168,
                          "src": "7351:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7339:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$666_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Inspection_$666_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 1220,
                          "name": "userInspections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 676,
                          "src": "7302:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Inspection_$666_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct InspectionContract.Inspection storage ref[] storage ref)"
                          }
                        },
                        "id": 1222,
                        "indexExpression": {
                          "id": 1221,
                          "name": "activistWallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1179,
                          "src": "7318:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7302:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Inspection_$666_storage_$dyn_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref[] storage ref"
                        }
                      },
                      "id": 1223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "7302:36:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Inspection_$666_storage_$dyn_storage_ptr_$_t_struct$_Inspection_$666_storage_$returns$__$bound_to$_t_array$_t_struct$_Inspection_$666_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct InspectionContract.Inspection storage ref[] storage pointer,struct InspectionContract.Inspection storage ref)"
                      }
                    },
                    "id": 1227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7302:63:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1228,
                  "nodeType": "ExpressionStatement",
                  "src": "7302:63:3"
                }
              ]
            },
            "documentation": {
              "id": 1166,
              "nodeType": "StructuredDocumentation",
              "src": "6403:176:3",
              "text": " @dev Inscrement producer and activist request action and mark both as no recent open requests and inspection\n @param inspectionId The id of the inspection"
            },
            "id": 1230,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "afterRealizeInspection",
            "nameLocation": "6594:22:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1168,
                  "mutability": "mutable",
                  "name": "inspectionId",
                  "nameLocation": "6622:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1230,
                  "src": "6617:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1167,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6617:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6616:19:3"
            },
            "returnParameters": {
              "id": 1170,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6645:0:3"
            },
            "scope": 1288,
            "src": "6585:788:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1245,
              "nodeType": "Block",
              "src": "7457:80:3",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1237,
                          "name": "inspections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 681,
                          "src": "7475:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$666_storage_$",
                            "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                          }
                        },
                        "id": 1239,
                        "indexExpression": {
                          "id": 1238,
                          "name": "inspectionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1232,
                          "src": "7487:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7475:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$666_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      },
                      "id": 1240,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "activistWallet",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 651,
                      "src": "7475:40:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 1241,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "7519:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "7519:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7475:54:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1236,
                  "id": 1244,
                  "nodeType": "Return",
                  "src": "7468:61:3"
                }
              ]
            },
            "id": 1246,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isActivistOwner",
            "nameLocation": "7394:15:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1233,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1232,
                  "mutability": "mutable",
                  "name": "inspectionId",
                  "nameLocation": "7415:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1246,
                  "src": "7410:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1231,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7410:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7409:19:3"
            },
            "returnParameters": {
              "id": 1236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1235,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1246,
                  "src": "7451:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1234,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7451:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7450:6:3"
            },
            "scope": 1288,
            "src": "7385:152:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1261,
              "nodeType": "Block",
              "src": "7613:87:3",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_InspectionStatus_$639",
                      "typeString": "enum InspectionContract.InspectionStatus"
                    },
                    "id": 1259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1253,
                          "name": "inspections",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 681,
                          "src": "7631:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Inspection_$666_storage_$",
                            "typeString": "mapping(uint256 => struct InspectionContract.Inspection storage ref)"
                          }
                        },
                        "id": 1255,
                        "indexExpression": {
                          "id": 1254,
                          "name": "inspectionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1248,
                          "src": "7643:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7631:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Inspection_$666_storage",
                          "typeString": "struct InspectionContract.Inspection storage ref"
                        }
                      },
                      "id": 1256,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 647,
                      "src": "7631:32:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_InspectionStatus_$639",
                        "typeString": "enum InspectionContract.InspectionStatus"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 1257,
                        "name": "InspectionStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 639,
                        "src": "7667:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_InspectionStatus_$639_$",
                          "typeString": "type(enum InspectionContract.InspectionStatus)"
                        }
                      },
                      "id": 1258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ACCEPTED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 638,
                      "src": "7667:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_InspectionStatus_$639",
                        "typeString": "enum InspectionContract.InspectionStatus"
                      }
                    },
                    "src": "7631:61:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1252,
                  "id": 1260,
                  "nodeType": "Return",
                  "src": "7624:68:3"
                }
              ]
            },
            "id": 1262,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAccepted",
            "nameLocation": "7555:10:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1248,
                  "mutability": "mutable",
                  "name": "inspectionId",
                  "nameLocation": "7571:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1262,
                  "src": "7566:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1247,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7566:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7565:19:3"
            },
            "returnParameters": {
              "id": 1252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1251,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1262,
                  "src": "7607:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1250,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7607:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7606:6:3"
            },
            "scope": 1288,
            "src": "7546:154:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1273,
              "nodeType": "Block",
              "src": "7757:117:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1266,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "7791:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1267,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7791:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1265,
                          "name": "activistExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 174,
                          "src": "7776:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 1268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7776:26:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206d75737420626520616e2061637469766973742120506c65617365207265676973746572206173206f6e65",
                        "id": 1269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7804:49:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7bbfd9faa9484f9e64abeb985fc471aa16487b87a888d85c1e82273be1ee2169",
                          "typeString": "literal_string \"You must be an activist! Please register as one\""
                        },
                        "value": "You must be an activist! Please register as one"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7bbfd9faa9484f9e64abeb985fc471aa16487b87a888d85c1e82273be1ee2169",
                          "typeString": "literal_string \"You must be an activist! Please register as one\""
                        }
                      ],
                      "id": 1264,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7768:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7768:86:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1271,
                  "nodeType": "ExpressionStatement",
                  "src": "7768:86:3"
                },
                {
                  "id": 1272,
                  "nodeType": "PlaceholderStatement",
                  "src": "7865:1:3"
                }
              ]
            },
            "id": 1274,
            "name": "requireActivist",
            "nameLocation": "7739:15:3",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1263,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7754:2:3"
            },
            "src": "7730:144:3",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1286,
              "nodeType": "Block",
              "src": "7938:102:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1280,
                            "name": "inspectionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1276,
                            "src": "7974:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1279,
                          "name": "inspectionExists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1165,
                          "src": "7957:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 1281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7957:30:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320696e7370656374696f6e20646f6e277420657869737473",
                        "id": 1282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7989:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_27cfb18fb102385a5a6ad3d3f29c4023f127e18857272a0d2d3c2847a7e8e217",
                          "typeString": "literal_string \"This inspection don't exists\""
                        },
                        "value": "This inspection don't exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_27cfb18fb102385a5a6ad3d3f29c4023f127e18857272a0d2d3c2847a7e8e217",
                          "typeString": "literal_string \"This inspection don't exists\""
                        }
                      ],
                      "id": 1278,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7949:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7949:71:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1284,
                  "nodeType": "ExpressionStatement",
                  "src": "7949:71:3"
                },
                {
                  "id": 1285,
                  "nodeType": "PlaceholderStatement",
                  "src": "8031:1:3"
                }
              ]
            },
            "id": 1287,
            "name": "requireInspectionExists",
            "nameLocation": "7895:23:3",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1277,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1276,
                  "mutability": "mutable",
                  "name": "inspectionId",
                  "nameLocation": "7924:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1287,
                  "src": "7919:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1275,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7919:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7918:19:3"
            },
            "src": "7886:154:3",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1289,
        "src": "254:7795:3",
        "usedErrors": []
      }
    ],
    "src": "0:8051:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2022-01-08T18:19:13.099Z",
  "devdoc": {
    "details": "Inpection action core",
    "kind": "dev",
    "methods": {
      "acceptInspection(uint256)": {
        "details": "Allows the current user (activist) accept a inspection.",
        "params": {
          "inspectionId": "The id of the inspection that the activist want accept."
        }
      },
      "activistExists(address)": {
        "details": "Check if a specific activist exists",
        "returns": {
          "_0": "a bool that represent if a activist exists or not"
        }
      },
      "addActivist(string,string,string,string,string,string,string)": {
        "details": "Allow a new register of activist",
        "params": {
          "cep": "the cep of the activist",
          "city": "the of the activist",
          "country": "the country where the activist is",
          "document": "the document of activist",
          "documentType": "the document type type of activist. CPF/CNPJ",
          "name": "the name of the activist",
          "state": "the state of the activist"
        },
        "returns": {
          "_0": "a Activist"
        }
      },
      "addCategory(string,string,string,string,string,string,string)": {
        "details": "add a new category",
        "params": {
          "description": "the description of category",
          "name": "the name of category",
          "neutro": "the description text to this metric",
          "partiallyNotSustainable": "the description text to this metric",
          "partiallySustainable": "the description text to this metric",
          "totallyNotSustainable": "the description text to this metric",
          "totallySustainable": "the description text to this metric"
        },
        "returns": {
          "_0": "bool"
        }
      },
      "addProducer(string,string,string,string,string,string,string)": {
        "details": "Allow a new register of producer",
        "params": {
          "cep": "the cep of the producer",
          "city": "the of the producer",
          "country": "the country where the producer is",
          "document": "the document of producer",
          "documentType": "the document type type of producer. CPF/CNPJ",
          "name": "the name of the producer",
          "state": "the state of the producer"
        }
      },
      "getActivist(address)": {
        "details": "Return a specific activist",
        "params": {
          "addr": "the address of the activist."
        }
      },
      "getActivists()": {
        "details": "Returns all registered activists",
        "returns": {
          "_0": "Activist struct array"
        }
      },
      "getCategories()": {
        "details": "Returns all added categories",
        "returns": {
          "_0": "category struc array"
        }
      },
      "getCategory(uint256)": {
        "details": "get a specific category",
        "params": {
          "id": "the id of a category"
        }
      },
      "getInspection(uint256)": {
        "details": "Returns a inspection by id if that exists.",
        "params": {
          "id": "The id of the inspection to return."
        }
      },
      "getInspections()": {
        "details": "Returns all requested inspections."
      },
      "getInspectionsHistory(address)": {
        "details": "Allows the current user producer/activist get all yours inspections with status INSPECTED"
      },
      "getInspectionsStatus()": {
        "details": "Returns all inpections status string."
      },
      "getIsas()": {
        "details": "Returns all isas string."
      },
      "getProducer(address)": {
        "details": "Return a specific producer",
        "params": {
          "addr": "the address of the producer."
        }
      },
      "getProducers()": {
        "details": "Returns all registered producers",
        "returns": {
          "_0": "Producer struct array"
        }
      },
      "getUser(address)": {
        "details": "Returns the user type if the user is registered",
        "params": {
          "addr": "the user address that want check if exists"
        }
      },
      "getUserTypes()": {
        "details": "Returns the enum UserType of the system"
      },
      "inspectionExists(uint256)": {
        "details": "Check if an inspections exists in mapping.",
        "params": {
          "id": "The id of the inspection that the activist want accept."
        }
      },
      "producerExists(address)": {
        "details": "Check if a specific producer exists",
        "returns": {
          "_0": "a bool that represent if a producer exists or not"
        }
      },
      "realizeInspection(uint256,uint256[][])": {
        "details": "Allow a activist realize a inspection and mark as INSPECTED",
        "params": {
          "inspectionId": "The id of the inspection to be realized",
          "isas": "The uint[][] of categoryId and isaIndex. Ex: isas = [ [categoryId, isaIndex], [categoryId, isaIndex] ]"
        }
      },
      "requestInspection()": {
        "details": "Allows the current user (producer) request a inspection."
      },
      "vote(uint256)": {
        "details": "Allow a user vote in a category",
        "params": {
          "id": "the id of a category that receives a vote."
        },
        "returns": {
          "_0": "category struc array"
        }
      }
    },
    "title": "InspectionContract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}